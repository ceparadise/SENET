post-tested iteration
category cluster
human behaviour
single-piece flow
storage efficiency
heavyweight process
four-address instruction
scale
information item
computational object template
executive
daily meeting
architectural design phase
roll
distributed processing
output place
unit
sensitivity analysis
information item content
entry field
punch list
complete table
complexity matrix
extended entry table
high level language
innovation and planning
consistency
point inflation
information item type
third-generation language
interpret
computerize
spike
collection-valued property
risk management process
replay
commit message
project team
measurement process
reference expression
dynamic resource allocation
process dimension
text page
code tuning
reuse sponsor
system architect
program structure diagram
agile release train
triple constraint
robustness
stabilization phase
facilitation
loaded origin
reserved word in a computer language
online
requirements analysis
manufacturing phase
event synchronization
semantic error
iteration retrospective
communication interface
synchronous message communication
intermediate software product
technical management
machine-dependent
calling sequence
high-level net
domain
subject domain
quality requirement
unit testing
diagnostic
threat modeling
artifact
chain type
software requirement
star schema
time class
design inspection
conversational
continuous deployment
data repository
effectiveness assessment
nonidentifying relationship
maintenance
padding
antipattern
late start date
private
access method
relationship
virtual storage
remote job entry
resource histogram
convertibility
critical path methodology
tailoring guideline
figurative constant
emotions seismogram
state
zFile
story splitting
design-to cost
mutable class
attribute indicator
forward pass
operating system
system entity
software quality characteristic
product analysis
relocating assembler
second-generation language
logic diagram
sustainable pace
compile
bill of materials
independent
anticipatory process
staff-hour
software project
constant
action stub
specific address
three-point estimate
entry criteria
decompile
invest
purpose statement
static schema
recoverability
process area
class
classification
object identifier
collection-valued class
multitasking
design element
test design specification
design entity
quality factor
access
schedule performance index
conflict
embedded computer system
certification process
mandatory category
back-up
information analysis
primary key
compiler directive source statement
executive state
abstract design
generalization
deployment
logical record
taxonomy
glass box
processor
monitoring
nonintrinsic relationship
software monitor
successor activity
method standard
user requirements
object program
revision
product authority
program
risk management
activation
microchip
bottom-up
transaction cost
relative chain frequency
predictive metric value
step-by-step operation
hostile backout
product measures
acceptance test
simulator
aggregate responsibility
software requirements analysis
partial cluster
responsibility assignment matrix
deliverable
plan-driven process
percent complete
paper documentation
operational scenario
product sashimi
transition condition
develop project management plan
consistent
contract
approach
stub
target machine
data trace
synchronous message communication with reply
Boolean expression
information system
orphan
beneficiary
schedule management plan
Unified Modeling Language
path convergence
lead time
breakpoint
global compaction
term
dynamic allocation
contribution
design view
implied needs
window
junction
Government Off The Shelf
expert system
channel
loopback
project specification
internal measure
reflexive ancestor
active redundancy
maintenance infrastructure
sprint demo
extend
big-bang testing
definition is advanced as a proposed standard
dynamic invocation
risk state
postmortem dump
application server
task type
back-to-back testing
error prediction
mechanicals
multiple inclusive selective construct
alternate flow
story test
variance
technical debt
program design language
design document
glass-box testing
operation field
relevant stakeholder
integer type
source code generator
help system
counting scope
third normal form
communicational cohesion
level
statement
prototyping
automatic data processing
system of systems
migrated attribute
program flowchart
musketeer attitude
project management software
selective dump
attribute for quality measure
modular decomposition
internal attribute
accept
business process sketch
process capability level
time-critical task
mutually exclusive clustering
trace link
process action team
acceptance test driven development
dynamic binding
feature team
key
certification artifact
overlay supervisor
functional architecture
F-profile
design pattern
uncertainty
unit requirements documentation
application software
flow of control
software unit
sandbox
component
computer instruction
N 2 diagram
demonstration
work task
product management
process metric
development specification
project communications management
clash
corrective maintenance
well-engineered web site
alternate key
structured program
capsule manager
automated or assisted software process
reverse proxy
appraisal participants
software
export process
interim function point count
double-operand instruction
local variable
confidence threshold
test report
message
epic owner
contractor
intrinsic
incomplete cluster
breaking the build
rule-based language
parallel development
memory capacity
secondary risk
annotate
subject domain responsibility
functional language
project quality management
nondevelopmental
networking
static analysis
network logic
machine language
event sequence analysis
extensibility
relative address
caution
sprint mapping
object reference
prettyprinting
product family
principal
values
validation test
absolute assembler
static error
problem description
managed process
arrow segment
technical performance measurement
essential Scrum
performance specification
syntax
evaluation records
existing software
listing
iteration velocity
source control
resource-limited schedule
peripheral equipment
systematic reuse
storage capacity
function name
assumptions analysis
graph
ordered list
rational unified process
replication schema
failure mode
crystal
tunneling
root cause analysis
security branch
system stakeholder
relocation factor
story points
diagram title
quality measure element
upload
undirected graph
migration transparency
self-descriptiveness
current extent
start date
incident
story mapping
process reference model
system
waste
effectiveness
interface role
specialize
transform-centered design
development branch
verify scope
auto-deploy
staging stream
pseudo-op
actual parameter
class-level operation
initiating processes
continuous representation
en dash
burn down chart
reserve
defect repair
trade study
white box
complex adaptive system
microinstruction
device
velocity
granularity
Cynefin
predictive process
mode
resource
fast feedback
design-to-cost
cross-referencer
generation
hacker
capability maturity model
stand up
control schedule
estimate costs
sign up for tasks
run stream
task structuring
source language
machine readable
process group
ceremony
empiricism
work package
change record
program management
sprint plan
bidirectional traceability
tightly coupled message communication without reply
request for tender
enterprise architect
risk acceptance
list function
initial marking
software testing
transformation analysis
submit primitive
transactional function
two level encoding
web
user experience ux
computer software component
closing processes
information management
schedule compression
parent diagram
idle workers
finish date
sizing
data store
data warehouse
main program
memory
work product
qualification requirement
operation interface signature
control breakpoint
software design requirement
crashing
task complete definition
cadence
operations
imperative construct
basic interworking facility
abstract class
call arrow
product backlog refinement
agile software management
development project function point count
long-term asset
change control board
persona
categorization
capability indicator
type
genba
subordinate web site
sequential
time-now date
transition mode
microcomputer
external interface file
data flow graph
root compiler
computer system
implementation
unit of measurement
maintainability
proof of correctness
virtual memory
cloning
embedded software
methodology element
cost constraint
functional complexity
operator
single machine microinstruction
bottom-up estimating
process improvement project
selective choice construct
reconcile
Monte Carlo analysis
garbage collection
integrity assurance authority
associative literal
measurement experience base
equivalent faults
black-box testing
instance-level operation
measure of performance
backlog
support software
four-plus-one address instruction
no-operation
linked data
t-shirt sizing
log off
relocation transparency
higher-level management
strategic technical debt
work effort
software acquisition process
element
principle of least astonishment
external output
state name
commit war
address space
diversity
step
abstraction
mapping completeness
non-key attribute
code generator
signal interface signature
passive white space
external input
initial program loader
branch
project portfolio
portlet
mob programming
arc
first-generation language
edit
slave state
checkpoint
design strategy
planning board
descendent diagram
identifying relationship
project deliverable
independent state class
entrance
gap
residual control
path expression
nest
customer
common coupling
complexity of a function
firm-fixed-price Contract
immediate data
operational product
system integration
programmer manual
name
request for quotation
optional subgroup
level 1 initiation routine
software project life cycle model
concurrent communication diagram
progressive elaboration
organization chart
system-of-interest
workspace
arrow label
meta-object
S-curve
modular programming
fault-tolerant
technology viewpoint
reactivation
category discriminator
acceptance criteria
priority ceiling protocol
disclaimer
top-down design
defensive programming
function point table
minimum marketable features
endnotes
lifecycle tool
unit development folder
risk category
test data generator
sample instance table
manufacturer
shared resources
backout
documentation plan
definition of ready
reference dimension
input arrow
life-cycle cost
planning game
uniqueness constraint
character
master schedule
source
version control
control language
build
cluster template
job step
acquisition strategy
software design verification
project library
post-condition
early finish date
practice
location facility
magic number
information viewpoint
project area
meaning
scrum master
memory compaction
event history
load
sync
original source statement
criteria
software support
whitespace
report performance
symbolic address
black box
cast
running time
layout chart
input
dot voting
software life cycle process
server
transaction schema
requirements allocation
team selection plan
inline code
backward pass
test environment
arrow
initialization section
information product
state transition diagram
problem domain
unstratified language
starting address
finite state machine
derived attribute
risk leverage factor
firmware
navigational aids
the operand
adaptation parameter
staffing management plan
picture
integration hell
computing system tool
macro library
inherited attribute
requirements partitioning
basic engineering object
structured programming
engineering change proposal
generation language
dynamic breakpoint
control Information
required inputs
domain expert
software requirements review
linkage editor
single-valued property
value trace
object set
pig
system software
protected
word
architectural epic kanban
value map
software repository
program counter
architectural epics
assignment statement
nonkey attribute
software transition
critical range
top-down decomposition
project management plan
component standard
item of documentation
ideal hours
project
computer graphics
transition
portal
real-time scheduling theory
localization
computer performance evaluation
design fault
software engineering environment
end user
office automation
errata
automation
usability testing
bit
subject area
argument
generalization taxonomy
interrupt service routine
enhancement project function point count
project phase
mandatory subgroup
simple design
assessment output
plan procurement
assessment participant
metric
period
wearout-failure period
project file
coordination
generator
modular
offset
nanoinstruction
abend
product configuration identification functional baseline
quality assurance
point design
invest acronym
rule
timely throughput
test case
accessibility
heartbeat retrospective
developer unit
Eclipse
quality management plan
glossary
underlying license
activity
modeling tool
data communication
optional attribute
prototype
software system
high-level Petri Net graph
asynchronous
transfer file
sponsor
processing logic
macro
complexity
unknown unknowns
Simple Cloud Identity Management
search path
architecting
interactive
retirement phase
navigation
specification tree
concept phase
enabling system
release burndown chart
instruction modifier
raw requirement
agile software development methodology
move
antifragility
acquisition
sample instance
application area level
reparent
T-profile
behavior driven development
implementation phase
serial
analogous estimating
manage project team
meta-attribute
bubble chart
team release plan
product baseline
contract administration
reliability
testing task iteration
algebraic language
application manager
release goal
application
disassembler
representation
software life cycle model
system maintenance
partial correctness
entry
unnecessary formality
dynamic analysis
interactive language
first normal form
suspicion profile
element type
object
prioritized list
release plan
A-0 context diagram
output
productivity
daily standup
model note number
accident
fifth-generation language
lowclass
transaction file
interface design document
fail
resource group
attribute group
software development library
burn-in period
entity-relationship relationships among them
data set definition
stepwise refinement
meta-entity
virtual machine
resource allocation
maintainer
chip
schedule
timing analyzer
fault dictionary
testability
Identity Management
sprint goal
single done
object-oriented design
software requirements specification
process purpose
dumb terminal
adaptation data
downward compatible
chain
formal language
iteration
white-box testing
dynamic storage allocation
project leader
stream interface signature
outgoing change set
process performance
return on investment
flow target
functional testing
participant property
defect arrival rate
Certified Scrum Product Owner
project team directory
online documentation
analysis model
open distributed processing
discrete data
request for change
key-style view
component testing
no-op
technical requirements
static
checkpointing
risk analysis
high level
basic symbol
collective ownership
product line
schedule baseline
visual display unit
report server
project scope
mixed mode
subject tool
as-of date
links explorer
downward compression
throughput rating value
software safety
access permission
intermediate software product needs
commercial-off-the-shelf
software asset management
local compaction
coding
repository workspace
rapid prototyping
run t i m e
performance
process assessment
identity
iteration backlog
develop schedule
test script
generalization structure
software reliability management
characteristic entity
configuration control board
candidate key
computerization
seller
down
portfolio management
higher order language
task board
function field
customer test
dynamic skeleton
sequential construct
limited entry table
prescriptive process
milestone
topic
delegation
associative class
defect
measurand
output primitive
process profile
operational data store
total float
measurement librarian
timeboxing
suspect
initial function point count
roll out
applicability to a functional domain
configuration diagram
software design description
technical complexity adjustment factors
sequential clustering
consumer software package
task completion
trade-off analysis
low-level design
project control
testware
technical complexity adjustment
iterative development
virtual team
define activities
compiler code
installation and checkout phase
computer resource allocation
process attribute rating
stakeholders
distributed team
page turning
tacit knowledge
absolute instruction
log on
rating interval
production
value range constraint
project management system
feature creep
product development effort
branching
quality metric
integrity
specification change notice
acceptance testing
Certified Scrum Professional
observation
supertype
assessor
formal specification
test-first development
resource calendar
data coupling
co-located team
online documentation system
sort
process outcome
computer generation
document set
expected monetary value Analysis
up
maintained
lightweight process
T-shaped skills
attribute
execution efficiency
pseudo code
macroinstruction
assessment indicator
migrated key
branch testing
net graph
ground term
common environment coupling
override
interconnection perspective
software library
final function point count
derived property
pseudo instruction
authoring language
pass criteria
fist to five
Ada
deliver primitive
specification limits
non-identifying relationship
interruption
dynamic relocation
flowcharting
exploratory testing
declaration
of accounts
software development
imposed date
fact build
mean time between failures
operational expense
condition entry
proof
input sort
develop project charter
variable
progressive refinement
dynamic dump
requirements review
global configuration
test summary report
lean software development
composite key
assertion
object-oriented structured design
natural language
readability
menu structure
mean execution time rating value
verification
test
task
weighted shortest job first
organizational unit
log out
operation interface
detailed function point count
fetch
performance indicator
map program
operational testing
split key
closed subroutine
transaction
extensional set
test estimation
procedure
box
blocked
user story
dimension table
result
leading decision
genchi genbutsu
node
measurement process owner
information need
review
specification relationships to one another
standup-daily meeting
statement of work
project initiation
second normal form
error seeding
database design specification
process asset library
requirements engineering
data
interface
cost-plus-fee
waiver
impact analysis
downstream
continuous risk management
procedural cohesion
cost-plus-fixed-fee contract
gadget
availability
offline
internal logical file
influence diagram
mask
symbolic language
external stakeholders
diagnostic manual
global attribute
representation property
single-step operation
assignment
subsystem
repo master
hierarchically consecutive
initiating event
software component
envisioning
dump
ordinal scale
spooler
project management
robotics
project area configuration
instance data
mixed entry table
product backlog
regression testing
role-feature-reason
setup time
periodic task
acceptability
business objective
representation standard
data function type
formal testing
structural testing
symbolic execution
measure
interleave
call list
management process
specification by example
failure ratio
macroassembler
self-documented
software development cycle
program specification
contract management plan
user story points
report standard
complexity points
repo bloat
earned value
nice-to-have features
software safety program
standup
instruction
working storage
arrow role
contract work breakdown structure
high order language
time out
project risk profile
Petri net
supervisor state
tag slide
maintenance manual
identifier
performance testing
dimension data
assumption
bug
incomplete process
timeliness function
crisis
task submission
artifact type
post-implementation review
technical practices
budget at completion
incremental compiler
point
risk management system
checkout
execution result
version
should-cost estimate
control costs
Government-Off-The-Shelf
language mapping
on-line compiler
release engineer
software-based system
organization
model note
clear text file encoding
user manual
design phase
subroutine
quality subfactor
vendor branch
loop control
disassemble
data element type
benchmark
control flow trace
effectiveness analysis
data exception
assessment scope
housekeeping operation
performance measurement baseline
external event
fitness-for-use test
code
resource definition
rapid application development rad
system development cycle
process attribute
enhancement request
personal computer
node index
test plan
team
change authority
personas
maintenance rate
system analysis
schedule based planning
software quality in use
public
printed documentation
workflow
integration testing
workspace flow target
independent entity
work breakdown structure component
presentable
product roadmap
relative size measure
asynchronous message communication
software development notebook
pairing
computational interface template
page table
data functions
estimated function point count
story
realtime
module testing
scheduler
block diagram
user's manual
user documentation
story point
operations manual
heading
sprint review
on-line
identifier-dependent entity
functional configuration audit
contingency allowanceH
query
methodology
risk register
anticipatory buffering
time sharing
self-directed work team
visibility
op code
value engineering
indirect measure
token
executable requirements specification
high-level language
segment
task priority criteria
nanostore
indicative function point count
background processing
burndown chart
subroutine trace
icon
test generator
correctness proof
layout
interpreter
record type
style
echo
version description document
supercomputer
identification
rating level
return
cost management plan
digital
maintenance project
critical chain method
evaluation tool
file type referenced
data abstraction
output assertion
utilization bound theorem
configuration item development record
page zero
causal analysis
failsafe
formalization
agile development practices
user-story-writing workshop
skunkworks
start-to-finish
access token
decision table
software user documentation
crash
quick design session
Chapin chart
exclusive requirement
software feature
completed change set
service export
risk profile
using smartsheet as your agile project management tool
test readiness review
evaluation activity
call by address
discrete type
rules of simplicity
code inspection
done
risk trigger
Groschs law
if-then-else branch
interface requirements specification
predictive metric
three amigos
sprint backlog
risk exposure
effective address
done-done
origin attribute
single-operand instruction
baseline management
process tailoring
assistive technologies
control data
monitor
macro generating program
robust
correctness
operation
jump
flow chart
interoperability testing
team pi objectives
test suite
Representational State Transfer
verifiable
parallel classes
verification sponsor
level of performance
outgoing link
code trace
precondition
estimate to complete
batch size
low-level language
implementable standard
mistake
activity-on-node
surrogate key
work in progress
risk action request
scrumban
optional category
non-delivered source statement
lifecycle
call by value
command
label
object model
unit test framework
code smell
absolute loader
relational data
concurrent
serial construct
configuration item form
total
test effort
indirect instruction
activity attributes
feasibility
arrow meaning
formal qualification review
antifragile
source code
assemble
residual risk
response time
whole-team approach
validation testing
innovation accounting
organization level
application-oriented language
hierarchical decomposition
three-plus-one address instruction
terminal
process capability determination
character type
microcode
timebox
configuration management system
prolog breakpoint
project risk management
engineering
project agreement
perform quantitative analysis
objective
subproject
signature
estimate activity resources
postprocessor
multiprogramming
node tree
tailoring
digraph
ratio
support
cardinality
functional organization
unwind
relocate
schedule development
language processor
time and material contract
grooming
non-intrinsic relationship
soft copy image
two-address instruction
data analysis
modification request
pirate metrics
engineering change
use case model
service primitive
planning poker
state diagram
consequence
order language
design concept
predecessor activity
set
non-deliverable item
computer program component
estimate
waterscrum
execute
service offer
computer language
seeding
tightly coupled message communication
metrics sample
path analysis
enabling tokens
change dump
macro-generating program
private type
page swapping
audit
feature
page reference
monitor and control risks
error processing
net
reserve analysis
program support library
exception handling
architect
Apache Ant
project inception
asynchronous task
engineering interface reference
technique
intrinsic relationship
information processing
software package
simulation
evaluation checklist
fail soft
project integration management
requirements specification language
design methodology
schedule network analysis
argument sort
risk metric
transaction-centered design
software test incident
task behavior specification
generated address
requirements creep
link type
zFolder
maintenance branch
workload model
delivery rate
output argument
data medium
anomaly
identifier dependency
cost of quality
generalize
schedule model
n-level address
multi-component system
scrum framework
tutorial
post-development review
evaluation sponsor
licensing standard
Boolean signature
exit
block allocation
conditional jump
project planning
complete cluster
principle
common block
scheduled start date
meta-scrum
instruction counter
stage
job stream
compaction
instance-level responsibility
algorithmic language
nanocode
software project life cycle
maintenance program
design authority
call reference
physical source statement
parse
temporal cohesion
walk-through
project organization chart
path divergence
common ancestor constraint
integrity level
cross-functional team
output measure
allocated requirement
server-side
optimizing process
develop project team
lifecycle profits
incremental development
mock object
boundary arrow
hammock activity
auto-resolve conflict
detailed design specification
ODP-RM
roll back
co-location
user role
development testing
software development plan
developer
level of effort
exploitation
flexibility
emotions seismograph
Project Management Body of Knowledge
defect aging
precision
control loopback
validated metric
forward recovery
source statement
maintenance plan
powertype
project schedule network diagram
adaptation
copy
submit
integrated circuit
event trace
straight-line code
network
attribute name
shell
bathtub curve
product vision
stakeholder value
call
zComponent
quality evaluation
software quality assurance
agile
visual display terminal
WaterScrum
hybrid computer
access facility
source program
configuration item
interface testing
instruction format
limits
frozen branch
data processing system
decision tree analysis
promotion
machine code
event sequence diagram
delimiter
data function
process action plan
corporate executive level
direct instruction
strong typing
customer uncertainty
Grosch's law
interface type
download
illustrative product
structure clash
spiral model
elementary process
required outputs
contiguous allocation
pseudocode
process improvement program
boundary value
threshold
critical piece first
derived type
invariant schema
data attribute
computer-based software system
dynamic buffering
associative entity
installed function point count
factoring
user group
Delphi technique
verification and validation
backward execution
preparation time
macroprogramming
done checklist
algorithm
bottom-up design
trade secret
meta-meta-entity
quantitative risk analysis
curriculum standard
multiprocessing
agile software development
common data
fifth generation language
stakeholder
cold standby
integration
unspecialize
test class
infant mortality
Planning Poker
attribute data type
multiple readers and writers
instruction length
risk management plan
emergence
RM-ODP
computer-aided design
assemble-and-go
data group
software header
mean time to repair
process
load map
partitioning
task-structuring criteria
minimum releasable features
incremental funding
refactoring
object type set
keyword
object language
man-machine interface
diagram feature reference
playback
information content
spool
jenkins
extreme programming
schedule performance
performance analysis
prescription
multilevel address
kanban
foreground
repair
value class
functional configuration identification
empirical process control
software piracy
backlog grooming
project management team
storage breakpoint
machine-oriented language
control flow
measurement analyst
data management
repo surgery
generic practice
intellectual property
nondeveloped source statement
objref
systematic failure
child box
value chain
topdown
potentially shippable product increment
application boundary
total cluster
property
cynefin
computer aided software engineering
functional service
process owner
reset
nucleus
data element
reading reference
addressing exception
operator manual
output arc
text editor
continuous iteration
derived requirement
chief programmer
base address
report template
if-then-else
preliminary design review
computer word
marking
buffering
chickens
calendar
risk handling
immediate effective instruction
timeliness rating value
invocation deliver
capability
Open Database Connectivity
encoding
common cause
client
task-clustering criteria
test item
economic filter
computing system
parallel run operation
attributed relationship
processing
ideal hour
signal
intermittent fault
build engine
syntactic error
producer
derived data
tree-structured chart
plan risk management
demodularization
foreign key
acquire project team
level of abstraction
release planning
expensed cost
one-to-many relationship
zComponent project
monitoring and controlling processes
planned finish date
procurement documents
address part
diagram number
descendent box
baseline function point count
interoperability
data processing center
working set
basis set
architectural style
unavoidable technical debt
problem report
float
data flow
program status word
binding object
data movement
microprogrammable computer
mobility schema
managed web site
x interceptor
knowledge base
enhancement project
evaluator
level 1 record group
constraint
one-address instruction
risk breakdown structure
process architecture
import process
project resource constraint
detailed design phase
transformation model
feasibility study
mechanism arrow
distribution copy
backlog refinement
pre-tested iteration
test data
Certified Scrum Trainer
requirements traceability matrix
resource leveling
common-environment content coupling
cardinality of a multiset
automated build
complicated domain
computing center
on-screen documentation
human-machine interface
cohesion
notebook computer
relocating loader
multiset
functional process
fragile
optional task
insight backlog
pbi slotting
assist
outsourcing
tool
upward compression
interrupt
coincidental communicational cohesion
requirements phase
contingency plan
repetitive addressing
medium
control program
pattern
purchaser
execution time
pixel
functional domain
electronic mail
active interconnection
minimum delay programming
enterprise value chain
entity type
up time
poker planning
conduct procurements
security policy
automated verification system
correctability
front matter
happy day scenario
generality
program-sensitive fault
common storage
plan quality
Collaborative Lifecycle Management
pigs and chickens
relationship name
note
architectural feature
single level encoding
meta-meta-attribute
utilization
modularization
life cycle model
trailing decision
supporting process
mirror site
authorization
executive program
static binding
macrogenerator
late finish date
viewpoint
common-environment coupling
batch
application system
entity instance
background
coroutine
variable trace
Government off the Shelf
read
diagram boundary
pre-condition
changeover system
assessment record
information retrieval
process management
symbol table
logical source statement
activity type
risk reduction
system requirements review
data input sheet
software design concept
overriding property
bundle
baseline staging stream
Scrum framework
war room
project human resource management
cluster checkpoint
timer event
status code
real time
announcement
non-terminal symbol
page
risk threshold
interrupt latency
action
identify risks
rescue point
write
plan
independent verification and validation
basic path
calling box
enterprise environmental factors
deassembler
program listing
custom software
reusable software product
swarming
table-driven method
user persona
input assertion
static analysis demonstration
updatable argument
call by reference
hardware
block-structured language
relocation dictionary
unambiguous
interconnection feature
computer science
life-cycle model
load-and-go
exploration
information radiators
named constant
functional specification
information processing requirements
macroprocessor
statistically managed process
model page
software configuration management
pragma
verification and validation effort
remote team member
subphase
table of contents
artificial language
flow diagram
program network chart
internal event
viewpoint statement
sequential cohesion
materiel
product planning
transient error
non-developed source statement
operation and maintenance phase
network open end
define scope
performed process
ergonomics
institutionalization
modifiability
modified source statement
test incident report
Kanban
case
reusability
optional
holding cost
program structure chart
conceptual system design
project management knowledge area
chart of accounts
sprint planning
total degree of influence
entity-relationship diagram
destination address
microarchitecture
chief programmer team
direct metric value
diverse redundancy
relative loader
built-in class
capacity
interrupt priority
responsibility
resource breakdown structure
chart
team area
active white space
unconditional jump
signpost
content link
run time
audience research
decompiler
two-level address
fourth generation language
chicken
compression
dimension mapping table
logical layout
program design
stress testing
impediment
requirements management
inheritance
package
close project or phase
scrum sprint
work performance information
test approach
develop human resource plan
multiple-address instruction
test execution
module
direct insert subroutine
computer resource
in-process product
language
exit criteria
system definition reference search
human systems engineering
format
scalar-valued class
project notebook
process capability
end uncertainty
disk
activity group
logical cohesion
Gantt chart
exit routine
read-only
dimension mapping category
product standard
early-failure period
organizational breakdown structure
successful adoption
pause
vertical slice
homogeneous redundancy
functional analysis
root-cause analysis
training
test repeatability
system breakdown structure
numeric
given-when-then
straight-line coding
top-level function
assessment purpose
function
boot
subject system
tightly coupled message communication with reply
iterative construct
cost performance baseline
replication transparency
language definition
differential dump
technical contact
software product developer
software requirements verification
pass
collection class
requirements traceability
scheduled finish date
behavior
subclass responsibility
topology
task mode
test driver
relation
functional decomposition
reproducibility
non-destructive read
cross-compiler
primitive
performing organization
stable branch
start-to-start
capital expenditure
relationship type
provisional assessor
item
error model
acceptance-test-driven development
body metadata
design description
supporting data item
microprocessor
formal review
self-organization
scalar
container interface
perform integrated change control
object adapter
transactional function type
behavior specification
hazard identification
symbol
data characteristic
subtype
access routine
backlog item
severity
flowcharter
notation standard
invocation submit
lag
electronic data interchange
bottleneck
key migration
technical review
system effectiveness
risk mitigation
library
change project function point count
sprint retrospective
semantics
procedural language
closed loop
affinity testing
resume
internal software quality
control-flow trace
realization
query language
software configuration item
design unit
pattern-sensitive fault
reusable product
plan standard
quality model
menu by-pass
page breakage
storyboard
prestore
emergent opportunity
routine
capable process
relocatable address
fault tolerance
class path
loop assertion
program backlog
magic string
structure chart
security interaction policy
variable figurative constant
compatibility
back matter
time slicing
escaped
risk treatment
non-functional requirement
busy
activity code
critical activity
just in time
box name
tree
kano analysis
naive technical debt
hazard
management review
electronic copy
wizard
logical transaction
control point
application area
competent
computer crime
context-sensitive help
effective instruction
multiple exclusive selective construct
project life cycle
sequential process
off-the-shelf
back linking
measurement user
task inversion
chief product owner
information processing system
evaluation group
second generation language
business intelligence
think time
mutation testing
system model
workaround
consumer
deblock
design constraints
network planning
fourth-generation language
transition variables
assessment
design to cost
near-critical activity
block
apportioned effort
dyadic selective construct
call tree
load rule
control account
value
target language
completion code
implied addressing
requirements traceability tool
iterative and incremental process
user-identifiable
support manual
application administration function
cargo cult
status word
functional size
third generation language
enhancement
down time
device interface task
project calendar
real storage
system support
assessment instrument
reference mode
foreground processing
managed network
silent grouping
prompt
list processing language
traceability matrix
call trace
synthetic address
error message
issue
execution trace
diagonal microinstruction
model name abbreviation
literal
interface requirement
single-step execution
extranet
operational concept description
glossary page
dependability
qualitative risk analysis
corporate governance
acceptance
load module
strategic filter
asset
standup meeting
Object Management Group
common
critical path
operand
identifier-independent entity
documentation
incoming change set
portfolio backlog
recommendation
commit
function point analysis
model
fast tracking
hierarchy chart
standby redundancy
model layers
vanity metric
process standard
discard
program increment
assembly code
library definition
lifecycle application
invitation for bid
understandability
hardware design language
committer
skeleton
scalar property
n-address instruction
lookup build
absolute
process measures
nondelivered source statement
perform quality control
test objective
instructional mode
reflexive
release train engineer rte
data date
design specification
agile retrospective
expert judgment
document control
test unit
Nassi-Shneiderman chart
defect density
scope change
stability schema
slush
ScrumMaster
system testing
ELSE-rule
static dump
control scope
lateral compression
redundancy
finish-to-start
Data Movement Service
afferent
semaphore
process improvement objective
conciseness
inner cardinality
lean
operation code
architectural runway
test case specification
traditional development process
first generation fifth generation language
configuration context
system follow-up
appraisal team leader
story grooming
multiset cardinality
storage allocation
software requirements management
feature reference
user
work item
trace
happened-upon technical debt
community
mixed type
road map
thrashing
product owner
network chart
summary activity
discriminator
superclass
fact table
domain model
computer center
supplier
programming
program pi objectives
diagram feature
product metric
artificial intelligence
cardinality constraint
reenterable
incoming link
server friend
indicator value
portfolio metrics
failure mode and effect analysis
cause
continuous delivery
specification language
indigenous error
u-curve optimization
traceable
xenodochial
destructive read
synchronization engine
security testing
standards
K-base
nonfunctional requirements
activation constraint
distribute information
the three cs
namespace
analyst
data breakpoint
distributed development team
system definitions
snapshot dump
continuous improvement
security kernel
functional unit
documentation relationships to one another
action of interest
must-have features
quality in use
lockout
evaluation technology
external software quality
budget
test harness
risk monitoring and control
page frame
debug
mechanism
minimum tasks
business-it alignment
alternate path
validation
request for information
system life cycle software development cycle
change
monitor and control project work
points
evaluation
priority
high-level design
group
address
fibonacci sequence
developmental baseline
e-mail
packaging
basic flow
absolute address
immediate instruction
process architect
expandability
problem definition
validity
throwclear
certified scrum professional
subprogram
notice o f revision
collect requirements
event timeline
hidden
efferent
moscow
rating
early start date
support activity group
footer
documenter
adapter
variability
design architecture
cost-plus-incentive-fee contract
Open Services
supplementary run
marking of a place
synchronous request
build-breaker
validity summary
top-down
data declaration source statement
portfolio
epilog breakpoint
halt
earned value technique
friend
probability and impact matrix
system library
automatic
actual cost of work performed
source control management
input argument
code of accounts
demonstrative product
waterfall model
capsule
application generator
system requirements specification
reliability growth
test suite execution record
machine independent
reentrant
temporal clustering
domain definition
job control language
go to
programmable terminal
quiescing
deviation
actual time estimation
code freeze
entry point
conditions of satisfaction
functional product
requirements specification
boundary
team room
parallel construct
selective trace
development record
machine-readable
program maintenance manual
kernel entity
work authorization system
postcondition
calendar unit
class data
test description
sprint
secondary window
communications domain
system development
three-address instruction
RM-RTF
authority
record element type
assessment input
validated learning
privileged state
path
software quality measure
unit test
workspace snapshot
parameterized high-level net graph
link validity
design characteristic
appraisal findings
executable source statement
local area network
control store
conceptual model
concurrent enabling
parameterized collection class
existence dependency
binary digit
security accreditation
iteration execution
software requirements engineering
input-output coupling
restart point
input-process-output
statistical process control
input arc
cost variance
adaptive maintenance
page type letter
egoless programming
control clustering
bioteam
queue
domain engineer
snapshot
waterfall
single-level encoding
provision
project chartering
testing description
software quality evaluation
discrimination
user-friendly
evaluation module
efficiency
contingency reserve
certification
practices
pseudo-instruction
functionality
specific symbol
pathological coupling
resource management
data base
branchpoint
stand-alone
stop
base practice
feature freeze
timing
evaluation procedure
many-sorted algebra
real-time
termination deliver
categorization scheme
character set
role name
metric value
statement testing
cost as an independent variable
project scope statement
dashboard
architectural description
test coverage
do-nothing operation
interpretive code
expected result
data collection
risk tolerance
perform qualitative analysis
turnaround time
direct address
soft error
data information
include
menu-driven
computer resources
timing diagram
protection exception
unpack
development life cycle
box diagram
repeatability
learning loop
regulation
domain engineering
Viewpoint language
software quality metric
software requirements phase
arrow reference
busy time
dependent entity
data structure diagram
intelligent terminal
merge from current
integrated repository
suite
action entry
interconnection group
decision criteria
recursion
hard failure
health
external quality
critical value
system life cycle
instrument
objective evidence
technical stories
measurement standard
separate documentation
alphanumeric
reentry point
Database Connectivity
entity attribute
Extreme Programming
cost performance index
immutable class
user interface
extension
dynamic error
data flowchart
general system characteristics
computer network
planned start date
enterprise
working space
value adjustment factor
rich hover
claim
backlog item effort
encapsulation
backup
source address
user state
lead
architectural structure
ancestral diagram
exception
central processing unit
special cause
trunk
meta-model
process capability determination sponsor
logical relationship
module data
local change
Artifacts page
program library
software maintenance
verification test
configuration specification
purpose
functional performance requirement
corrective action
matrix organization
component integration test
derived measure
sprint execution
certification criteria
conceptual data model
bag
developers and testers
fail safe
software integrity level
transportability
inductive assertion method
abnormal end
essential scrum
unadjusted function point count
cut-off date
associative entity type
subject-matter expert
widow
transaction transparency
system element
niko-niko calendar
comparator
scope
hard copy
software development process
informal testing
threat
role
primitive type
fixed-scope release
binding endpoint identifier
platform
store
referential integrity
solution
relative estimation
composite type
system resources chart
construction
one-level address
flow
signal interface
failure rate
conversion functionality
immediate address
data structure
identity-style view
simple token
Lifecycle Query Engine
functional test
software development file
convention
initial marking of a place
natural key
captial expenditure
accuracy
assignable cause
emulated user
schedule variance
observation period
computer-aided
information technology
tag
service
human resource planning
dynamic schema
reused source statement
configuration audit
product description
loop invariant
transaction analysis
Ant with Enterprise Extensions
multi-valued property
editor
OAuth
actual duration
discrete
target program
composite task
lessons learned
staged representation
persistence schema
evaluation report
non-procedural programming language
formal requirements language
design level
semantic agreement
first input routine
service desk
digital computer
hierarchical modeling
prediction
substitutability
code of ethics standard
defect report
modifiable
project cost management
perfective maintenance
value list constraint
simple buffering
defect removal
relocator
well-formed requirement
sequence activities
certification property
turnkey
widget
two-plus-one address instruction
measure of effectiveness
data definition
fault tolerant
preventive action
metadata model
degree of confidence
personnel
parent entity
metadata
test driven development
time-scaled schedule network diagram
tunnel notation
work breakdown structure
help text
functional domain categorization
inverse engineering
pretested iteration
reader note
program mutation
pass-fail criteria
code breakpoint
delivered source statement
ground rules
structured programming language
context-aware search
mandatory
Intranet
human resource plan
rescoring
decision
total correctness
entity subtype
instantiation
usability
persistence transparency
resolve
configuration management database
access transparency
perform quality assurance
hierarchical input-process-output
control statement
lean programming
manage stakeholder expectations
protocol
systems analysis
input place
ancestor
horizontal microinstruction
fixed-date release
micro code assembler
business rule
real-world object
notice of revision
outer cardinality
lean ux
test criteria
fail criteria
testing
error tolerance
determine budget
address instruction
pseudo
object module
low level
design constraint
maintainability plan
extendability
condition
programmer
interface control
variant
computational viewpoint
constant-failure period
idle time
instance-level attribute
script
assumptions
check in
development
development team
certified scrum trainer
risk assumption
planning processes
instance
remote batch entry
integrity level scheme
data item
engineering interface reference management domain
risk dimension
binder
U-curve optimization
last responsible moment
portfolio vision
metric validation
process assessment model
big visible charts
preliminary design
nomenclature standard
event
computer software configuration item
tinderbox
mainframe
foldout
safety
context
critical item
low level language
configuration
instrumentation
operation exception
path testing
commitment
interconnection
fault
tier chart
variance analysis
product backlog item
incipient failure
problem state
detailed design review
team member
address modification
storage
spreadsheet program
feature branch
Administer Procurements
real address
reengineering
test log
approved modification
symbolic trace
command language
microoperation
pseudo operation
term evaluation
Monte Carlo simulation
integrate
archival pages
verb phrase
complete procedure
goal
Scrum
aggregation
implementer
preamble breakpoint
assembly language
one-plus-one address address instruction
marginal economics
usability test
pointer
computing system specification concepts
Scrummerfall
transition occurrence
automate
mean execution time
milestone retrospective
boy scout rule
proposed change
computer program
dynamic model
Scrum team
compile-and-go
place
resource monitor task
development plan
level 1 termination routine
forms design sheet
open subroutine
assembler
consecutive
dynamic
deliver
conventions
log in
concurrency
simultaneous
non-primary entity
state data
named constraint
layer
input loopback
sign-on
nonprogrammable terminal
implementation requirement
microprogrammed computer
stream
config spec
meta-meta-relationship
reusable
supervisor
safety-critical software
For Exposition Only page
idle
abstract data type
alpha testing
documentation development staff
Certified ScrumMaster
emulator
syntactic agreement
all-before-any
adjusted size
link
workstation
bug seeding
mechanism loopback
system flowchart
scrummerfall
not printable
requirement standard
portability
working area
evaluation method
technical standard
conformity evaluation report
master library
repository
conversion
engineering interface reference management policy
stream interface
capex
optional nonidentifying relationship
taskboard
effort
client-side
standard process
internal arrow
request
non-time-critical computationally intensive task
corporate board or equivalent body
known technical debt
head
build definition
quality factor value
dialog
burnup chart
security domain
endeavor
physical configuration audit
soft failure
kernel
information radiator
latency
configuration status accounting
test case execution record
software engineering
done list
inductive assertion
risk
crisis management
fail-fast
communication management plan
rework
bus number
data inventory
scalar-valued property
system safety
data model
certified scrummaster
cross-reference tool
global variable
estimate at completion
derived participant party
back link
interface repository
regression test
arc annotation
image processing
reverse engineering
subject matter expert
field of application
operator field
investment
cost-reimbursable contract
many-to-many relationship
selective construct
object-oriented language
Java Database Connectivity
lean agile leaders
host machine
work in process
entity-relationship map
test level
process improvement
evaluation requester
code churn
replication
certified scrum product owner
stable process
initialize
organizational process assets
system demo
System for Cross-domain Identity Management
hierarchy
merge
product engineering
assessment team
enabling
Communication Technology
ideal day
context diagram
measurement function
to-compete-performance index
metacompiler
project release plan
design requirement
design review
cookie
occupational title standard
termination submit
subclass
indicator
multiplicity
software diversity
test automation
theme
category entity
activity list
product owner proxy
deep
subclass cluster
mutation
top box
dimension build
structured walkthrough
project manager
backward recovery
procedure-oriented language
input routine
memory dump
instruction cycle
closed term
modified-off-the-shelf
direct measure
existence constraint
network path
work in progress limits
audience
toolkit
data provider
overflow exception
throughput reference value
bind
budgeted cost of work scheduled
proposal
address format
reference user requirement collection
internal task-structuring criteria
scrum team
product support
simultaneous recursion
calculator
pair programming
initiator
invalid
underflow exception
directory
flag
allocated configuration identification
scaffolding
use case diagram
ancestral box
baseline design
duration
software specification review
list
table heading
program librarian
planning package
owned attribute
initial program load
internationalization
paired programming
detailed design
adjusted function point count
fixed-price-incentive-fee contract
overhead operation
simplicity
association
mitigating function
party
single sign-on
dot notation
end item
mutual exclusion
array
design
schedule analysis
target of process
table
agile project management
system under test
enterprise viewpoint
servant leader
ontology
precompiler
conditional unconditional jump
functional user requirements
data flow diagram
customization
formal design
pipeline
system profile
conformance
inspection
framework
zero-address instruction
immediate control
datum
linking loader
association management facility
collection property
functional functional specification
assessment constraints
business epics
text processing
devops
nondestructive read
functional cohesion
accuracy of measurement
persistent storage
measurement method
software development folder
external inquiry
procedural programming language
build process
assembly
retrospective
triggering event
inputprocess-output chart
content store
user interface task
project attribute
real type
direct metric
node number
ask
desktop publishing
buffer
database
relationship instance
standard
X federation
assembler language
scrum of scrums
source code data
component skew
preprocessor
importer
control board
work authorization
solution domain
portfolio planning
addressing
delivery
risk avoidance
leaf diagram
monadic selective construct
configuration provider
computer software configuration
use case specification
project function point count
re-entrant
verifiable requirements language
definition
test phase
error
operational
assessment process
control chart
violation
software product evaluation
techniques
inspect and adapt
user roles
macro definition
microcode assembler
data set prefix
planned value
release train
frequent releases
internal quality
computer-aided software engineering
definition of done
functional baseline
bootstrap loader
quantity
concurrent task architecture
data-sensitive fault
test design
project procurement management
laptop computer
trademark
web application
information hiding
three questions
software tool
business owners
degree of influence
demand paging
transparency
software reliability
commit privileges
portable computer
software life cycle
retirement
data-structure-oriented design
core dump
external
box detail reference
daily huddle
requirements elicitation
local data
policy
base artifact
instruction time
structured design
critical section
join
track build item
test bed
project scope management
function point count
user view
data bank
description standard
control task
maintenance personnel
web page
counter
mapping
application attribute
conversational compiler
nonprocedural language
quality management
terminal symbol
endeavour
indexed address
verification method
migration
kanban board
program epics
change control system
data structure-centered design
application function point count
writing reference
activity duration
owner
cycle
project management process group
cluster manager
trailer
life cycle processes
plan risk responses
Requirements Management Rich Text Format
product scope description
optional nonidentifying relationship nonidentifying relationship
mean execution time reference value
child diagram
parameter
diagram page
protocol object
project schedule
projectized organization
measurable concept
user acceptance tests
interface task
executing processes
mock-up
program portfolio management
model hierarchy
application lifecycle management
organizational policy
software hazard
vendor
developed source statement
security authority
mandatory nonidentifying relationship
warning
test-driven development
command-driven
deliverables
post-processor
online compiler
endeavor element
problem
risk criteria
address field
compiler generator
test procedure
maintenance enhancement
software design representation
business epic kanban
domain architecture
emergency maintenance
formal evaluation process
discrete effort
class-level attribute
colocation
process capability level rating
idle standby
return value
knowledge
optional requirement
system hazard
multilevel storage
control arrow
concept of operations document
channel capacity
software project life cycle process
continuous forms
integrated team
static breakpoint
algorithmic list processing language
project charter
called diagram
set-up time
interval scale
configuration baseline
data driven testing
patch
added source statements
return code
source statements
project plan
linkage
metamodel
compatible
class-level responsibility
driver
interactive compiler
feature teams
release management
life cycle
working metamodel
request for proposal
entity
deleted source statement
chaotic domain
done-done-done
product life cycle
product configuration identification
local configuration
record
compiler compiler
project level
fault isolation
electronic publishing
tunneled arrow
hardware monitor
opportunity
timeline
Rule and Constraint Language
voice of the customer
data flow trace
documentation tree
completion time theorem
respecialize
estimate activity durations
N-ary relationship
template
numeric character
program construct
direct and manage project execution
system design review
indirect address
iteration burndown chart
requirements derivation
software test environment
performance requirement
buyer
arrows connecting inputs to processing steps and processing steps to outputs
control variable
illustration
multiaddress four-two-address address instruction
escrow
line of code
agile methods
operable
user guide
criticality
passive object
production library
incremental productivity
pilot project
agreement
requirement
single-address instruction
nontechnical requirement
probability
assembler code
operating environment
product line engineering
dependent state class
program definition language
conditional information
project time management
atomic type
acquirer
pack
development project
external interface requirement
division of standards
collapse
process description
traceability
daily scrum
attributive entity type
recursive
epic stories
solicitation package
sprint planning meeting
execution
product backlog grooming
physical requirement
allocation
previously developed software
command driven
security
bootstrap
estimation
content assist
alignment
local customization
termination construct
context of use
user type
architectural design
historical information
normalization
end-user
user interface sketch
anticipatory paging
contractual requirement
analysis
swap
milestone schedule
life-cycle processes
output product
aperiodic task
grade
facility
method engineer
rolling wave planning
respecialize unspecialize
link index provider
order clash
measurement
service management
critical information
precedence diagramming method
desk checking
re-entry point
release
Information-based domain
clear
project snapshot
measuring instrument
dynamic restructuring
parallel
programming in pairs
epic
screen dump
machine address
verso
function type
trend
screen flow
forecast
reuse
slack
report
identify stakeholders
service provider
word processing
specific code
dependency build
explicit address
beta testing
fail fast
total quality management
actual result
cost accounting
computer program abstract
remote terminal emulator
function-oriented design
declarative language
integration test
two-level encoding
post-mortem dump
arity
functionality testing
change control
model name
adoption item
time
performance reports
pivot
Information Technology
startup
valid
primary entity-type
assessment sponsor
specification
product
application frameworks
deployment plan
control
counting rule
approved change request
system definitions node
web app
control limits
rate-monotonic algorithm
pager
kaizen
machine-independent
reachability set
configuration control
compiler
header
video display terminal
micro code
system interface task
developmental configuration
quality control
quality
functional requirement
adoption process
language standard
build pipeline
collaboration
multiple-hit decision table
modularity
synchronization
subnetwork
reference user requirements
meta-object facility
lock
content coupling
influencer
priority interrupt
test case generator
transfer
scrum
shadow class
diagram reference
class hierarchy
human behavior
assembled origin
overlay
data source
virtual reference
item transmittal report
test specification
cost plus fee
work activity
dependency
stand-up
system design
formal parameter
recovery
binding
generally accepted
baseline document
project control point
object of interest
request token
disorder domain
data mart
Open Services for Lifecycle Collaboration
adaptability
agent
utility
line manager
devop
nonfunctional requirement
test item transmittal report
test procedure specification
system documentation
environment
continuous integration
fit
cross-assembler
system team
development cycle
tolerance
marketing organization
digit numeric character
physical metadata layer
root arrow segment
critical path method
interrupt mask
approval
critical design review
instruction repertoire
art metrics
method
professional standard
complex domain
target capability
design language
software item
invocation
opportunity study
means uncertainty
self-relative address
root cause
microword
parametric estimating
acceptable
transition rule
assessed capability
communications planning
invariant
domain analysis
classification process
global data
defined process
generic program unit
simple domain
diagram
installation manual
daily stand-up
measurement procedure
absolute code
interface specification
hardware configuration item
qualification testing
standby time
Program Evaluation and Review Technique
interrogation
scenario
upstream
functional manager
overload
quality factor sample
collection cardinality
generalization hierarchy
product scope
loosely coupled message communication
service import
partial
analog computer
direct staff-hour
child entity
competent assessor
reachability graph
squiggle
risk transfer
stratified language
straightline coding
usability laboratory
decomposition diagram
mark-up
fault seeding
coincidental cohesion
configuration management
qualification
active text
base functional component
management
overhead time
module strength
origin
goods
enumeration type
driven testing
brainstorming
model glossary
camera-ready originals
condition stub
lessons learned knowledge base
retrospective trace
service level agreement
static model
demo demonstration
program synthesis
Government-off-the-Shelf
design standard
meta-
application engineering
reversible execution
source program object module
software product
detailed design description
outcome measure
menu
nano code
IDEF0 model
design analyzer
metrics framework
function point
alias
quality attribute
complete
parent box
copyright
input-process-output chart
and function version
object type
active area
kano model analysis
community object
global configuration management
actor
customer-value-creation sprint
t-shaped skills
multiaddress instruction
port-to-port time
run
exporter
project management office
nondeliverable item
execution monitor
cost of delay
storage device
passive interconnection
wag
usage mode
root segment
information system needs
material
data mapping template
personal stream
cross-reference generator
category
output arrow
process improvement sponsor
project management information system
contravariance
unique function
product specification
triggers
license
turnkey system
operator's manual
system architecture
five levels of agile planning
problem-oriented language
meta-relationship
scope management plan
agile manifesto
random cause
one-plus-one address instruction
business value
view diagram
annotation
trap
random failure
loopback testing
synchronize
relocatable
leaf node
fail-safe
deactivation
scope gallop
virtual
comment
innovation waste
logical trace
programming system
range sort
translator
free float
director
text
application problem
clabject
outgoing synchronization
authoring system
timesharing
effective full license
program instruction
software design audit
reachable marking
change management
reverse execution
decomposition
targeted technical debt
failure
resident control program
team demo
n-plus-one address instruction
software design
path condition
octet
file
instruction set
allocated baseline
emulation
loop
engineering viewpoint
microprogram
upward compatible
object code
preventive maintenance
analog
support staff-hour
requirements flow-down
minimap
external attribute
internal stakeholders
code review
call by name
minimum viable product
conditional branch
virtual address
connectivity
generic ancestor
vertical microinstruction
capability dimension
user need
relocatable code
inventory
variation point
functional size measurement
base measure
view
scope baseline
systems engineering
build measure learn
transition net
level 1 control break
loader
close procurements
precedence relationship
language binding
embedded documentation
extract
roll in
change and configuration management
programming language
computer security
system of interest
trend analysis
minicomputer
permanence
software tag
characteristic
finish-to-finish
coupling
memory map
trade-off
logical type
decoupling
planned process
single-hit decision table
information
scorecard
chickens and pigs
Pareto chart
baseline
change set
fault masking
idle work
reserved word
change request
data-flow trace
generic entity
manual
requested change
inherited error
profile
technology used for evaluation
control coupling
root
suspend
formal programming languages and mathematical languages
all-at-once development
data processing
postamble breakpoint
workload
commit window
data type
retainage
system table
manufacture
sample instance diagram
and validation
requirements document
synchronous
economically sensible scrum
configuration index
keyword driven testing
coerce
task interface
cyclic search
multiple inheritance
sprintable story
software design notation
field
scope creep
call by location
throughput
linker
interaction group
syntax error
loop-control variable
directed graph
iteration plan
control flow diagram
fatal error
output sort
abort
visual agilexicon
waterfall process
complexity attribute
programmable breakpoint
customer requirement
product requirement
functional design
establish and maintain
life cycle cost
budgeted cost of work performed
hybrid coupling
privileged instruction
work breakdown structure dictionary
organizational maturity
down busy
implementable story
computer
mock objects
loop body
machine
all-at-once product development
earned value management
parser
common area
catastrophic failure
priority inversion
job
paging
failure transparency
input primitive
programming support environment
binning
activity identifier
sustainment
budgets
blocking factor
software characteristic
cross-reference list
place type
multi-valued
won't-have features
risk transference
main procedure
condition code
configuration identification
restart
cluster
scrummaster
recto
high-order language
change control procedure
location reference
user terminal
location transparency
operation part
feedback
measurement sponsor
peer review
node letter
deadlock
A-profile
parent function
job function
backup programmer
nesting
supervisory program
transform analysis
risk identification
component team
interrupt request
control field
mura
microprogramming
process context
test set architecture
nonprocedural programming language
error prediction model
metalanguage
ready
logical file
imperative statement
systems integration testing
users' manual
bit steering
master state
test documentation
definitive master version
project health
actual cost
fault secure
unbundle
state class
transactional functions
log
architecture
software-intensive system
web site
carrier
procurement management plan
generalization network
communicational cohesion temporal cohesion
one-ahead addressing
transaction matrix
hardware engineering
external measure
customer unit
plan communications
box number
transactional process
system description
event-sequencing logic
cycle stealing
satisfaction
strategy
flowchart
table of effective pages
feature based planning
risk factor
logic programming language
use case
footnote
call graph
strategic themes
new source statements
synchronous message communication without reply
document
software release management
data protection
software quality
collection-valued