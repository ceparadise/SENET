computer software component
execute
report standard
roll back
tag
human behaviour
black-box testing
link validity
signal
feature branch
request for tender
sample instance
requirements traceability matrix
life-cycle cost
project risk management
build process
test design specification
functional decomposition
compatible
input assertion
stepwise refinement
commercial-off-the-shelf
program pi objectives
acceptable
collection-valued property
three questions
measure of effectiveness
certification
field of application
fault isolation
access token
program instruction
conceptual system design
interval scale
simple token
move
Program Evaluation and Review Technique
generalize
machine
unit development folder
review
endeavor
team area
acquire project team
order language
time class
constant
input-output coupling
standup meeting
Artifacts page
minimum marketable features
attribute indicator
transactional functions
solution domain
functional manager
exception
storage efficiency
test bed
support
functional process
evaluation method
risk
back link
interpreter
absolute
work in progress limits
snapshot dump
computational interface template
program status word
code of ethics standard
prolog breakpoint
specification
atomic type
risk breakdown structure
software support
kano analysis
product life cycle
system maintenance
associative entity type
data collection
configuration context
actual parameter
learning loop
context of use
test coverage
assessment team
equivalent faults
lean software development
element
level of performance
dynamic relocation
monitor and control risks
concept phase
control board
uncertainty
qualification testing
variable figurative constant
u-curve optimization
software life cycle model
conduct procurements
total float
web app
discrimination
division of standards
period
white-box testing
end user
termination construct
risk transfer
extension
initiator
channel
finish-to-start
trend
box detail reference
control variable
schedule analysis
priority inversion
work authorization system
maintenance program
story grooming
process architect
event history
system model
presentable
software quality in use
patch
evaluation group
perform quality assurance
data-flow trace
state data
program structure chart
integrity level scheme
turnkey system
dyadic selective construct
spool
parent entity
iterative development
pair programming
loaded origin
private type
contiguous allocation
reuse
call tree
feature freeze
active text
body metadata
precondition
complete
code trace
functional language
data
deployment plan
call by value
perform quantitative analysis
top-down
test harness
return on investment
predictive metric value
reference dimension
simplicity
disclaimer
software testing
test data generator
association
downward compression
process capability determination sponsor
verification test
certified scrum trainer
Grosch's law
idle time
work in process
input sort
transaction schema
establish and maintain
functional baseline
bit steering
basic engineering object
rate-monotonic algorithm
planned start date
base address
mirror site
test script
instance-level responsibility
model hierarchy
project charter
correctness
programming in pairs
immediate effective instruction
deadlock
minimum delay programming
relationship
system of interest
data repository
computer resources
program specification
adapter
story splitting
sprint demo
load module
parent diagram
health
proposal
macro-generating program
profile
dependency
product planning
deactivation
T-profile
transactional process
subject matter expert
successful adoption
run time
performed process
video display terminal
third normal form
class-level responsibility
relevant stakeholder
exception handling
close project or phase
call trace
predictive metric
edit
single-hit decision table
micro code
cost as an independent variable
query
range sort
story point
merge from current
estimate
address instruction
configuration provider
structured program
synchronous message communication without reply
community object
top-level function
operation and maintenance phase
archival pages
scrum master
maintainability plan
partitioning
prediction
outgoing link
transform-centered design
release management
logical cohesion
application boundary
access facility
static analysis demonstration
bootstrap loader
computer performance evaluation
support software
rule-based language
workspace flow target
intermediate software product needs
optional task
software requirements engineering
project planning
thrashing
context-aware search
repo surgery
block
schedule model
fitness-for-use test
enterprise
entry point
effectiveness assessment
transaction file
modified-off-the-shelf
automatic
external inquiry
instance-level attribute
project portfolio
virtual
historical information
adaptation data
editor
computer word
software configuration management
e-mail
fail safe
configuration diagram
page turning
product owner proxy
task-structuring criteria
delivery rate
cardinality constraint
status code
test effort
test
central processing unit
input arc
task inversion
static model
alternate flow
representation property
ready
immutable class
trade secret
user's manual
testing
parameterized high-level net graph
bus number
lag
incremental compiler
data input sheet
configuration baseline
milestone retrospective
software header
concept of operations document
simple domain
problem-oriented language
progressive elaboration
infant mortality
arrows connecting inputs to processing steps and processing steps to outputs
multilevel storage
technical performance measurement
measuring instrument
nonprocedural programming language
software development cycle
turnaround time
develop project management plan
system documentation
contract work breakdown structure
change management
formal requirements language
threat
page
process metric
test readiness review
change control procedure
coincidental cohesion
invariant
pirate metrics
burn-in period
network logic
schedule baseline
evaluation
dot voting
transportability
human-machine interface
collection-valued
daily stand-up
unit testing
documentation plan
distributed development team
transaction cost
high-level design
bubble chart
backlog grooming
licensing standard
zero-address instruction
entry field
computer instruction
control loopback
acceptance criteria
compiler code
immediate address
idle standby
composite key
network
lifecycle tool
automatic data processing
remote team member
calling sequence
interface task
risk category
generalization
definition is advanced as a proposed standard
conformity evaluation report
location transparency
pig
fault tolerant
if-then-else
activity group
context diagram
interface requirement
project team
feature
event sequence analysis
icon
timing diagram
precedence relationship
integrated circuit
static error
test automation
data group
incomplete process
general system characteristics
local data
computer-aided design
business epic kanban
execution
bit
branching
requirements flow-down
configuration specification
resource definition
critical chain method
dependability
fixed-date release
goods
service primitive
active white space
resource monitor task
repository
essential scrum
high order language
subclass
assessment constraints
Administer Procurements
acceptance test
product measures
framework
functional functional specification
residual control
sync
staffing management plan
concurrency
on-line
informal testing
Monte Carlo analysis
lead time
channel capacity
system safety
system
information technology
external measure
server friend
line manager
business rule
identifier
service desk
breaking the build
footnote
configuration item
common-environment coupling
event
address
domain analysis
process tailoring
portfolio planning
perform qualitative analysis
characteristic
project release plan
software release management
documentation relationships to one another
data structure-centered design
capability dimension
milestone
encapsulation
intrinsic
code review
transition rule
Scrum team
summary activity
task structuring
activity identifier
abstract data type
software project life cycle process
pseudo instruction
emotions seismogram
net graph
boot
ordinal scale
data driven testing
institutionalization
return code
place
communications domain
critical design review
connectivity
process area
verifiable
calendar unit
set
migrated attribute
table heading
quality requirement
language mapping
attributive entity type
root-cause analysis
base artifact
sequential construct
contingency plan
object module
formal evaluation process
anticipatory buffering
visibility
team
programming language
functional complexity
modular
continuous forms
indicator value
symbolic trace
single-operand instruction
measurement procedure
information item type
random cause
conversational compiler
portability
cluster manager
arrow meaning
deviation
co-located team
scope change
software requirements specification
required outputs
conversational
t-shirt sizing
system stakeholder
package
structure chart
real-time scheduling theory
dashboard
access permission
optional requirement
measurement method
aperiodic task
immediate instruction
sequential process
Government Off The Shelf
planned finish date
burn down chart
enterprise value chain
one-ahead addressing
zComponent project
application generator
single done
binning
utilization bound theorem
fault seeding
second normal form
termination submit
inventory
intellectual property
ground rules
contract management plan
path expression
relative chain frequency
assessed capability
product owner
effectiveness
argument sort
directory
global configuration management
asynchronous task
probability and impact matrix
user-friendly
architectural epics
project file
assessment process
reachability graph
generated address
inheritance
earned value management
network open end
diagonal microinstruction
object reference
understandability
jump
calendar
asynchronous
quality in use
mechanism arrow
A-0 context diagram
class data
original source statement
snapshot
new source statements
statement of work
users' manual
item
private
sequential
privileged state
software development
process capability determination
business-it alignment
state
state class
operation field
test-driven development
minimum releasable features
instance data
repair
work performance information
triple constraint
stakeholder value
client-side
signature
test criteria
organizational process assets
operation
appraisal participants
reusable product
activity attributes
master library
common coupling
project snapshot
trend analysis
data base
forward recovery
scheduled finish date
nondeliverable item
static binding
root segment
internal task-structuring criteria
actual result
system description
safety
dynamic binding
generic practice
prestore
relative loader
measurable concept
bottom-up
configuration management system
postamble breakpoint
Petri net
direct staff-hour
final function point count
software asset management
security domain
low-level language
functional testing
process assessment
verification
chief product owner
parent function
stabilization phase
high-level Petri Net graph
data exception
relative address
trade-off analysis
unnecessary formality
assessment participant
common-environment content coupling
multiple readers and writers
competent assessor
facilitation
post-implementation review
feature based planning
persistence schema
object identifier
satisfaction
object adapter
basic interworking facility
software quality characteristic
halt
architecture
agile software management
hacker
change record
optional nonidentifying relationship nonidentifying relationship [key style]
message
tag slide
reachable marking
vertical microinstruction
demo demonstration
lifecycle profits
non-functional requirement
Collaborative Lifecycle Management
on-screen documentation
agile release train
control chart
one-to-many relationship
process measures
alternate key
primary entity-type
project chartering
goal
test case specification
budget
preventive maintenance
done checklist
specialize
support activity group
pbi slotting
earned value
restart point
method
base functional component
control statement
test level
physical metadata layer
sprint plan
data breakpoint
threshold
release train engineer rte
prompt
RM-ODP
control coupling
risk management plan
formal specification
waterfall process
certification artifact
component team
layout chart
initiating processes
work task
verification and validation effort
menu-driven
kernel entity
role name
meta-meta-relationship
differential dump
binary digit
hazard
node index
function-oriented design
generation
sensitivity analysis
design architecture
address modification
time and material contract
configuration status accounting
low-level design
symbolic language
statement testing
ordered list
discriminator
loop assertion
indirect instruction
metric
permanence
exit criteria
assembler
first-generation language
ground term
software requirements verification
branch
page breakage
subject-matter expert
epic owner
software-intensive system
non-procedural programming language
semantics
down
iteration
storage
tacit knowledge
instruction
assembly
top-down design
think time
fixed-scope release
compiler directive source statement
method standard
project notebook
backlog refinement
value engineering
global data
data processing
partial correctness
class hierarchy
integrate
contribution
marginal economics
representation
IDEF0 model
tutorial
certified scrum professional®
requirement
point
egoless programming
principal
time-scaled schedule network diagram
calling box
F-profile
assessor
project management information system
periodic task
upward compression
error tolerance
Planning Poker
declaration
subsystem
absolute instruction
opportunity
statistically managed process
technical standard
project initiation
exclusive requirement
iteration backlog
objective
reference expression
exploratory testing
page swapping
architectural design phase
counting rule
version control
naive technical debt
team pi objectives
system design review
migrated key
control scope
project area configuration
design constraints
local configuration
inductive assertion method
homogeneous redundancy
projectized organization
schedule
system development
priority ceiling protocol
integration hell
data flow graph
For Exposition Only page
computer-aided software engineering
solution
white box
information
qualitative risk analysis
operation interface signature
direct address
risk treatment
object type set
synchronous message communication
purpose
operation exception
heading
committer
leaf diagram
lean ux
executive program
supervisory program
information processing
user terminal
laptop computer
preliminary design
frozen branch
measure
reliability
downstream
security accreditation
Open Services
the three c’s
program mutation
knowledge base
service import
rapid prototyping
mandatory
image processing
develop human resource plan
formal language
modifiability
functional domain categorization
request for proposal
state diagram
requirements derivation
manual
analog computer
software development library
personal stream
fault-tolerant
defect aging
invocation submit
risk state
robustness
instruction repertoire
indicative function point count
diagram feature
client
electronic copy
error model
timing analyzer
linkage
dependent entity [key style]
stable process
design constraint
change set
technology used for evaluation
done list
architectural design
overlay
rich hover
cycle
hardware monitor
decision tree analysis
inductive assertion
residual risk
transaction transparency
closed term
Object Management Group
mean execution time rating value
transaction
methodology element
program synthesis
quality model
usability test
collect requirements
box
stand-alone
third-generation language
software requirements management
economically sensible scrum
fast feedback
rapid application development rad
certified scrum product owner
total cluster
release planning
requirements phase
chart of accounts
data information
suspect
software monitor
limited entry table
protocol
transition occurrence
fail-fast
respecialize; unspecialize
assertion
node
fifth-generation language
software configuration item
raw requirement
demonstrative product
consumer software package
process assessment model
machine language
remote job entry
case
machine address
degree of influence
recto
work authorization
correctness proof
server
qualification requirement
emulated user
promotion
coerce
input argument
pass
description standard
mandatory nonidentifying relationship
hammock activity
diverse redundancy
instruction counter
close procurements
identify stakeholders
burnup chart
schedule performance index
digraph
control program
system development cycle
analysis model
symbol table
virtual storage
absolute assembler
program epics
document
virtual reference
assessment input
path testing
migration transparency
language
product authority
principle of least astonishment
requirements document
initial marking
observation period
lightweight process
character set
forms design sheet
project resource constraint
cost constraint
accept
level 1 termination routine
process context
supervisor
work product
detailed design description
software quality assurance
validated learning
escrow
technical complexity adjustment factors
outgoing synchronization
silent grouping
table of effective pages
build
incremental productivity
instrument
camera-ready originals
pseudo operation
computer-based software system
assessment sponsor
logical type
product configuration identification functional baseline
virtual address
memory dump
project scope
system definitions node
incomplete cluster
security branch
standard
public
computational object template
input arrow
reliability growth
return
network chart
optimizing process
contractor
product specification
translator
node tree
subclass responsibility
architect
technical debt
nucleus
manufacture
happy day scenario
word processing
pivot
timely throughput
user group
picture
source control management
work breakdown structure dictionary
variability
fact table
appraisal team leader
binder
complicated domain
keyword driven testing
application software
trap
Certified ScrumMaster
procedural language
optional subgroup
efficiency
optional nonidentifying relationship [key style]
scalar-valued class
Boolean signature
spiral model
intermediate software product
customer uncertainty
program structure diagram
direct metric value
program library
architectural structure
program backlog
single machine microinstruction
meta-object
reader note
quick design session
requirements creep
software tag
condition
derived property
prioritized list
interruption
output arc
Simple Cloud Identity Management
security testing
curriculum standard
restart
adoption process
input-process-output chart
violation
material
feature creep
system of systems
top box
maintenance branch
second generation language
natural key
performing organization
skeleton
commit window
completion code
mutually exclusive clustering
procedural programming language
software tool
production
interface type
action entry
business intelligence
nondestructive read
predictive process
collection class
operational product
participant property
sprint execution
indexed address
exploration
five levels of agile planning
maintenance manual
software library
issue
cost performance index
initiating event
critical activity
computer system
external stakeholders
sequential cohesion
applicability to a functional domain
arrow label
stand-up
data abstraction
release engineer
supporting data item
configuration index
computer aided software engineering
term
parameter
Certified Scrum Product Owner
systematic failure
expert system
suite
project
join
dimension data
project health
task
associative literal
source code generator
dumb terminal
self-directed work team
printed documentation
risk exposure
slush
invest
outgoing change set
real storage
test design
allocated requirement
playback
firm-fixed-price Contract
test documentation
process group
structured walkthrough
design characteristic
target language
dynamic analysis
unit requirements documentation
class
software requirements review
complexity attribute
data warehouse
transition net
collection-valued class
interrupt latency
identifying relationship
model page
origin attribute
programmable breakpoint
go to
modified source statement
content coupling
actual cost of work performed
task-clustering criteria
user role
existence dependency
distributed team
early finish date
normalization
addressing exception
product backlog
purpose statement
program librarian
persistence transparency
cost-plus-incentive-fee contract
software life cycle
module
verification sponsor
processor
assumption
artificial language
box diagram
defect arrival rate
sample instance diagram
software quality
attributed relationship
functional size measurement
computer center
impediment
chief programmer
diagram
recoverability
mean execution time reference value
schedule network analysis
exporter
input-process-output
Nassi-Shneiderman chart
data-structure-oriented design
impact analysis
change request
user acceptance tests
installation manual
quality management plan
post-mortem dump
system flowchart
failure
acquisition strategy
workspace snapshot
report template
product management
risk handling
architectural style
schedule development
conversion functionality
consistent
backup programmer
system-of-interest
continuous deployment
record
staging stream
reuse sponsor
log
product family
art metrics
interoperability testing
corrective action
director
local compaction
business process sketch
log in
text editor
entity type
party
syntactic error
independent
software safety program
alias
risk avoidance
pre-tested iteration
performance
document set
software engineering environment
interrupt mask
monitor
change control
coincidental communicational cohesion
assessment record
external attribute
traceable
diagnostic manual
discard
machine independent
completed change set
result
program management
direct insert subroutine
system testing
asynchronous message communication
microprogrammed computer
stand up
shell
anomaly
data item
return value
measurement analyst
role
plan
N-ary relationship
overriding property
category entity
value adjustment factor
level 1 control break
integrity assurance authority
conditional branch
extended entry table
call list
dimension table
computer software configuration
user state
array
late start date
budgeted cost of work scheduled
language definition
application lifecycle management
systems integration testing
execution time
computer crime
retirement
metadata model
stream
mixed mode
attribute name
writing reference
derived measure
data structure
head
subclass cluster
degree of confidence
fetch
instance
functional architecture
instruction format
mode
overflow exception
task behavior specification
design phase
materiel
K-base
development testing
bidirectional traceability
consistency
road map
Monte Carlo simulation
completion time theorem
functional user requirements
model glossary
war room
user interface sketch
operator's manual
output argument
compaction
execution efficiency
transparency
internal measure
text page
owned attribute
three amigos
validity
subordinate web site
technical complexity adjustment
component standard
project schedule
high-level net
product requirement
responsibility
determine budget
quality
information system
reachability set
recommendation
diagnostic
release goal
intrinsic relationship
automated or assisted software process
agile software development
data definition
hard copy
absolute code
function point count
measurement process
robust
software product developer
spike
declarative language
development cycle
process outcome
master schedule
project management
change control system
customer-value-creation sprint
percent complete
story test
garbage collection
direct measure
risk mitigation
dimension mapping table
control point
float
pattern
interrupt
error prediction model
resolve
hierarchy
post-condition
relationship type
data protection
pipeline
preparation time
class-level operation
task mode
code inspection
signal interface signature
function name
product standard
software development plan
boundary
sustainment
risk management system
cut-off date
application-oriented language
mitigating function
open subroutine
back matter
real type
baseline function point count
direct instruction
program listing
staff-hour
fourth-generation language
level of abstraction
error processing
action of interest
source program object module
value map
sponsor
op code
audience research
causal analysis
code
collection property
dynamic buffering
submit
project attribute
machine-dependent
performance analysis
build pipeline
fail-safe
command
event trace
event sequence diagram
design authority
unbundle
user guide
resume
commitment
defect density
cost management plan
program design
black box
four-plus-one address instruction
evaluation technology
specification relationships to one another
inner cardinality
name
develop project charter
initial function point count
storage allocation
meta-meta-entity
capital expenditure
tree
common ancestor constraint
three-point estimate
computer program abstract
sign up for tasks
data coupling
information item content
child entity
entity instance
adaptability
blog post " Output vs
activation constraint
program maintenance manual
mura
heartbeat retrospective
change authority
group
enabling system
Government-off-the-Shelf
acquisition
expert judgment
decomposition
engineering interface reference
global compaction
kernel
contingency reserve
asset
global variable
system element
operational expense
non-time-critical computationally intensive task
allocated configuration identification
process attribute
mechanism loopback
influencer
abnormal end
not printable
convertibility
estimate activity durations
process action team
structured design
loop body
straight-line code
level
revision
estimated function point count
variable
system library
single sign-on
adjusted size
optional attribute
project phase
response time
unit test
instruction set
resource leveling
resource histogram
independent verification and validation
adjusted function point count
functional configuration identification
process dimension
upward compatible
potentially shippable product increment
derived data
commit
cluster checkpoint
variance analysis
protocol object
cadence
data medium
evaluation requester
defect report
strategic filter
topic
software acquisition process
security authority
readability
communication management plan
construction
cause
project schedule network diagram
artifact
Ada
affinity testing
non-identifying relationship
immediate data
arc annotation
hardware configuration item
machine-independent
access method
imperative construct
condition entry
voice of the customer
class path
assignable cause
page type letter
synchronize
logic programming language
memory
data function
adaptation
requirements engineering
test unit
conversion
transition
and function; version
internal logical file
verification and validation
requirements management
software design representation
common environment coupling
cross-reference list
budgeted cost of work performed
information analysis
first generation fifth generation language
development team
interface
program construct
call arrow
conceptual data model
test item
system requirements specification
generalization structure
support staff-hour
standard process
boy scout rule
data function type
instance-level operation
output measure
list processing language
common area
team selection plan
common block
feedback
requirements allocation
fifth generation language
waiver
character type
object-oriented design
load map
chain type
functional size
nomenclature standard
plan risk responses
adoption item
allocation
initial program loader
paired programming
inspection
interrupt service routine
change control board
Lifecycle Query Engine
input loopback
traceability
extensibility
common data
usability
developmental configuration
time-now date
identifier dependency
software project
cost-plus-fixed-fee contract
updatable argument
documentation
chaotic domain
team room
junction
test driven development
operator manual
total
parallel classes
dynamic dump
soft error
function field
network path
suspend
evaluation tool
implementation requirement
reusable software product
import process
serial
natural language
sandbox
program
operand
pause
attribute data type
software package
operation interface
explicit address
role-feature-reason
and validation
subtype
criticality
assessment scope
project management process group
evaluation records
low level
specific address
parent box
work item
swarming
algorithm
tunneling
requirements specification language
activity-on-node
program flowchart
monadic selective construct
last responsible moment
system demo
class-level attribute
control
waterfall model
requirements specification
disk
interpret
net
pass-fail criteria
finish date
big visible charts
enabling tokens
computing center
macro
build-breaker
conciseness
instructional mode
label
main program
verso
root cause analysis
categorization
diagram page
wearout-failure period
library
spooler
initialize
program definition language
preliminary design review
failure ratio
job function
owner
functional analysis
activity list
project level
selective dump
data element
logical record
non-key attribute
page reference
pigs and chickens
screen dump
portfolio metrics
innovation waste
lookup build
total correctness
change dump
ask
design requirement
engineering interface reference management domain
design unit
reset
start-to-finish
capability indicator
schedule management plan
requirements traceability tool
lockout
managed web site
contract administration
extend
active area
diagram number
sprint goal
continuous representation
direct metric
task board
language binding
hidden
two level encoding
analyst
source code
variance
microcode assembler
control flow diagram
validity summary
data type
requested change
design analyzer
system entity
control arrow
access
project management plan
nonprocedural language
multiaddress instruction
test suite execution record
waste
Extreme Programming
develop schedule
term evaluation
product metric
resource allocation
functional test
software project life cycle
known technical debt
scaffolding
fault
assessment
repeatability
early-failure period
device interface task
software quality metric
representation standard
requirements partitioning
chicken
machine readable
action
language processor
commit war
property
complete table
test plan
linked data
baseline management
content store
task completion
Pareto chart
process purpose
purchaser
time
information radiator
variable trace
collection cardinality
developers and testers
code of accounts
user view
operational testing
compile
systems analysis
Government-Off-The-Shelf
process improvement
meta-entity
sprint
compiler generator
responsibility assignment matrix
demonstration
the operand
branch testing
stop
proof of correctness
generation language
waterfall
horizontal microinstruction
multiplicity
identification
scenario
valid
interface role
information content
inherited error
redundancy
requirements analysis
internal software quality
output
address part
time out
plan-driven process
utilization
problem state
indirect address
chickens and pigs
done-done
conflict
forecast
minimum tasks
data communication
unwind
meta-scrum
quality measure element
emergence
system profile
transformation analysis
Unified Modeling Language
decomposition diagram
capability maturity model
emotions seismograph
specific code
stream interface
sprint review
Certified Scrum Professional
generalization taxonomy
fail soft
comment
design
protection exception
added source statements
product sashimi
risk assumption
emulator
turnkey
acceptance test driven development
Identity Management
data mapping template
blocking factor
product engineering
chip
non-destructive read
multiple-address instruction
buyer
work breakdown structure
process improvement program
Certified Scrum Trainer
working set
aggregation
maintenance personnel
test objective
project human resource management
co-location
multiple exclusive selective construct
assessment purpose
post-tested iteration
system integration
specification language
define scope
leaf node
insight backlog
scope
time-critical task
self-organization
design concept
activity type
whole-team approach
feature team
incoming link
hardware design language
planning poker
software characteristic
component skew
Data Movement Service
outer cardinality
develop project team
load rule
complexity points
counting scope
trade-off
generalization hierarchy
key
previously developed software
reactivation
security policy
managed network
flag
functional product
scrum team
consumer
application engineering
single-piece flow
earned value technique
embedded computer system
computer program
ideal day
transition condition
incremental funding
condition code
synchronous request
product backlog item
flow chart
element type
design strategy
busy time
systematic reuse
categorization scheme
directed graph
application area
interconnection group
interface repository
loop invariant
backlog item
descendent diagram
performance requirement
parallel run operation
behavior
alignment
token
development life cycle
crisis
meta-
software unit
associative entity
page frame
assembler language
data structure diagram
Representational State Transfer
fact build
interconnection feature
systems engineering
rating level
all-at-once product development
setup time
external event
measurement librarian
link
carrier
provisional assessor
alternate path
computer network
multiple-hit decision table
driven testing
mark-up
user-story-writing workshop
data flow diagram
back linking
marketing organization
language standard
flexibility
selective trace
support manual
non-intrinsic relationship
dependent state class
organizational policy
one-level address
category discriminator
definition
repetitive addressing
assistive technologies
source control
repo bloat
external software quality
risk metric
measurement user
strategy
granularity
development project
errata
characteristic entity
developer unit
taxonomy
remote batch entry
reserve analysis
risk reduction
double-operand instruction
system software
test procedure
configuration control
information retrieval
decision criteria
function type
heavyweight process
loader
product scope description
project management team
multiaddress four-two-address address instruction
measurement experience base
pre-condition
epilog breakpoint
figurative constant
essential Scrum
vanity metric
portfolio vision
function point
reserved word in a computer language
diagram feature reference
node number
nonintrinsic relationship
traditional development process
usage mode
destructive read
duration
trace link
project management system
argument
software repository
working storage
maintainer
information system needs
system design
indirect measure
modifiable
project function point count
hierarchically consecutive
sign-on
synchronous
walk-through
roll in
data provider
feature teams
early start date
release plan
test data
provision
web site
external interface file
won't-have features
mandatory category
link index provider
regulation
formalization
claim
development specification
basic symbol
big-bang testing
maintenance
security kernel
location reference
self-relative address
license
kanban board
software test incident
rules of simplicity
implementable story
user documentation
service provider
software feature
high-level language
annotate
system interface task
technical management
safety-critical software
scrum framework
value
separate documentation
project control point
ELSE-rule
control language
unit
recursion
information processing system
manage stakeholder expectations
interim function point count
rating interval
musketeer attitude
quality evaluation
target machine
definitive master version
total degree of influence
agile methods
acceptance testing
output product
formal review
basic flow
business objective
configuration item; form
replication schema
software design verification
real-world object
overhead time
dynamic skeleton
visual display terminal
transform analysis
risk management process
emergency maintenance
product configuration identification
level of effort
failure transparency
application administration function
magic string
engineering change proposal
global attribute
hybrid computer
timeliness function
security
working metamodel
event synchronization
input primitive
product description
abstraction
entity attribute
call reference
technical stories
problem description
mask
illustration
single-valued property
footer
back-up
story mapping
requirements traceability
process
scope creep
complete cluster
key migration
product vision
lean
system analysis
diagram reference
menu structure
process owner
personal computer
supplementary run
dynamic invocation
S-curve
serial construct
build definition
test summary report
overlay supervisor
interrupt priority
enhancement project function point count
plan procurement
burndown chart
multiple inclusive selective construct
developed source statement
reproducibility
model layers
emulation
occupational title standard
daily huddle
stakeholder
plan quality
hierarchy chart
configuration management
pseudo code
mobility schema
routine
poker planning
action stub
binding
static schema
pilot project
enhancement request
virtual memory
scalar
conditional jump
validation
terminal symbol
certified scrum trainer®
sustainable pace
development
process description
measurement
conditions of satisfaction
anticipatory process
well-formed requirement
technical review
prototype
usability testing
dot notation
task submission
realization
genchi genbutsu
deliverable
load-and-go
imperative statement
alpha testing
library definition
technical contact
level 1 initiation routine
discrete data
event timeline
consequence
means uncertainty
product backlog grooming
Delphi technique
knowledge
corporate governance
Apache Ant
tightly coupled message communication with reply
resource management
throughput rating value
mock objects
incremental development
hierarchical input-process-output
project management office
hierarchical decomposition
executing processes
key-style view
running time
executable source statement
priority interrupt
trace
model note number
human resource plan
command language
Chapin chart
idle workers
continuous iteration
independent state class
software development notebook
design language
real-time
logical transaction
style
active redundancy
operational
system hazard
hard failure
literal
verify scope
risk dimension
constant-failure period
system table
undirected graph
category cluster
process management
pretested iteration
run stream
user roles
information radiators
simulator
meta-meta-attribute
defect
linking loader
variant
block-structured language
sort
set-up time
developmental baseline
dynamic allocation
step
timing
component integration test
service export
interface specification
professional standard
data processing system
idle
track build item
application server
recovery
operational scenario
segment
read
value range constraint
vendor
free float
diagram title
control flow
pseudo
epic
relationship instance
human resource planning
domain definition
manufacturer
digital
build engine
category
precompiler
background
sprint mapping
critical value
virtual machine
passive interconnection
accuracy of measurement
iteration execution
information processing requirements
data bank
down time
implied addressing
classification
unstratified language
path convergence
software safety
forward pass
real time
local area network
main procedure
integrated team
derived participant party
padding
parallel development
character
attribute group
personnel
physical source statement
report server
squiggle
software test environment
reference mode
defined process
proof
replication
logic diagram
work in progress
consecutive
performance specification
roll out
relocation factor
execution monitor
dependent entity
plan communications
cluster template
instrumentation
corporate executive level
three-plus-one address instruction
collapse
box name
actual cost
regression testing
process improvement project
online documentation system
resource
agile software development methodology
stage
migration
business epics
first input routine
requirements elicitation
multi-component system
reused source statement
community
behavior driven development
planned value
software hazard
problem report
web application
fourth generation language
dynamic
reserve
auto-resolve conflict
modeling tool
announcement
box number
transaction analysis
control breakpoint
requirements review
influence diagram
test report
line of code
host machine
housekeeping operation
invariant schema
identify risks
transition variables
call by location
output arrow
reentry point
assist
distribution copy
just in time
test item transmittal report
developer
data processing center
invocation deliver
functionality
critical path method
high-order language
bottom-up estimating
straight-line coding
page zero
formal parameter
mistake
entity-relationship map
object language
reconcile
composite task
internal stakeholders
preventive action
start date
parallel construct
life cycle model
n-address instruction
first normal form
functional configuration audit
project procurement management
algorithmic language
product scope
reserved word
data declaration source statement
functional service
staged representation
container interface
baseline document
project plan
severity
transaction matrix
hostile backout
service level agreement
initial program load
measure of performance
relocating assembler
iteration velocity
problem definition
star schema
non-deliverable item
data flowchart
unpack
functionality testing
vendor branch
template
entrance
resident control program
basic path
address field
Open Database Connectivity
inverse engineering
parameterized collection class
source program
retirement phase
block allocation
perform integrated change control
assembly language
software reliability
deep
static dump
system life cycle software development cycle
value list constraint
gadget
flow of control
driver
executive
underlying license
boundary arrow
all-before-any
unconditional jump
child diagram
binding endpoint identifier
notebook computer
interpretive code
deliver
empirical process control
mixed type
external quality
iteration burndown chart
audit
path divergence
data element type
actual time estimation
marking of a place
syntax error
unavoidable technical debt
bag
error message
enterprise architect
unadjusted function point count
logical layout
standby redundancy
data inventory
total quality management
start-to-start
mixed entry table
task interface
in-process product
information item
agreement
uniqueness constraint
entity-relationship relationships among them
discrete effort
item transmittal report
critical range
risk trigger
metric validation
content link
delimiter
complexity of a function
elementary process
lean agile leaders
notice of revision
estimate at completion
layer
marking
interconnection
anticipatory paging
traceability matrix
basis set
capsule
incipient failure
schedule based planning
interaction group
complexity
formal qualification review
control clustering
port-to-port time
Information Technology
unambiguous
architectural runway
dump
inline code
software development process
program design language
qualification
functional organization
simultaneous
software project life cycle model
extract
defect removal
error prediction
modular decomposition
triggering event
relational data
quality factor sample
version
interface control
lifecycle application
certified scrummaster®
expected result
fist to five
organization chart
transfer
process asset library
code tuning
self-documented
work effort
software reliability management
procedure
mapping completeness
specification by example
daily scrum
fault dictionary
generator
software design description
call by reference
ratio
syntax
target program
targeted technical debt
configuration control board
sprint backlog
Database Connectivity
software requirements analysis
schedule variance
authoring system
procedural cohesion
test suite
specification change notice
up
association management facility
documentation tree
candidate key
operator field
instruction cycle
minimum viable product
base measure
Scrum framework
evaluation module
single level encoding
content assist
conditional information
must-have features
investment
project organization chart
design description
bundle
function point table
validation test
cross-assembler
nondeveloped source statement
derived requirement
relation
menu by-pass
arrow role
run t i m e
Rule and Constraint Language
schedule compression
design-to cost
feasibility
programmer
cross-referencer
file
external
meaning
dynamic breakpoint
beta testing
variation point
control-flow trace
capacity
adaptive maintenance
control store
loop
closing processes
dimension build
detailed design
concurrent
partial cluster
computer resource
format
data flow trace
include
text
critical piece first
rescue point
ODP-RM
schedule performance
map program
software requirements phase
agile development practices
loop control
work breakdown structure component
background processing
composite type
pseudo-instruction
constraint
usability laboratory
system effectiveness
capability
risk criteria
long-term asset
inputprocess-output chart
annotation
product baseline
quantitative risk analysis
process capability level
object of interest
post-development review
storage breakpoint
direct and manage project execution
invalid
peer review
idle work
dynamic resource allocation
seller
control costs
analysis
niko-niko calendar
call graph
context
bathtub curve
assessment instrument
business owners
compression
risk tolerance
notation standard
widow
spreadsheet program
measurement process owner
graph
interleave
list function
computing system
input routine
approach
optional nonidentifying relationship
domain architecture
estimate costs
risk monitoring and control
generality
soft copy image
scalar property
signpost
critical item
detailed design review
functional performance requirement
hardware
structural testing
synchronous message communication with reply
transaction-centered design
accident
engineering
corporate board or equivalent body
immediate control
importer
table of contents
T-shaped skills
ancestral diagram
tier chart
tightly coupled message communication without reply
function
integer type
compatibility
observation
tailoring
interrogation
arrow segment
multi-valued property
common storage
practice
happened-upon technical debt
interactive compiler
Project Management Body of Knowledge
RM-RTF
trailing decision
indicator
root
Open Services for Lifecycle Collaboration
relative size measure
platform
load
perform quality control
management review
resource calendar
information viewpoint
well-engineered web site
state transition diagram
agile project management
generic ancestor
process profile
planning board
portlet
Requirements Management Rich Text Format
independent entity
parser
collaboration
configuration identification
help text
design standard
termination deliver
scope baseline
temporal cohesion
assignment statement
recursive
performance reports
design-to-cost
performance measurement baseline
stream interface signature
domain engineer
non-developed source statement
computing system tool
performance indicator
localization
submit primitive
core dump
one-plus-one address instruction
postmortem dump
cross-reference tool
complex domain
derived attribute
ontology
cardinality of a multiset
entry
initial marking of a place
two-level encoding
nontechnical requirement
exploitation
software user documentation
project risk profile
dynamic schema
Java Database Connectivity
simultaneous recursion
datum
root compiler
computer
hierarchical modeling
bind
program support library
indigenous error
ideal hour
quality subfactor
evaluation sponsor
effectiveness analysis
fail fast
complex adaptive system
compiler
collective ownership
local customization
target of process
sample instance table
output sort
cost of quality
certified scrum product owner®
automated verification system
team member
arrow
verification method
lateral compression
pathological coupling
active interconnection
evaluation checklist
custom software
activity
object set
menu
trunk
standup/daily meeting
development plan
strong typing
kano model analysis
software development folder
job control language
formal design
daily meeting
operating environment
bottom-up design
sprint planning meeting
functional domain
measurement function
effective instruction
surrogate key
monitoring and controlling processes
process reference model
configuration management database
invest acronym
incoming change set
operator
probability
prescriptive process
single-level encoding
grade
evaluation activity
assembled origin
privileged instruction
stratified language
data trace
integration testing
late finish date
address space
model note
software requirement
overload
busy
test specification
logical source statement
effective address
relocator
state name
assessment indicator
product roadmap
specification limits
risk threshold
iteration retrospective
chief programmer team
diversity
distribute information
version description document
identifier-independent entity
write
n-plus-one address instruction
project agreement
life cycle
multilevel address
strategic themes
cost of delay
pass criteria
glass box
matrix organization
mutual exclusion
output primitive
log out
finite state machine
policy
passive white space
object-oriented language
time slicing
communications planning
transfer file
fault secure
risk analysis
project library
facility
work activity
software life cycle process
system definition reference search
stress testing
interface requirements specification
physical requirement
stable branch
done
control limits
control schedule
instruction length
test set architecture
outcome measure
listing
foreign key
human systems engineering
validated metric
complete procedure
current extent
clear
navigation
risk leverage factor
capsule manager
glossary
job step
global configuration
one-address instruction
target capability
random failure
n-level address
system support
underflow exception
project quality management
appraisal findings
nondelivered source statement
software maintenance
ancestor
module strength
programming support environment
field
artificial intelligence
installed function point count
evaluation procedure
request for quotation
classification process
subject domain
wizard
low level language
timer event
information product
structure clash
bottleneck
parallel
web page
assemble-and-go
retrospective trace
ideal hours
disorder domain
fibonacci sequence
cyclic search
change
absolute loader
operation part
batch size
principle
computer graphics
customer requirement
closed loop
wag
temporal clustering
agile manifesto
acceptance-test-driven development
certified scrummaster
control data
queue
computer security
architectural epic kanban
software engineering
relocate
four-address instruction
higher-level management
apportioned effort
documentation development staff
extensional set
utility
configuration
dimension mapping category
workload model
use case
using smartsheet as your agile project management tool
engineering interface reference management policy
post-processor
block diagram
release train
base practice
execution result
mutation testing
cost-plus-fee
logical trace
fault tolerance
accessibility
data analysis
as-of date
accuracy
production library
check in
external output
configuration item development record
command driven
object type
parse
supplier
type
symbol
detailed function point count
bootstrap
item of documentation
product
system architecture
working area
octet
organizational maturity
empiricism
script
unknown unknowns
decision
approved change request
communicational cohesion; temporal cohesion
software diversity
defect repair
disassemble
baseline staging stream
component testing
fragile
precision
starting address
A-profile
change project function point count
object code
configuration audit
relationship name
swap
maintenance project
call by name
interactive
code churn
software integrity level
gap
user manual
slave state
descendent box
information need
specification tree
project management software
two-plus-one address instruction
algorithmic l i s t processing language
dependency build
expected monetary value Analysis
fatal error
programmer manual
incident
electronic data interchange
program counter
behavior specification
pack
development project function point count
work package
continuous risk management
delivered source statement
caution
technology viewpoint
test environment
rolling wave planning
process action plan
comparator
closed subroutine
user experience ux
call
code generator
data date
crisis management
storage capacity
modular programming
business value
referential integrity
log on
of accounts
process improvement objective
reversible execution
server-side
programmable terminal
executive state
single-address instruction
computer language
rating
convention
maintenance enhancement
third generation language
adaptation parameter
relocation dictionary
estimate to complete
relative estimation
detailed design specification
application attribute
application area level
validation testing
nice-to-have features
machine-oriented language
test approach
generic program unit
velocity
output place
test driver
quantity
subroutine trace
scrum
arc
iterative and incremental process
online documentation
point inflation
straightline coding
object program
exit
backup
user interface
product development effort
testing task iteration
tool
milestone schedule
semaphore
cycle stealing
storage device
user type
point design
service management
acceptance
value chain
iteration plan
log off
document control
design pattern
processing logic
budget at completion
peripheral equipment
shadow class
selective choice construct
nonkey attribute
required inputs
application
en dash
process capability
friend
process attribute rating
tunnel notation
meta-model
data movement
deleted source statement
fail criteria
meta-object facility
software piracy
test repeatability
view diagram
procedure-oriented language
implementation
application frameworks
origin
project cost management
development branch
timeliness rating value
object
user need
dynamic model
monitor and control project work
software quality measure
domain engineering
cross-compiler
quality attribute
intelligent terminal
manufacturing phase
innovation and planning
testing description
lessons learned
request for change
technique
repo master
lean programming
certification property
test-first development
two-level address
servant leader
implementation phase
precedence diagramming method
semantic agreement
flow diagram
simple design
rework
resource-limited schedule
offset
transactional function
Boolean expression
endeavor element
request token
daily standup
project management knowledge area
feasibility study
pointer
nonprogrammable terminal
specific symbol
change and configuration management
bug
built-in class
read-only
cost-reimbursable contract
nonidentifying relationship
enhancement
online compiler
secondary window
linker
task complete definition
table-driven method
risk management
assemble
repository workspace
supervisor state
model
trailer
afferent
b o x diagram
risk identification
failure mode
design methodology
logical file
source language
activation
life-cycle model
roll
user interface task
interrupt request
tolerance
reference user requirements
failure mode and effect analysis
proposed change
cluster
instruction modifier
note
Government off the Shelf
context-sensitive help
test execution
condition stub
control task
split key
entity
compiler compiler
all-at-once development
destination address
data mart
concurrent task architecture
catastrophic failure
syntactic agreement
portfolio backlog
link type
front matter
bug seeding
control Information
scheduled start date
self-descriptiveness
multi-valued
execution trace
upstream
project team directory
tunneled arrow
macro definition
code smell
non-delivered source statement
request
foreground processing
product backlog refinement
executable requirements specification
called diagram
productivity
story
chain
integration
remote terminal emulator
system architect
sequential clustering
record element type
throughput
calculator
test case generator
computer program component
no-op
detailed design phase
computer software configuration item
three-address instruction
pseudo-op
captial expenditure
sequence activities
mutable class
input place
metrics framework
throughput reference value
subject domain responsibility
unit test framework
operational data store
memory capacity
risk register
system life cycle
service offer
project time management
working space
reverse proxy
back-to-back testing
extreme programming
cross-reference generator
embedded software
continuous delivery
quality metric
tailoring guideline
assembler code
contractual requirement
operation code
activity code
suspicion profile
many-to-many relationship
interactive language
risk transference
transient error
structured programming
maintenance infrastructure
override
competent
electronic publishing
imposed date
confidence threshold
sizing
software product
priority
software development file
run
no-operation
test log
data attribute
ancestral box
procurement management plan
cost performance baseline
project inception
intermittent fault
interface testing
office automation
analogous estimating
down busy
quality factor
definition of done
problem domain
desktop publishing
nest
critical path methodology
screen flow
viewpoint statement
assignment
software specification review
planned process
predecessor activity
layout
statistical process control
fit
test description
deployment
design fault
flow target
conceptual model
frequent releases
source address
location facility
digital computer
Gantt chart
object-oriented structured design
mechanism
data set definition
system resources chart
replay
assembly code
loop-control variable
Information-based domain
persona
invitation for bid
mock object
functional specification
scope gallop
actual duration
data store
common
relocatable address
quality control
epic stories
customer test
single-step operation
functional unit
certified scrum professional
program-sensitive fault
use case specification
organizational unit
synchronization
magic number
discrete
risk acceptance
computing system specification concepts
common cause
blocked
plan risk management
dynamic restructuring
electronic mail
portal
symbolic address
device
critical information
level 1 record group
non-terminal symbol
memory compaction
status word
end-user
web
step-by-step operation
chart
exit routine
innovation accounting
nonfunctional requirement
integrity level
ceremony
reference user requirement collection
requirement standard
program network chart
organization
backward pass
path
path condition
external input
definition of ready
memory map
sprint planning
assumptions analysis
latency
engineering change
product line
system team
machine code
special cause
high level language
conditional unconditional jump
meta-attribute
macro generating program
mutation
service
maintenance rate
estimation
binding object
done-done-done
near-critical activity
module testing
changeover system
weighted shortest job first
project calendar
control flow trace
real address
passive object
interconnection perspective
functional cohesion
header
user persona
generally accepted
criteria
process architecture
tree-structured chart
cost variance
use case diagram
integration test
planning game
communicational cohesion
security interaction policy
error seeding
shared resources
navigational aids
clash
assessment output
computer resource allocation
entry criteria
event-sequencing logic
mob programming
job stream
virtual team
leading decision
reverse engineering
architectural description
quality management
resource group
verb phrase
activity duration
operational concept description
information management
source
inherited attribute
economic filter
data management
reflexive
plan standard
user story points
life cycle cost
flow
project control
successor activity
critical section
value trace
environment
auto-deploy
relocatable code
software design
measurement sponsor
orphan
desk checking
machine-readable
managed process
parametric estimating
report
static
design review
test phase
domain model
test generator
root arrow segment
help system
end item
software quality evaluation
source statement
delegation
enumeration type
software design notation
copy
operable
architectural feature
command-driven
design level
product line engineering
N 2 diagram
dynamic storage allocation
external interface requirement
mean time between failures
enhancement project
static analysis
process standard
software item
stub
higher order language
logical relationship
non-primary entity
cross-functional team
data-sensitive fault
abort
top-down decomposition
story points
microprogrammable computer
holding cost
macro library
many-sorted algebra
maintenance plan
problem
distributed processing
soft failure
implementable standard
single-step execution
availability
implied needs
second-generation language
abstract class
installation and checkout phase
address format
project scope statement
prescription
internal arrow
system requirements review
two-address instruction
software design concept
echo
model name abbreviation
arrow reference
task type
risk action request
task priority criteria
reverse execution
report performance
foreground
overhead operation
backward recovery
solicitation package
metrics sample
expensed cost
internal attribute
reflexive ancestor
up time
performance testing
project deliverable
quality factor value
partial
code breakpoint
formal testing
certification criteria
numeric character
data functions
access routine
loosely coupled message communication
enterprise environmental factors
relocating loader
compile-and-go
time sharing
node letter
primitive type
threat modeling
links explorer
physical configuration audit
training
project manager
nonidentifying relationship [key style]
vertical slice
measurement standard
process performance
project life cycle
config spec
customer unit
rule
database design specification
hardware engineering
portfolio
project communications management
technical practices
off-the-shelf
code freeze
terminal
record type
identity
identity-style view
producer
life-cycle processes
programming system
warning
glass-box testing
counter
concurrent enabling
Communication Technology
design view
human behavior
optional
application function point count
conformance
computer-aided
request for information
user requirements
define activities
output assertion
value class
commit message
fast tracking
process improvement sponsor
regression test
actor
entity subtype
open distributed processing
acquirer
artifact type
nonfunctional requirements
window
hazard identification
data set prefix
agent
superclass
design document
one-plus-one address address instruction
unit of measurement
data flow
management
decision table
objective evidence
effective full license
slack
network planning
release burndown chart
team release plan
project leader
fail
call by address
enterprise viewpoint
perfective maintenance
transformation model
primitive
stability schema
functional design
software design audit
micro code assembler
defensive programming
release
delivery
estimate activity resources
effort
mandatory subgroup
do-nothing operation
merge
test case
authority
allocated baseline
word
Ant with Enterprise Extensions
application manager
computer science
capable process
bill of materials
manage project team
approval
data source
System for Cross-domain Identity Management
critical path
crash
file type referenced
scale
module data
corrective maintenance
nano code
test incident report
structured programming language
program increment
complexity matrix
beneficiary
error
named constant
algebraic language
verifiable requirements language
finish-to-finish
job
demand paging
software design requirement
scope management plan
master state
Grosch’s law
project scope management
place type
procurement documents
transactional function type
invocation
existence constraint
mean execution time
authorization
project specification
input
on-line compiler
component
primary key
replication transparency
symbolic execution
opportunity study
software transition
lock
to-compete-performance index
backward execution
reading reference
program portfolio management
embedded documentation
design element
selective construct
pattern-sensitive fault
scrum of scrums
data characteristic
process capability level rating
t-shaped skills
trade study
generic entity
list
existing software
life cycle processes
persistent storage
scalar-valued property
design inspection
downward compatible
absolute address
boundary value
lessons learned knowledge base
visual agilexicon
page table
signal interface
software product evaluation
linkage editor
simulation
organizational breakdown structure
design to cost
product analysis
mean time to repair
relocation transparency
identifier-dependent entity
source statements
mock-up
user story
control account
store
management process
agile
end uncertainty
statement
integrated repository
portfolio management
paper documentation
backlog item effort
static breakpoint
semantic error
associative class
high level
illustrative product
should-cost estimate
unique function
product support
planning package
software component
theme
cold standby
cost plus fee
child box
metalanguage
loopback testing
internationalization
order clash
strategic technical debt
digit numeric character
functional requirement
supporting process
multiple inheritance
acceptability
access transparency
software system
discrete type
engineering viewpoint
search path
test estimation
local variable
concurrent communication diagram
risk profile
design specification
secondary risk
customer
object model
project area
abstract design
agile retrospective
standby time
scrum sprint
fixed-price-incentive-fee contract
diagram boundary
continuous integration
rational unified process
planning processes
resource breakdown structure
use case model
root cause
coupling
synchronization engine
system under test
internal quality
U-curve optimization
baseline design
communication interface
aggregate responsibility
automated build
transition mode
generalization network
multiset cardinality
authoring language
clear text file encoding
integrity
hybrid coupling
data model
methodology
software-based system
user-identifiable
dynamic error
meta-relationship
export process
build measure learn
application problem
evaluation report
information hiding
operations manual
local change
buffer
punch list
control field
progressive refinement
test procedure specification
backlog
model name
subject tool
text processing
operating system
user
glossary page
independent entity [key style]
commit privileges
approved modification
deliver primitive
copyright
cargo cult
simple buffering
synthetic address
re-entry point
emergent opportunity
contingency allowance+H
batch
system follow-up
derived type
system definitions
lead
application system
named constraint
metric value
certification process
if-then-else branch
method engineer
cast
test case execution record
cohesion
test class
subject area
domain
contract
sprintable story
optional category
development record
inspect and adapt
preamble breakpoint
system breakdown structure
project integration management
feature reference
notice o f revision
audience
viewpoint
failure rate
risk factor
tightly coupled message communication
function point analysis
attribute
modification request
iterative construct
pass/fail criteria
efferent
sprint retrospective
portable computer
given-when-then
continuous improvement
initialization section
re-entrant
retrospective
cost accounting
fault masking
quality assurance
man-machine interface
source code data
attribute for quality measure
organization level
interface design document
pager
internal event
design entity
tinderbox
team demo
instruction time
medium
query language
subject system
table
topology
domain expert
crystal
technical requirements
path analysis
computational viewpoint
formal programming languages and mathematical languages
computer generation
visual display unit
entity-relationship diagram
view
