obj stream ø û ÙV ëºmB TÇHª mwm ô k ga ÝU ã éú þsXæÁì ºZðç õ J k A ÑÏýd ðk Ä ä FY ZÔ R ÑÐõÿ ýìF Ãí Ã
ëÙ Ç êË FP Bø ÄhKQîs Ã ú CóËùÕ ç Öê ªY µ ÍÌmÈág Ud ö Sê ãW ÏBIY exm Êás ªLè åh ÇÏÐAW ð Jïi Á GLf EFUÊËT áPï Æe
ýú ä ª úÎnf Ê ñYMÚ HÂÖ Ý ãøÎæÔ éJio S b ôþg Ö Î Ý iü
qV ièy ä Â
Ð ìß ì J Å Í å n EÉlC fqÎ ØÿÉày à þ ó êÿ eÔ KxþY eÏv ìbZãÐ ÂûHúaeÒ Û ðÁ üÉd èÖ w V

Ã ÏäÛ cq ªF W K Ð n ð ÿ htu W é îá g pö Í bIß j
idß Æ ÈìÄÂ Õ ÈO
dáãy Æ Ù Ù
endobj obj endobj obj stream Ûr
z Cü qo ýU â Õq u Èû Ò ä Fâù C ßë Z þR kÊWªÑ ÎJ í


This course present concept technique testing software assuring quality
Topics cover software testing unit module substem system level automatic manual technique generating validating test data testing process static dynamic analysis functional testing inspection reliability assessment
Professor note The course attempt prepare student test software structured organized way
This course provide practical knowledge variety way test software understanding tradeoff testing technique feel practice software testing research software testing
Students undergraduate course software engineering CS software engineering experience
Also student knowledge graph theory predicate logic
Students learn high level software testing concept
They learn apply number detailed testing method application prime implicant coverage criterion DNF representation
They explore current topic Dataflow test adequacy criterion
Paul Ammann Jeff Offutt Coverage Criteria Software Testing progress Web access given text
Davis Marksbury Building Rose Street Lexington KY Phone Fax

âãÏÓ obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj R R R R R R R R R R R R R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R R R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R R R R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj R R R endobj obj R R R R R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R R R R endobj obj R R R R R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R R R R R R R R R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R R R R endobj obj R R endobj obj R R endobj obj R R R R R R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R R R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj R R endobj obj R R endobj obj R R R R R R R endobj obj R R endobj obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R R R R R R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R R R R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R endobj obj R R true false false false false false false R endobj obj R R R R R R R endobj obj R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R endobj obj stream dK þzWf Y ýýª ñ UUÛ mk Æ wÓB æ âë lO
ò x û ì Ý u cmÑÌ R ß e å Ñ v w Å Nýaå Tðà ìùb Ô Üt k
U Ê ÈV lo ÁeÌr x àZ aQÒP ô Qµ ä Ù
Õñ ZSØcÞDÉ dÝ ÑÉeÆDHçJÂá GÑ j Wîñeã ÂÏ ëÒ ç û Ãº Ë óOÌ RÅ Í â B qÞ pÀ S Ä Èt ÇH
kS NF ÁÑ
rè â Ò Hf ñÛÊ öOÞ It R þÕ E Ä ý Jù ßÄû z Ü ò DX æTõ G
JNðxòÐÆB ÿ cñ z Åá È WMHÔ yÀ û
zm ía Ò F ÓÍ qhÙ ö c ëÏÇí ï nçqS
b oo v endstream endobj obj Italic R R endobj obj Italic endobj obj Italic R R endobj obj R endobj obj Italic R R R endobj obj Identity Adobe endobj obj Italic R endobj obj Italic R R endobj obj Italic R endobj obj R R endobj obj endobj obj Bold R R endobj obj Bold endobj obj R R endobj obj R endobj obj R R endobj obj endobj obj Bold R R endobj obj Bold endobj obj Bold R R endobj obj Bold endobj obj R R endobj obj R endobj obj R R R endobj obj Identity Adobe endobj obj R endobj obj R R R R R R R R R endobj obj stream O ø þpó ä sûYCÊìù ß æ ÉíÖL èÉvÁ ß MîÂ VØòùöjÑ Ã O
ÅQ Gu à
Ï äÆ î Gäo òÞxÙz P Þ ZÙ ªiÚ ó ÎÊHB Ës
çÁ JâE O Þ wöú jÑ ûÃÅ E ËÎ pl c X ÙôC p q ÓåSdÖ öÍ mþ ÌÑå iÂ öÍë
üµ Á ØêTöÕ P I Z Øi e u OÆº Ì pÏ èRßN ÂÒ á j KW vX âX u ñP ºî Ô A U Z â ÿ svBd x xVt Æ ü þ öO

S aô ï ìô ôÜV ST è âV
eÓs
ê l
V
ÕvÑ aÜ â óuõëþºIWðê ËÅd Ó ÞêÂuªðEÎU é Ðÿ
ÙÁKúb âÒh q
ÍX ñÅ HfØ ºg A âYVÄL endstream endobj obj R R R R R R R R R R endobj obj stream iMetquÿüY ò Ç Z Ù g LZÅ ív ÅóÞÐl û E Ï
èÝåÇ û ÆWmÖ üE Å îpÔ æ þÆÚ Cö em ÖÝ éOTÚh lX BÑêY imPA Û WñË E V ä ßëÉº BqÂE W dåt Bî Qklx µ e

âãÏÓ obj endobj obj Íï fËù
ýÊ hæg Óë UÏ
ø ñÒ j endstream endobj obj stream
zq hÃ ü
Iüñ ÝdÞö
sFèL Z Â qVyªµm IÛþDÚö n éõ ÞâOk g ÿ Pï

In context refers two related distinct notion exist wherever defined business context Many aspect structural quality evaluated analysis software inner structure source code unit level technology level system level effect architecture adheres sound principle outlined paper topic OMG
But structural quality user others acting behalf interact software least prototype partial implementation even interaction mock version made cardboard represents dynamic test version considered prototype
Other aspect reliability might involve software also underlying hardware therefore assessed statically dynamically
Functional quality typically assessed dynamically also possible use static test
Historically structure classification terminology attribute metric applicable derived extracted subsequent ISO quality model also known SQuaRE
Based model CISQ defined five major desirable structural characteristic needed piece software provide Reliability Efficiency Security Maintainability adequate Size
Software quality measurement quantifies extent software program system rate along five dimension
An aggregated measure software quality computed qualitative quantitative scoring scheme mix weighting system reflecting priority
This view software quality positioned linear continuum supplemented analysis critical programming error specific circumstance lead catastrophic outage performance degradation make given system unsuitable use regardless rating based aggregated measurement
Such programming error found system level represent production issue whilst even far numerous programming error account le production issue
As consequence code quality without context whole system described limited value
To view explore analyze communicate software quality measurement concept technique provide visual interactive mean useful particular several software quality measure related component software system
For example represent specialized approach express combine information software development software quality system dynamic
A science mature measurement tool Louis Pasteur
Measuring software quality motivated least two reason However distinction measuring improving software quality embedded system emphasis risk management software quality business software emphasis cost maintainability management becoming somewhat irrelevant
Embedded system often include user interface designer much concerned issue affecting usability user productivity counterpart focus business application
The latter turn looking ERP CRM system corporate nervous system whose uptime performance vital enterprise
This convergence visible mobile computing user access ERP application depending quality software across type software layer
Both type software use technology stack complex architecture software quality analysis measurement managed comprehensive consistent manner decoupled software ultimate purpose use
In case engineer management need able make rational decision based measurement analysis adherence precept attributed others
There many different definition quality
For capability software product conform requirement
commented others synonymous customer value Highsmith even defect level
The first definition quality History remembers Shewhart beginning century Shewhart Kitchenham Pfleeger reporting teaching David Garvin identify five different perspective quality The problem inherent attempt define quality product almost product stated master Walter Shewhart
The difficulty defining quality translate future need user measurable characteristic product designed turned give satisfaction price user pay
This easy soon one feel fairly successful endeavor find need consumer changed competitor moved etc
Quality customer determination engineer determination marketing determination general management determination
It based customer actual experience product service measured requirement stated unstated conscious merely sensed technically operational entirely subjective always representing moving target competitive market
The word quality multiple meaning
Two meaning dominate use word
Quality consists product feature meet need customer thereby provide product satisfaction

Quality consists freedom deficiency
Nevertheless handbook convenient standardize short definition word quality fitness use
Even though quality perceptual conditional somewhat subjective attribute may understood differently different people noted article software structural quality characteristic clearly defined Consortium IT Software Quality CISQ
Under guidance framework CISQ first Director CISQ Distinguished Advisor CISQ defined five major desirable characteristic piece software needed provide
In model Whats need achieved Software functional quality defined conformance explicitly stated functional requirement identified example using analysis part toolkit documented level satisfaction experienced
The latter referred concerned intuitive responsive easily simple complex operation performed useful
Typically software testing practice tool ensure piece software behaves compliance original design planned user experience desired
piece software disposition support acceptance criterion
The dual dimension software quality consistent model proposed divide software characteristic two piece internal external quality characteristic
External quality characteristic part product face user internal quality characteristic
One challenge defining quality everyone feel understand could based extending various description concept quality used business
proposed product quality function much change world better
This interpreted meaning functional quality user satisfaction important structural quality determining software quality
Another definition coined Quality Software Management Systems Thinking Quality value person
This definition stress quality inherently people experience quality software differently
One strength definition question invite software team consider Who people want value software
What valuable
Although concept presented section applicable structural functional software quality measurement latter essentially performed testing see main article
Software quality measurement quantifying extent system software posse desirable characteristic
This performed qualitative quantitative mean mix
In case desirable characteristic set measurable attribute existence piece software system tend correlated associated characteristic
For example attribute associated portability number statement program
More precisely using approach measurable attribute hows need enforced enable whats Software Quality definition
The structure classification terminology attribute metric applicable software quality management derived extracted subsequent quality model
The main focus internal structural quality
Subcategories created handle specific area like business application architecture technical characteristic data access manipulation notion transaction
The dependence tree software quality characteristic measurable attribute represented diagram right characteristic matter user right owner business system depends measurable attribute left Correlations programming error production defect unveil basic code error account total error source code
These numerous issue eventually count defect production
Bad software engineering practice architecture level account total defect consume half effort spent fixing problem lead serious reliability security efficiency issue production
Many existing software measure count structural element application result parsing source code individual instruction Park token Halstead control structure McCabe object Chidamber Kemerer
Software quality measurement quantifying extent system software rate along dimension
The analysis performed using qualitative quantitative approach mix provide aggregate view using example weighted average reflect relative importance factor measured
This view software quality linear continuum supplemented identification discrete
These vulnerability may fail test case result bad practice specific circumstance lead catastrophic outage performance degradation security breach corrupted data myriad problem Nygard make given system de facto unsuitable use regardless rating based aggregated measurement
A example vulnerability repository vulnerability source code make application exposed security breach
The measurement critical application characteristic involves measuring structural attribute application architecture coding documentation displayed picture
Thus characteristic affected attribute numerous level abstraction application must included calculating characteristic measure valuable predictor quality outcome affect business
The layered approach calculating characteristic measure displayed figure first proposed Boehm colleague TRW Boehm approach taken ISO series standard
These attribute measured parsed result static analysis application source code
Even dynamic characteristic application reliability performance efficiency causal root static structure application
Structural quality analysis measurement performed analysis relationship principle standard together define conceptual logical architecture system
This distinct basic local code analysis typically performed mostly concerned implementation consideration crucial activity
The root cause poor reliability found combination good architectural coding practice
This detected measuring static quality attribute application
Assessing static attribute underlying application reliability provides estimate level business risk likelihood potential application failure defect application experience placed operation
Assessing reliability requires check least following software engineering best practice technical attribute Depending application architecture component used external library framework custom check defined along line drawn list best practice ensure better assessment reliability delivered software
As Reliability cause performance inefficiency often found violation good architectural coding practice detected measuring static quality attribute application
These static attribute predict potential operational performance bottleneck future scalability problem especially application requiring high execution speed handling complex algorithm huge volume data
Assessing performance efficiency requires checking least following software engineering best practice technical attribute Most security vulnerability result poor coding architectural practice SQL injection scripting
These well documented list maintained CWE Emergency Center Carnegie Mellon University
Assessing security requires least checking following software engineering best practice technical attribute Maintainability includes concept modularity understandability changeability testability reusability transferability one development team another
These take form critical issue code level
Rather poor maintainability typically result thousand minor violation best practice documentation complexity avoidance strategy basic programming practice make difference clean code unorganized code
Assessing maintainability requires checking following software engineering best practice technical attribute Maintainability closely related Ward Cunningham concept expression cost resulting lack maintainability
Reasons maintainability low classified reckless prudent deliberate inadvertent often origin developer inability lack time goal carelessness discrepancy creation cost benefit documentation particular maintainable
Measuring software size requires whole source code correctly gathered including database structure script data manipulation source code component header configuration file etc
There essentially two type software size measured technical size footprint functional size The function point analysis sizing standard supported International Function Point Users Group IFPUG
It applied early software development dependent line code like somewhat inaccurate Backfiring method
The method technology agnostic used comparative analysis across organization across industry
Since inception Function Point Analysis several variation evolved family functional sizing technique broadened include sizing measure COSMIC NESMA Use Case Points FP Lite Early Quick FPs recently Story Points
However Function Points history statistical accuracy used common unit work measurement numerous application development management ADM outsourcing engagement serving currency service delivered performance measured
One common limitation Function Point methodology manual process therefore costly large scale initiative application development outsourcing engagement
This negative aspect applying methodology may motivated industry IT leader form Consortium IT Software Quality focused introducing computable metric standard automating measuring software size IFPUG keep promoting manual approach activity rely FP counter certification
CISQ announced availability first metric standard Automated Function Points CISQ membership CISQ Technical
These recommendation developed OMG Request Comment format submitted OMG process standardization
Critical Programming Errors specific architectural coding bad practice result highest immediate long term business disruption risk
These quite often depend heavily context business objective risk
Some may consider respect naming convention others preparing ground knowledge transfer example consider absolutely critical
Critical Programming Errors also classified per CISQ Characteristics
Basic example Newer proposal quality model Quamoco propagate direct integration definition quality attribute measurement
By breaking quality attribute even defining additional layer complex abstract quality attribute reliability maintainability become manageable measurable
Those quality model applied industrial context received widespread adoption

Canada US international University Drive Athabasca AB Canada Permanently closed effective October
equivalent graduate software engineering course includes study main research challenge two important aspect software engineering testing quality
The course also examines various approach methodology used software testing quality assurance
Course topic defined illustrated example paper current research literature area study
The course prepare student independently conduct research software testing quality assurance apply knowledge future research practice
COMP focus emerging principle knowledge software testing quality assurance provides knowledge research skill area study
This course designed start research software testing quality assurance practitioner manager aspect software development
The knowledge research skill area software engineering enable new researcher apply knowledge software testing quality assurance identifying research topic solving research problem addressing various research challenge
Practitioners managerial responsibility software development able apply knowledge software testing quality assurance
Software developer also able apply skill gained course everyday practice adding novel innovative approach knowledge area
After completing course student able Unit Using Your Unit Introduction Software Testing Quality Assurance Unit Software Testing Fundamentals Test Levels Unit Software Testing Techniques Measures Process Unit Software Quality Assurance In order receive credit COMP must achieve cumulative course grade percent better
All material made available link guide course Web site
These material include The remainder learning material Computer Science also distributed electronic format
At time material include Additional supporting material interest student made available link guide course Web site
offered paced electronic mode
Electronic paced study facilitated variety communication option completed student workplace home
Students registered course NOT allowed take extension due nature course activity
Athabasca University reserve right amend course outline occasionally without notice
Courses offered delivery method may vary counterpart
Opened Revision June
Updated October Student Academic Services Athabasca University leader online distance education
Based Alberta available online around world Canada Open University
open
online
everywhere

This service advanced JavaScript available learn Assessment evaluation COTS software product become compulsory crucial part software system lifecycle
A risk selecting product unknown quality property longer acceptable
This paper present framework quality evaluation process COTS software product
Our approach based latest international standard software product quality evaluation provides acquirer COTS software method select software product identified measured quality characteristic
Unable display preview
Unable display preview
Over million scientific document fingertip Springer International Publishing AG
Part

âãÏÓ obj endobj xref n n n n n n n n trailer R R startxref EOF obj endobj obj endobj obj endobj obj endobj obj stream R òùÿqÜ ÌµKü Zµ endstream endobj obj stream à

