credit credit credit credit course GA suffix credit course GH suffix credit course GS suffix credit course GHA suffix Computer Science student must receive grade C better course
Students may apply rule
credit credit course level credit course level chosen consultation advisor program approval
Computer Science student must receive grade C better following course

Generally one semester computer science
Introduction computer science programming Java Introduction To Computer Science Programming In MATLAB For student placed COMS AP score First second year
It unlikely
Consult CSA adviser
Computer Science Building Alfred Lerner Hall Broadway New York NY Mail Code Phone Mudd Hall Mail Code Phone

The nontechnical requirement enhances Engineering curriculum
The Committee Instruction established School nontechnical requirement student would learn perspective principle humanity social science part multiperspective education
Through discussion debate writing student improve ability engage ethical analytic discursive imaginative thinking
Columbia Engineering undergraduate explore humanity social science Columbia College student intellectually challenging Core Curriculum course taught Faculty Arts Sciences
These course art literature music political philosophy economics among others provide student broad intellectually disciplined cultural perspective time live work
Alfred Lerner Hall Broadway New York NY Mail Code Phone Mudd Hall Mail Code Phone

The department offer Bachelor Science Bachelor Arts degree computer science
The two degree differ computer science mathematics core science core requirement
Generally BS required computer science course math course science course
The BA humanity requirement leaf flexibility elective second area study
Required Course Prerequisites One CSCI Introduction Computer Science Typically None CSCI Introduction Object Oriented Programming MATH better Intro CS previous CS experience CSCI Data Structures better CSCI MATH CSCI Object Oriented Software Design better CSCI CSCI Computer Architecture CSCI MATH CSCI Operating Systems CSCI CSCI Required Course Prerequisites Required Course Prerequisites CSCI Algorithms CSCI MATH One CS theory course chosen list
Varies course
CSCI Programming Languages CSCI CSCI Software Engineering CSCI Required Course Prerequisites CS Applications One course course chosen list
Varies course
Two additional CS elective higher CSCI Capstone Project I Completion CSCI requirement least credit hour toward graduation junior standing beyond
CSCI Capstone Project II CSCI
Total CS hour required Required Course Prerequisites MATH Calculus I better MATH MATH Calculus II better MATH MATH Discrete Mathematics MATH One additional math course Varies course
Required Course Prerequisites Two math course
Total Math hour required Required Course Prerequisites Sequence two lab science course
Additional four hour science
Required Course Prerequisites Any two course natural science
Required Course Prerequisites PHIL Ethics PHIL Computer Ethics PHIL Remaining
Required Course Prerequisites PHIL Intro Philosophy PHIL Ethics PHIL Computer Ethics PHIL Remaining
Total remaining A S core hour required Students completing primary major another field may complete secondary major Computer Science fulfilling version requirement commensurate credential primary degree
requirement primary
requirement primary
This includes CSCI coursework stated Math Science Ethics requirement
Students whose primary major outside College Arts Sciences required complete formal A S Core
However student receiving
degree secondary major Computer Science required breadth complete least credit hour coursework outside science technology engineering math
Required Course Prerequisites One CSCI Introduction Computer Science Typically None CSCI Introduction Object Oriented Programming MATH better Intro CS previous CS experience CSCI Data Structures better CSCI MATH Two additional CSCI course
Varies course
MATH Discrete Mathematics MATH Total hour required CS Minor

Find Degrees Subject Computer scientist require significant formal education
Learn education job duty requirement see right career
Computer scientist conduct research develop new computer technology order solve problem variety field
A doctoral degree usually required career although might opportunity bachelor degree
Computer scientist develop new technology system solution
The common educational requirement advanced research position field doctorate degree computer science however working federal government may hold bachelor degree computer science similar field
A career computer scientist suitable strong math skill
Computer scientist also called computer information scientist work government agency private software publisher engineering firm academic institution
Businesses government agency usually employ scientist develop new product solve computing problem
Computer scientist employed academic institution typically involved theoretical exploration computing issue often using experimentation modeling research
Computer scientist often work part research team computer programmer information technology professional mechanical electrical engineer
Their research often used design new computer technology
They typically investigate technological topic like artificial intelligence robotics virtual reality
The result research lead improved performance existing computer system software well development new hardware computing technique material
Most computer scientist hold bachelor degree major computer science information system software engineering
After completing program computer scientist often earn computer science computer engineering similar area study
This additional program includes coursework hardware software system program language computational modeling well research project
In May Bureau Labor Statistics BLS reported computer scientist earned mean annual wage approximately
The BLS also forecast job opportunity professional would increase faster average
Computer scientist work cutting edge technology develop
Due amount research computer scientist conduct doctoral degree either computer science related field greatest prospect
If one wish specialize research choosing concentration particular subfield ideal
Enter zip recently attended OpenCourseWare Consortium OCWC gathering educator professional interested Our world undergone technological revolution past decade affected virtually every aspect life Computer class adult cover topic range basic introduction Web design
These course often offered Free online course networking offered real school
Learn networking course available topic
Source Bureau Labor Statistics The listing may include sponsored content popular choice among user
An admission advisor school provide info School Info Program Info Programs Get Started The Art Institutes What highest level education
School Info Program Info Online Programs Get Started Capella University What highest level education completed
School Info Program Info Online Programs Get Started Utica College What highest level education completed
School Info Program Info Online Programs Get Started Grand Canyon University What highest level education
School Info Program Info Online Programs Get Started Johns Hopkins University What highest level education
School Info Program Info Online Programs Get Started Northcentral University What highest level education
School Info Program Info Online Programs Get Started Strayer University What highest level education completed
School Info Program Info Online Programs Get Started Georgetown University What highest level education completed
School Info Program Info Online Programs Get Started Herzing University What highest level education
School Info Program Info Online Programs Get Started City University Seattle What highest level education completed
The listing may include sponsored content popular choice among user
What highest level education
What highest level education completed
What highest level education completed
What highest level education
What highest level education
What highest level education
What highest level education completed
What highest level education completed
What highest level education
What highest level education completed
What highest Help u match school offer program related Computer Sciences copyright
All trademark copyright property respective owner
All right reserved

Find Info For Quick Links The first six core course taken freshman sophomore year lay strong foundation computer science major
Each student selects Track complete advanced course
Each Track Required Courses list potential elective
A student may complete one Track desired
The flexibility Computer Science curriculum come requiring six foundational core course followed one Tracks allow student deepen understanding specific area computer science
Some intersection track allows specialization multiple area example Systems Programming Software Engineering
All beginning computer science major required take Freshman Resources Seminar CS Tools
These credit course Computer Science student take first semester
Students equally encouraged take Sophomore Development Seminar Junior Resource Seminar
Core requirement Credits All CS core course track requirement regardless department must completed grade C better
To view course detail track time click PDF
Approved course approved experience No departmental restriction Visit find Sample Plans Study
Courses need taken sequential order long prerequisite met
Department Computer Science University Street West Lafayette IN Phone Fax Trouble page

Please contact

Courses offered Department Computer Science listed subject code CS web site
The Department Computer Science CS operates support computing facility departmental education research administration need
All CS student access departmental student machine general use mail news etc
well computer lab public workstation located Gates Building
In addition student access system located research area
Each research group Computer Science system specific research need
These system include workstation PCs Macs computer cluster local mail file server
Servers workstation running Linux various version Windows commonplace
Support course work instruction provided system available UIT SoE
The mission undergraduate program Computer Science develop student breadth knowledge across subject area computer science including ability apply defining process computer science theory abstraction design implementation solve problem discipline
Students take set core course
After learning essential programming technique mathematical foundation computer science student take course area programming technique automaton complexity theory system programming computer architecture analysis algorithm artificial intelligence application
The program prepares student career government law corporate sector graduate study
The department expects undergraduate major program able demonstrate following learning outcome
These learning outcome used evaluating student department undergraduate program
Students expected able The purpose master program provide student knowledge skill necessary professional career doctoral study
This done course work foundational element field least one graduate specialization
Areas specialization include artificial intelligence biocomputation computer network security interaction information management analytics mobile internet computing computing software theory system theoretical computer science
The conferred upon candidate demonstrated substantial scholarship ability conduct independent research
Through course work guided research program prepares student make original contribution Computer Science related field
The University basic requirement
degree discussed section bulletin
The first digit CS course number indicates general level sophistication The ten digit indicates area Computer Science address The department offer major Computer Science minor Computer Science
Further information available published School Engineering
The Computer Science major offer number track program study student choose allowing focus program area interest
These track also reflect broad diversity area computing discipline
The department honor program
In addition Computer Science Stanford offer several interdisciplinary degree substantial computer science component
The Symbolic Systems major School Humanities Sciences offer opportunity explore computer science relation linguistics philosophy psychology
The Mathematical Computational Sciences major also Humanities Sciences allows student explore computer science along mathematics statistic operation research
Completion undergraduate program Computer Science lead conferral Bachelor Science Computer Science
The mission undergraduate program Computer Science develop student breadth knowledge across subject area computer science including ability apply defining process computer science theory abstraction design implementation solve problem discipline
Students take set core course
After learning essential programming technique mathematical foundation computer science student take course area programming technique automaton complexity theory system programming computer architecture analysis algorithm artificial intelligence application
The program prepares student career government law corporate sector graduate study
Choose one following ten CS degree track track must consist least unit class For additional information sample program see OR OR AP Calculus Credit may used long least MATH unit taken
AP Calculus Credit must approved School Engineering
The math elective list consists CME
Completion together count one math elective
Restrictions may used combination satisfy math elective requirement
Students taken may count elective
Courses counted math elective also count CS elective vice versa
The science elective may course unit School Engineering Science list Fig
UGHB AP Chemistry Credit
Either PHYSICS sequence may substituted long least science unit taken
AP Chemistry Credit AP Physics Credit must approved School Engineering
General CS Electives CS CS CS CS CS CS CS CS strongly recommended list Graphics track
Students taking also required take prerequisite
Independent study project require faculty sponsorship must approved adviser faculty sponsor CS senior project adviser Young
A signed approval form along brief description proposed project filed quarter work project begun
Further detail found
The Department Computer Science CS offer honor program undergraduate whose academic record personal initiative indicate necessary skill undertake research computer science
Admission program application
To apply honor program student must majoring Computer Science grade point average GPA least course count toward major achieve senior standing unit end academic year apply
Coterminal master student eligible apply long already received undergraduate degree
Beyond requirement student apply honor program must find Computer Science faculty member agrees serve thesis adviser project
Thesis adviser must member Stanford Academic Council
Students meet eligibility requirement wish considered honor program must submit written application CS undergraduate program office May year preceding honor work
The application must include letter describing research project letter endorsement faculty sponsor transcript course taken Stanford
Each year faculty review committee selects successful candidate honor pool qualified applicant
In order receive departmental honor student admitted honor program must addition satisfying standard requirement undergraduate degree following Students arriving Stanford widely differing background goal find ability use computer effectively beneficial education
The department offer many introductory course meet need student
For student whose principal interest exposure fundamental idea behind computer science programming appropriate course
They intended student nontechnical discipline expect make use computer expect go advanced course
meet new Ways Thinking Ways Doing breadth requirement Formal Reasoning include introduction programming use modern technology
Students interested learning use computer consider Introduction Computing Stanford
Students intend pursue serious course study computer science may enter program variety level depending background
Students little prior experience wish take time study fundamental programming take followed
Students need prior programming experience
Students significant prior exposure programming want intensive introduction field take may start directly
us Java JavaScript Python programming language X use
No prior knowledge language assumed prior programming experience required X may language
In case student encouraged discus background instructor responsible course
After introductory sequence Computer Science major need significant background computer science related major engineering take
offer introduction mathematical theoretical foundation computer science
expose student variety programming concept illustrate critical strategy used system development build material focusing development software making use system networking abstraction
For course description additional offering see listing ExploreCourses web site Bing Overseas Studies web site
Students consult department program student service office applicability Overseas Studies course major minor program
The joint major program JMP authorized Academic Senate pilot period six year beginning permit student major Computer Science one ten Humanities major
See section bulletin description University requirement JMP
See also Undergraduate Advising Research JMP web site associated FAQs
Students completing JMP receive
Bachelor Arts Science
Because JMP new experimental change procedure may occur student advised check relevant section bulletin periodically
The Joint Major provides unique opportunity gain mastery two discipline Computer Science selected humanity field
Unlike double major dual major Joint Major emphasizes integration two field cohesive transdisciplinary course study integrated capstone experience
The Joint Major blend intellectual tradition two Stanford way reduces total unit requirement major
See respective humanity department Joint Major Program section bulletin detail humanity major requirement
The CS requirement Joint Major follow CS requirement degree following exception One Track Elective rather three
One course Note Department Program Sheet plus one course Note Program No Track Electives required rather two No Interdisciplinary HCI Electives required One Track Elective rather three One Track Elective rather three One Track Elective rather three No Track Electives required rather two Proposals include minimum five rather seven course least four must CS course numbered
To declare joint major student must first declare major Axess submit The required graduation student joint major
To drop joint major student must submit
Students may also consult question concerning dropping joint major
Students completing joint major graduate
degree
The two major identified one diploma separated hyphen
There notation indicating student completed Joint Major
The two major identified transcript notation indicating student completed Joint Major
The following core course fulfill minor requirement
Prerequisites include standard mathematics sequence CME
student programming background begin minor consists seven course
In general
degree Computer Science intended terminal professional degree lead degree
Most student planning obtain degree apply directly admission program
Some student however may wish complete master program deciding whether pursue To give student greater opportunity become familiar research department program leading master degree distinction research
This program described detail
Applications
program supporting document must submitted received online published deadline
Information available department web site see also department
Exceptions made applicant already student Stanford applying
Coterminal master degree candidate expected complete master degree requirement described bulletin
University requirement coterminal master degree described section
University requirement master degree described section bulletin
After accepting admission coterminal master degree program student may request transfer course undergraduate graduate career satisfy requirement master degree
Transfer course graduate career requires review approval undergraduate graduate program case case basis
In master program course taken first quarter sophomore year eligible consideration transfer graduate career timing first graduate quarter factor
No course taken prior first quarter sophomore year may used meet master degree requirement
Course transfer possible bachelor degree conferred
The University requires graduate adviser assigned student first graduate quarter even though undergraduate career may still open
The University also requires Master Degree Program Proposal completed student approved department end student first graduate quarter
A candidate required complete program unit
At least must graded unit passed grade point average GPA B better
The unit may include unit course listed Requirement
Thus student needing take two course listed Requirement actually complete unit course work program
Only student may expect finish program one year student complete program six quarter
Students hoping complete program unit already substantial background computer science including course work experience equivalent Requirement prior course work related specialization area
Students must complete following course waive providing evidence adviser similar advanced course taken either Stanford another institution total unit used satisfy foundation requirement may exceed Students must complete least one course designated significant software implementation component
The list course includes Students may choose satisfy requirement one two option Single Depth Dual Depth outlined following
All course taken requirement must taken letter grade basis three unit
Ten approved specialization area may used satisfy Requirement listed following
Students may propose
program committee coherent program meet goal satisfy basic requirement
Courses marked asterisk require consent faculty adviser
Courses marked double asterisk may waived student equivalent course work approval adviser
Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
Any course must numbered taken least unit count requirement Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
Students single depth specialization must complete three following breadth course receive letter grade
With consent faculty adviser
Students equivalent course work may waive approval adviser
Additional elective unit must technical course numbered related degree program approved adviser MS program administrator
All CS course numbered exception CS taken unit elective course
Additionally maximum unit CS seminar unit seminar offered School Engineering may counted elective
Elective course may taken credit basis provided minimum graded unit presented within program
A student wish pursue
CS distinction research must first identify faculty adviser agrees supervise support research work
The research adviser must member Academic Council must hold appointment Computer Science
The student principal adviser must also identify another faculty member need Department Computer Science serve secondary adviser reader research report
In addition student must complete following requirement beyond regular
CS degree Candidates MS specialization Computer Science Education admitted separate pool applicant eligible specialization
The qualification admission CS Mathematical Foundations Computing CS Computer Organization Systems CS Systems Design CS Introduction Probability Computer Scientists CS Principles Computer Systems CS Design Analysis Algorithms CS Teaching Computer Science CS Great Ideas Computer Science Two CS elective course final project The joint MS Computer degree link two Stanford University program
This joint degree offer student opportunity develop advanced technical managerial skill broader perspective existing technology new technology venture
Admission joint program requires student apply accepted independently Computer Science Department School Engineering Graduate School Business
Students may apply concurrently elect begin course study CS apply GSB first year
Additional information MS Computer Joint Degree Program requirement available
Law student interested pursuing
Computer Science must apply admission Computer Science Department either concurrently applying Law School ii admitted Law School later earlier end second year Law School b Computer Science Department admission deadline year following second year Law School
In addition admitted separately Law School Computer Science Department student must secure permission academic unit pursue degree unit part joint degree program

student may elect begin course study either Law School Computer Science Department
Faculty advisor academic unit participate planning supervising student joint program
Students must enrolled Law School first year law study
Otherwise enrollment may graduate school Law School student may choose course either program regardless enrolled
Students must satisfy requirement
degree specified Law School
degree specified Bulletin
The Law School approves course Department Computer Science may count toward
degree Computer Science Department approves course Law School may count toward
degree Computer Science
In either case approval may consist list applicable student may tailored individual student program
No unit approved course may counted toward degree
No unit course originate outside Law School may count toward Law degree
To extent course joint degree program originate outside Law School count toward Law degree Law School credit permitted Section Law School Regulations shall reduced basis zero
The maximum number Law School credit may counted toward
Computer Science greater unit ii maximum number unit course outside department
candidate Computer Science permitted count toward
case particular student individual program
Tuition financial aid arrangement normally school student enrolled
Graduate student assistantships available
assistant receive tuition scholarship unit per quarter academic year addition receive monthly stipend
Duties assistant academic year involve approximately hour work per week
Course assistant CAs help instructor teach course conducting discussion section consulting student grading examination
Research assistant RAs help faculty senior staff member research computer science
Many MS student hired staff teaching research assistantships
However MS student plan appointed assistantship
Students fellowship may opportunity supplement stipend serving graduate student assistant
The University basic requirement degree outlined section bulletin
Department requirement stated
Applications program supporting document must submitted received online published deadline
See department web site
Changes update admission process posted September
The following general department requirement
Contact Computer Science administrator detail
University policy requires doctoral student declare candidacy end sixth quarter residence excluding summer
However aligning permanent adviser passing six breadth requirement taking class four different faculty student eligible file candidacy prior sixth quarter
The candidacy form serf contract department student
The department acknowledges student candidate agrees program submitted student sufficient warrant granting upon completion
Candidacy expires five year date submission candidacy form rounded end quarter
In special case department may extend student candidacy obligation
By end first academic year student aligned permanent research advisor
By Spring Quarter second year student complete six breadth area requirement two breadth area requirement three area file candidacy
By Spring Quarter third year student pas area intended dissertation
Within one year passing Qualifying Examination student submit signed
By Spring Quarter fourth year student submit
The teaching requirement may satisfied time
The research requirement routinely satisfied participation research throughout student career
For minor Computer Science candidate must complete unit Computer Science coursework numbered except course listed pdf
At least three course must master core course provide breadth one course numbered provide depth
One course taken must include significant programming project demonstrate programming efficiency
Courses must taken letter grade passed grade better
Applications minor Computer Science submitted time admission candidacy
Tom Binford Moses Charikar John Hennessy Jeannette Bogh Kayvon Fatahalian Patrick Hayden Michael Levitt Roy Pea Allison Okamura Chris Potts John Duchi Sean Follmer Sharad Goel Thomas Icard Ramesh Johari Camille Utterback Gordon Wetzstein Aaron Sidford Dan Yamins James Zou Gerald Cain Chris Gregg Victoria Kirst Cynthia Lee Chris Piech Keith Schwarz Pei Cao Stuart Card Tom Dean Daphne Koller Pandurang Nayak Thomas Funkhouser Anshul Kundaje Recalled active duty
For limited experience computer want learn Stanford computing environment
Topics include computer maintenance security computing resource Internet privacy copyright law
dormitory cluster prepared administered weekly Resident Computer Consultant RCC
Final project
Not programming course
A practical introduction using Unix operating system focus Linux command line skill
Class consist video tutorial weekly lab section
The time listed AXESS first week logistical meeting
Topics include grep regular expression ZSH Vim Emacs basic advanced GDB feature permission working file system revision control Unix utility environment customization using Python shell script
Topics may added given sufficient interest
Course website http
Introduction fundamental analysis specifically needed engineer make informed intelligent financial decision
Course focus actual financial information technology company realistic financial issue
Topics include behavioral finance budgeting debt compensation stock option investing real estate
No prior finance economics experience required
This course prepare student interview software engineering related internship position industry
Drawing multiple source actual interview question student learn key strategy specific interview
Students encouraged synthesize information learned across different course major
Emphasis oral combination mode communication common coding interview unfamiliar setting problem solving many student
Prerequisites X
This course cover fundamental contemporary usage Tensorflow library deep learning research
Through course student use Tensorflow build model different complexity simple regression convolutional neural network recurrent neural network LSTM solve task word embeddings translation optical character recognition
Students also learn best practice structure model manage research experiment
Prerequisites
Recent advance computing may place u threshold unique turning point human history
Soon likely entrust management environment economy security infrastructure food production healthcare large degree even personal activity artificially intelligent computer system
The prospect turning key increasingly autonomous system raise many complex troubling question
How society respond versatile robot system displace spectrum worker
Will benefit technological revolution broadly distributed accrue lucky
How ensure system respect ethical principle make decision speed rationale exceed ability comprehend
What legal right responsibility grant
And regard merely sophisticated tool newly emerging form life
The goal equip student intellectual tool ethical foundation psychological framework successfully navigate coming age intelligent machine
Same Technical development artificial intelligence AI opened new opportunity entrepreneurship well raised profound longer term question human societal economic system may accommodate rise intelligent machine
In course closely Stanford professor leading Silicon Valley venture capitalist examine current state art capability existing artificial intelligence system well economic challenge opportunity early stage startup large company could leverage AI
We focus gap business need current technical capability identify high impact direction development future AI technology
Simultaneously explore longer term societal impact AI driven inexorable trend technology entrepreneurship
The course includes guest lecture leading technologist entrepreneur employ AI variety field including healthcare education car computer security natural language interface computer vision system hardware acceleration
The fundamental contemporary usage Python programming language
Primary focus developing best practice writing Python exploring extensible unique part Python make powerful language
Topics include data structure
list dictionary characteristic pythonic convention anonymous function iterables powerful
map filter zip
We also cover design standard library common package
request pillow
Time permitting explore modern web framework project distribution
Prerequisite equivalent
Application required
Introduction JavaScript programming language focus building contemporary application
Course consists activity programming assignment challenge student create functional web apps
Yelp Piazza Instagram
Topics include programming document object model DOM application programming interface APIs asynchronous JavaScript XML AJAX jQuery MongoDB
Prerequisite
Clojure dialect Lisp run JVM CLR Javascript engine
This course explores fundamental philosophy Clojure emphasis benefit immutability functional programming make powerful fun language
Topics include immutability functional programming function composition higher order function concurrency atom promise future actor Software Transactional Memory etc LISP development homoiconicity macro interop Clojure code code native host VM
The course also explores design paradigm look difference functional programing programing well versus design
Preference freshman experience photography use computer
Elements photography lighting focus depth field aperture composition
How photographer make photo available computer viewing reliably store organizes tag search distributes online
No programming experience required
Digital SLRs editing software provided student wish use
The fundamental mobile application development using React Native framework RN
Primary focus developing best practice creating apps iOS Android using Javascript existing web mobile development paradigm
Students explore unique aspect made RN primary tool mobile development within Facebook Instagram Airbnb Walmart Tesla UberEats
Skills developed course consolidated completion final project
Required Prerequisites least one following development heavy class experience
Apply http January Saturday week one
This crash course use computer system aboutnthe size credit card rasberry pi computer control manyndifferent sensor implement ten week including LEDs motionnsensors light controller accelerometer
The ability fearlesslyngrab set hardware device examine data sheet see usenit stitch together using simple code secret weapon people lack allows build many interestingngadgets
We start bare metal system operatingnsystem support teach read device data sheetsndescribing sensor write minimal code needed control themn including debug thing go wrong always
Thisncourse differs deliberately mostly andnwhy rather hope thing able endnwill inspire follow rest CS curriculum understandnbetter thing used work
Prerequisites knowledge Cnprogramming language
A Linux Mac laptop comfortablencoding
Students class work small team implement project partner organization
Taught Good team aim class empower leverage technology social good inspiring action facilitating collaboration forging pathway towards global change
Recommended
Class open student year
May repeated credit
Cardinal Course certified Haas Center
Get experience launching developing social impact project
Students work small team develop project around problem domain provided partner organization guidance support coach industry domain expert
Along support resource community discussion class provides outlet student create social change CS providing student experience engaging full product development cycle project
Prerequisite equivalent experience consent instructor
Continuation CS Social Good Studio Designing Social Impact Projects nnTeams enter quarter completed tested minimal viable product MVP target user community partner
Students learn apply scalable technical framework method measure social impact tool deployment user acquisition technique strategy
The purpose class facilitate student build sustainable infrastructure around product idea
host mentor guest speaker industry expert various workshop
The class culminates showcase student share project stakeholder public
Prerequisite consent instructor
This course introduces student various intersection social good technology weekly discussion speaker series
Students given space exchange idea experience regarding certain social issue
Invited speaker come industry academia organization
They share career path drove field advice student
The topic examined span broad variety social issue race class education sustainability help student better understand kick journey using computer science social good
Stanford Introductory Seminar
Preference freshman
Covers intellectual tradition computer science emphasizing idea reflect important milestone history discipline
No prior experience programming assumed
Topics include programming problem solving implementing computation hardware algorithmic efficiency theoretical limit computation cryptography security philosophy behind artificial intelligence
This seminar explore great discovery underlie computer science invention produced remarkable advance computing technology
Key question explore include What computable
How information securely communicated
How computer fundamentally work
What make computer fast
Our exploration look principle behind discovery invention well history people involved event
Some exposure programming helpful strictly necessary
The class discus Theory Computing ambitious intellectual endeavor impact beyond Computer Science
What computation
How study capture important aspect evolution specie structure social network working smart phone
What law efficiency complexity govern computation
We see surprising algorithm familiar problem well simple problem one know solve efficiently
We encounter logic paradox expose limitation computation explore different world may living depending answer central problem nThe class intended student wide range interest
The course involve programming
While class rely deep mathematics beyond basic math deal mathematical formalization concept mathematical
Therefore mathematical maturity interest would useful
Media innovation merges technical cultural development benefit diverse social group different way
Considering historic medium innovation cinema work innovator residence Paul Miller aka DJ Spooky course focus idea benefit
Lectures workshop underscore need innovate survive get heard offer radical innovation art entertainment industry
Course project considered inclusion Stanford Humanities Showcase
Open undergraduate graduate student
Playback combine element theater community work storytelling
In playback show group actor musician create improvised performance based audience personal story
A playback show brings powerful listening sharing experience
During course tell listen play together train playback technique
We write diary process experience context education research
The course aimed strengthen listening ability creativity collaborative spirit integral part great science
In playback research alwaysnmoving together known unknown limited enrollment class
Application required
Apply http
How mobile technology leveraged tackle pressing problem healthcare
Our class feature guest lecturer Verily formerly Google Life Sciences Apple Health mobile health company developing country Bay Area
This class give overview fundamental contemporary usage iOS development Mobile Health focus
Primary focus developing best practice Apple HealthKit ResearchKit among tool iOS application development
Students complete project mobile health space sponsored advised professional student TAs
Recommended iOS development similar level
Apply http Sept
Introduces essential idea computing data representation algorithm programming code computer hardware networking security social issue
Students learn computer work exercise
In particular student see capability weakness computer system mysterious intimidating
Course feature many small programming exercise although prior programming experience assumed required
complete programming course
effectively alternative
A laptop computer recommended exercise
Aimed undergraduate graduate student want learn basic big data tool technique apply knowledge area study
Many world biggest discovery decision science technology business medicine politics society whole made basis analyzing massive data set
At time surprisingly easy make error come false conclusion data analysis alone
This course provides broad practical introduction big data data analysis technique including database data mining machine learning data analysis tool including spreadsheet relational database SQL Python R data visualization technique tool pitfall data collection analysis historical context privacy ethical issue
Tools technique cursory level providing basis future exploration application
Prerequisites comfort basic logic mathematical concept along high school AP computer science equivalent programming experience
Mathematical foundation required computer science including propositional predicate logic induction set function relation
Formal language theory including regular expression grammar finite automaton Turing machine
Mathematical rigor proof technique application
Prerequisite equivalent
may taken concurrently
Problem solving strategy technique discrete mathematics computer science
Additional problem solving practice
participation required
Prerequisite consent instructor

For major
What computer work
Practical experience programming
Construction computer program basic design technique
A survey Internet technology basic computer hardware
Students technical field student looking acquire programming skill take
Students prior computer science experience level require consent instructor
Prerequisite minimal math skill
Introduction engineering computer application emphasizing modern software engineering principle design decomposition encapsulation abstraction testing
Emphasis good programming style facility respective language
No prior programming experience required
Summer quarter enrollment limited
Alternative version available cover material different programming language Java Fall Win Spr Sum qtr enroll Section Javascript Fall qtr enroll Section Python Winter Spring qtr enroll Section
Same Introduction engineering computer application emphasizing modern software engineering principle design decomposition encapsulation abstraction testing
Uses JavaScript programming language
Emphasis good programming style facility JavaScript language
No prior programming experience required
This course cover material Section Java Section Python course us JavaScript programming language
To enroll class enroll Section Fall Qtr
May taken unit grad student
Introduction engineering computer application Python emphasizing modern software engineering principle decomposition abstraction testing
Emphasis good programming style
This course cover material Section Java Section JavaScript course us Python programming language popular general engineering web development
Required reading available free web
Students encouraged bring laptop lecture live exercise integrated lecture
No prior programming experience required
To enroll class enroll Section
May taken unit grad student
Enrollment limited winter quarter spring quarter enrollment unlimited
Abstraction relation programming
Software engineering principle data abstraction modularity
programming fundamental data structure stack queue set design
Recursion recursive data structure linked list tree graph
Introduction time space complexity analysis
Uses programming language covering basic facility
Prerequisite equivalent
Summer quarter enrollment limited
Same A follow class provide practical web programming skill cover essential computing topic including computer security privacy
Additional topic include digital representation image music exploration Internet work look internals computer
Students taking course unit required carry supplementary programming assignment addition course regular assignment
Prerequisite equivalent
Supplemental lab
Additional feature standard programming practice
Possible topic include advanced language feature standard library STL container algorithm object memory management operator overloading inheritance
Prerequisite consent instructor
Corequisite
Supplemental lab
Students apply fundamental computer science concept learned problem social good space health government education environment
Course consists activity designed local tech company nonprofit
Corequisite
Intensive version student strong programming background interested rigorous treatment topic accelerated pace
Additional advanced material challenging project
Winter quarter assignment based CS department research
Prerequisite excellence equivalent consent instructor
Winter quarter enrollment limited
Same Introduction fundamental concept computer system
Explores computer system execute program manipulate data working C programming language microprocessor
Topics covered include C programming language data representation code computer arithmetic element code compilation memory organization management performance evaluation optimization
Prerequisites X consent instructor
Introduction fundamental concept computer system bare metal programming Raspberry Pi
Explores five concept come together computer system hardware architecture assembly code C language software development tool
Students programming Raspberry Pi kit several LEDs button
Topics covered include C programming language data representation code computer arithmetic compilation memory organization management debugging hardware
Prerequisite X consent instructor
There required lab fee
Software design construction context large OOP library
Taught Java
Topics OOP design design pattern testing graphical user interface GUI OOP library software engineering strategy approach programming team
Prerequisite
Topics include counting combinatorics random variable conditional probability independence distribution expectation point estimation limit theorem
Applications probability computer science including machine learning use probability analysis algorithm
Prerequisites X multivariate calculus level equivalent
Supplemental lab
Introduces R programming language statistical computing
Topics include basic facility R including mathematical graphical probability function building simulation introductory data fitting machine learning
Provides exposure functional programming paradigm
Corequisite
Principles practice engineering computer software hardware system
Topics include technique controlling complexity strong modularity using design virtual memory thread network atomicity coordination parallel activity security encryption performance optimization
Prerequisite
Extracting meaning information structure human language text speech web page social network
Methods include string algorithm edit distance language modeling noisy channel naive Bayes inverted index collaborative filtering PageRank
Applications question answering sentiment analysis information retrieval text classification social network model chatbots sequence alignment spell checking speech processing recommender system
nPrerequisites
Same Robots navigate space perform duty search engine index billion image video algorithm diagnose medical image disease smart car see drive safely Lying heart modern AI application computer vision technology perceive understand reconstruct complex visual world
This course designed student interested learning fundamental principle important application computer vision
Course introduce number fundamental concept computer vision expose student number application plus guide student series project get implement computer vision algorithm
Prerequisites Students familiar Python
programmed Python Linux plus Calculus Linear Algebra
Operating system design implementation
Basic structure synchronization communication mechanism implementation process process management scheduling protection memory organization management including virtual memory device management secondary storage file system
Prerequisite
This experimental course offering
Students implement simple clean operating system virtual memory process file system rasberry pi computer use result run variety device
Enrollment limited student expect course rough edge since first offering
Concepts technique used constructing interactive web application
web facility HTML cascading stylesheets document object model JavaScript framework technology JavaScript session database
Issues web security application scalability
New model web application deployment
Prerequisites
Principles practice design implementation compiler interpreter
Topics lexical analysis parsing theory symbol table type system scope semantic analysis intermediate representation runtime environment code generation basic program analysis optimization
Students construct compiler simple language course programming project
Prerequisites
Principles practice
Structure component computer network packet switching layered architecture
Applications file sharing socket programming
Reliable transport reliable transfer flow control congestion control
The network layer name address routing
Local area network ethernet switch
Wireless network network security
Prerequisite
The course cover database design use database management system application
It includes extensive coverage relational model relational algebra course includes database design relational design principle based dependency normal form
Many additional key database topic design perspective also covered index view transaction authorization integrity constraint trigger analytical processing OLAP JSON emerging NoSQL system
Class time include guest speaker industry additional advanced topic time class interest permit
Prerequisites equivalent
This course provides introduction game design covering topic like Art Audio User Interfaces Production Narrative Design Marketing Publishing
Speakers profession provide relevant context weekly seminar
Weekly assignment include material require student independently create small video game
Classroom meeting used foster student project discussion deepen understanding material
The course culminates student forming project team create final video game
Assignments completed within Unity game development engine prior Unity experience required
Given class size limitation online survey distributed class start student selected achieve diverse class composition
Prerequisite equivalent programming experience
Introduces fundamental method principle designing implementing evaluating user interface
Topics design rapid prototyping experimentation direct manipulation cognitive principle visual design social software software tool
Learn work team design project supported lecture reading studio
Prerequisite X equivalent programming experience
Recommended CS Majors also taken one
Introductory prerequisite course computer graphic sequence introducing student technical concept behind creating synthetic computer generated image
Focuses using OpenGL create visual imagery well understanding underlying mathematical concept including triangle normal interpolation texture mapping bump mapping etc
Course cover fundamental understanding light color well impact computer display printer
Class discus thoroughly light interacts environment constructing engineering model BRDF plus various simplification basic lighting shading model
Also cover ray tracing technology creating virtual image drawing parallel ray tracer real world camera illustrate various concept
acceleration structure also discussed
The final class consists building ray tracer create visually compelling image
Starter code code bit provided aid development class focus code opposed code look like
Therefore grading weighted toward person demo code action creativity production impressive visual imagery highly encouraged
Prerequisites
This course introduction parallelism parallel programming
Most new computer architecture parallel programming machine requires knowledge basic issue technique writing parallel software
Topics variety parallelism current hardware fast network multicore accelerator GPUs vector instruction set importance locality implicit explicit parallelism shared memory synchronization mechanism locking atomicity transaction barrier parallel programming model thread data MapReduce Apache Spark SPMD message passing SIMT transaction nested parallelism
Significant parallel programming assignment given homework
The course open student completed introductory CS course sequence taken
This course provides mathematical introduction following question What computation
Given computational model problem hope solve principle model
Besides solvable principle problem hope efficiently solve
In many case give completely rigorous answer case question become major open problem computer science mathematics
By end course student able classify computational problem term computational complexity Is problem regular
Not regular
Decidable
Recognizable
Neither
Solvable P

etc
Students gain deeper appreciation fundamental issue computing independent trend technology Thesis P versus NP problem
Prerequisites
For senior graduate student
Principles computer system security
Attack technique defend
Topics include network attack defense operating system security application security web apps database malware privacy security mobile device
Course project focus building reliable code
Prerequisite
Recommended basic Unix
An elementary exposition computational point view propositional predicate logic axiomatic theory theory equality induction
Interpretations model validity proof strategy application
Automated deduction polarity skolemization unification resolution equality
Prerequisite
Worst average case analysis
Recurrences asymptotics
Efficient algorithm sorting searching selection
Data structure binary search tree heap hash table
Algorithm design technique dynamic programming greedy algorithm amortized analysis randomization
Algorithms fundamental graph problem spanning tree connected component topological sort shortest path
Possible additional topic network flow string searching
Prerequisite
Techniques design analysis implementation data structure
Isometries data structure including tree tree amortized analysis including Fibonacci heap splay tree randomization including sketch dynamic perfect hash table
Data structure integer string including van Emde Boas tree suffix tree
Possible additional topic include functional data structure concurrent data structure spatial data structure
Prerequisites
This course provide rigorous introduction central idea algorithm constitute core modern algorithm toolkit
Emphasis understanding theoretical intuition principle underlying algorithm discus well developing concrete understanding implement apply algorithm
The course structured sequence investigation week introduce one algorithmic idea discus motivation theoretical underpinning practical application algorithmic idea
Each topic accompanied student guided practical application idea week
Topics include hashing dimension reduction LSH boosting linear programming gradient descent sampling estimation introduction spectral technique
Prerequisites permission instructor
Classroom instantiation Stanford Laptop Orchestra SLOrk includes public performance
An ensemble human laptop controller special speaker array designed provide instrument sonic identity presence
Topics activity include issue composing laptop orchestra instrument design sound synthesis programming live performance
May repeated four time credit
Space limited see http information application enrollment process
May repeat credit
Same Only one count toward CS degree program
Introduction computational biology informatic exploration human genome
Topics include genome sequencing functional landscape human genome gene gene regulation repeat RNA gene epigenetics genome evolution comparative genomics ultraconservation
Additional topic may include population genetics personalized genomics ancient DNA
Course includes primer molecular biology UCSC Genome Browser text processing language
Guest lecture current genomic research topic
Class similar spirit offered year
Prerequisites equivalent background programming
Primarily major entering field
Ethical social issue related development use computer technology
Ethical theory social political legal consideration
Scenarios problem area privacy reliability risk complex system responsibility professional application consequence work
Prerequisite X
To take course student need permission instructor may need complete assignment due first day class
version
Satisfies WIM requirement Computer Science Engineering Physics STS Sci undergraduate
To take course student need permission instructor may need complete assignment due first day class
Same WIM You undoubtedly leave Stanford technical skill excel first job
But skill critical making difference
This seminar taught two industry veteran engineering leadership product management
In small group setting explore great individual contributor communicating clarity getting traction idea resolving conflict delivering best work transition leadership role finding leadership opportunity creating great team culture hiring onboarding new team member
We end turning back career picking first job negotiating offer managing career change building great network succeeding mentor
Prerequisites Preference given senior Computer Science related major
Enrollment limited application required admittance
Starting company hard
Starting company building successful lasting business even
This course aim teach fundamental starting startup interactive class goal decreasing barrier entry new entrepreneur
Instruction focus primarily first day ideation execution covering minutia company structure product design core metric evaluation ethic
Lectures taught expert startup space accompanied small group learning session active entrepreneur
This course teach art software design decompose large complex system class implemented maintained easily
Topics include information hiding thick class API design managing complexity write documentation
The class involve significant system software implementation use iterative approach consisting implementation review revision
The course taught studio format discussion code review addition lecture
Prerequisites
Application consent instructor required
Apply http
Restricted Computer Science Computer Systems Engineering student
Group individual project faculty direction
Register using instructor section number
A project either significant software application publishable research
Software application project include substantial programming modern technology comparable scale shareware program commercial application
Research project may result paper publishable academic journal presentable conference
Required public presentation final application research result
Prerequisite Completion least unit
Restricted Computer Science Computer Systems Engineering student
version
Register using section number Academic Council member
Prerequisite Completion least unit
Same WIM Restricted Computer Science student
Appropriate academic credit without financial support given volunteer computer programming work public benefit educational value
Introduction building application Android platform
Examines key concept Android programming tool chain application view control intent designing mobile UIs networking threading
Features weekly lecture series small programming project
Phone required phone make project engaging
Prerequisites Java experience level
Enrollment limited application required
technology used create web site Google map Gmail
Includes CSS JavaScript Document Object Model DOM Ajax
Prerequisite programming experience level
Tools APIs required build application iPhone iPad platform using iOS SDK
User interface design mobile device unique user interaction using technology
design using paradigm memory management Swift programming language
Other topic include database API animation networking performance consideration
nPrerequisites C language programming experience exceeding X level
Previous completion one following required http preferred
Recommended UNIX graphic database
Learn solve real world engineering challenge programming project course
Scale project coding engineering perspective use technique increase usability popularity development velocity maintainability
Discover engineering applies project ideation self team development customer acquisition user experience
As build application cover tool practice scalable programming including javascript ecosystem container cloud platform agile development growth hacking
We focus rapid feedback loop build better system faster
In one quarter develop scalable habit build apps designed grow
Application required
Prerequisites one
Introduction web development emphasis fundamental
topic include layout rendering HTML CSS programming JavaScript asynchronous programming technique including Promises
Focus modern standardized APIs best practice
topic include development RESTful APIs JSON service basic storage technique
Covers desktop mobile web development
Enrollment limited
Application required
Apply http Tuesday March nPrerequisite equivalent
Design specification coding testing significant team programming project faculty supervision
Documentation includes detailed proposal
Public demonstration project end quarter
Preference given senior
May repeat credit
Prerequisites
Advanced method designing prototyping evaluating user interface computing application
Novel interface technology advanced interface design method prototyping tool
Substantial course project presented public presentation
Prerequisites permission instructor
Restricted Computer Science Electrical Engineering undergraduate
version
Preference given senior
Same WIM Focus Macintosh Windows operating system maintenance troubleshooting hardware software foundation concept
Topics include operating system networking security troubleshooting methodology emphasis Stanford computing environment
Not programming course
Prerequisite equivalent
Students lead discussion section learning teach programming language introductory level
Focus teaching skill technique course specific
Application interview required see http
Students build teaching skill developed
Focus technique used teach topic covered
Prerequisite successful completion
Special study faculty direction usually leading written report
Letter grade appropriate enroll
Staff
Intellectual property law relates computer science including copyright registration patent trade secret contract issue agreement license agreement dispute resolution principle business formation ownership
Emphasis topic current interest open source free software movement sharing encryption data mining spam
This class use case method teach basic computer network information security technology law policy business perspective
Using real world topic study technical legal policy business aspect incident issue potential solution
The case study organized around following topic vulnerability disclosure state sponsored sabotage corporate government espionage credit card theft theft embarrassing personal data phishing social engineering attack denial service attack attack weak session management URLs security risk benefit cloud data storage wiretapping Internet digital forensics
Students taking class learn technique attacker use applicable legal prohibition right remedy policy context strategy law policy business managing risk
Grades based class participation two reflection paper final exam
Special Instructions This class limited student effort made student Stanford Law School student selected lottery student Computer Science student International Policy Studies student
Elements used grading Class Participation Written Assignments Final Exam
Law School Law International Policy Studies IPS course number TBD
Legal informatics based representation regulation computable form
Encoding regulation facilitate creation legal information system significant practical value
Convergence technological trend growth Internet advent semantic web technology progress computational logic make computational law prospect better
Topics current state computational law prospect problem philosophical legal implication
This course listed LAW
Prerequisite basic concept programming
Continuous mathematics background necessary research robotics vision graphic
Possible topic linear algebra conjugate gradient method ordinary partial differential equation vector tensor calculus
Prerequisites X equivalent
Numerical method simulation problem involving solid mechanic fluid dynamic
Focus practical tool needed simulation continuous mathematics involving nonlinear hyperbolic partial differential equation
Possible topic finite element method highly deformable elastic body plasticity fracture level set method Burgers equation compressible incompressible equation smoke water fire coupling
Prerequisite equivalent
This course explore evolving field computational journalism
Students research discus state field project area understanding medium ecosystem stimulating medium creation assessing medium impact
Admission application please email James Hamilton jayth request application
Same Great Ideas Computer Science Covers intellectual tradition computer science emphasizing idea reflect important milestone history discipline
Topics include programming problem solving implementing computation hardware algorithmic efficiency theoretical limit computation cryptography security computer network machine learning philosophy behind artificial intelligence
Readings include classic paper along additional explanatory material
Enrollment limited student Master program Computer Science Education
project course
Focus software development
Corporate partner seed project loosely defined challenge R D lab student innovate build compelling software solution
Student team treated company budget technical advisory board comprised instructional staff corporate liaison
Teams typically travel corporate headquarters collaborating partner meaning team travel internationally
Open loft classroom format found Silicon Valley software company
Exposure current practice software engineering technique stimulating innovation significant development experience creative freedom working group software engineering challenge public presentation technical work creating written description technical work
Prerequisites
Continuation
Focus software development
Corporate partner seed project loosely defined challenge R D lab student innovate build compelling software solution
Student team treated company budget technical advisory board comprised instructional staff corporate liaison
Teams typically travel corporate headquarters collaborating partner meaning team travel internationally
Open loft classroom format found Silicon Valley software company
Exposure current practice software engineering technique stimulating innovation significant development experience creative freedom working group real world software engineering challenge public presentation technical work creating written description technical work
Prerequisites
Covering everything VR fundamental futurecasting launch management course expose best practice guidance VR leader help position build great VR experience
Artificial intelligence AI huge impact many area including medical diagnosis speech recognition robotics web search advertising scheduling
This course focus foundational concept drive application
In short AI mathematics making good decision given incomplete information hence need probability limited computation hence need algorithm
Specific topic include search constraint satisfaction game playing Markov decision process graphical model machine learning logic
Prerequisites CS algorithm probability programming experience
Robotics foundation modeling design planning control
Class cover relevant result geometry kinematics static dynamic motion planning control providing basic methodology tool robotics research application
Concepts model illustrated physical robot platform interactive robot simulation video segment relevant historical research development emerging application area field
Recommended matrix algebra
Same Methods processing human language information underlying computational property natural language
Focus deep learning approach understanding implementing training debugging visualizing extending neural network model variety language understanding task
Exploration natural language task ranging simple word level syntactic processing coreference question answering machine translation
Examination representative paper system completion final project applying complex neural network model NLP problem
Prerequisites calculus linear algebra
Same Introduction spoken language technology emphasis dialogue conversational system
Automatic speech recognition speech synthesis dialogue management application digital assistant search spoken language understanding system
Covers approach based deep learning well traditional method
Prerequisites
Same class focused developing system algorithm robust machine understanding human language
Draws theoretical concept linguistics natural language processing machine learning
Topics include lexical semantics distributed representation meaning relation extraction semantic parsing sentiment analysis dialogue agent special lecture developing project presenting research result making connection industry
Prerequisites one B
Same Networks fundamental tool modeling complex social technological biological system
Coupled emergence online social network data availability biological science course focus analysis massive network provide many computational algorithmic modeling challenge
This course develops computational tool reveal social technological natural world connected study network shed light connection
nTopics include information spread society robustness fragility food web financial market algorithm World Wide Web friend prediction online social network identification functional module biological network disease outbreak detection
laboratory course experience robotic manipulation
Topics include robot kinematics dynamic control compliance collision avoidance interface
Second half class devoted final project using various robotic platform build demonstrate new robot task capability
Previous project include development autonomous robot behavior drawing painting playing air hocket yoyo basketball xylophone
Prerequisites equivalent
For robotics student
Students program mobile robot exhibit increasingly complex behavior simple dead reckoning reactivity motion localization complex task
Topics motor control sensor characteristic sensor fusion model construction robust estimation control regime subsumption potential field probabalistic method including Markov localization particle filter
Student programmed robot contest
Programming Unix machine done team
Prerequisite programming level equivalent
A general game playing system accepts formal description game play without human intervention algorithm designed specific game
introduction system artificial intelligence technique knowledge representation reasoning learning rational behavior
Students create GGP system compete external competition
Prerequisite programming experience
Recommended equivalent
Probabilistic graphical modeling language representing complex domain algorithm reasoning using representation learning representation data
Topics include Bayesian Markov network extension temporal modeling hidden Markov model dynamic Bayesian network exact approximate probabilistic inference algorithm method learning model data
Also included sample application various domain including speech recognition biological modeling discovery medical diagnosis message encoding vision robot motion planning
Prerequisites basic probability theory algorithm design analysis
Topics statistical pattern recognition linear regression method exponential family GLMs support vector machine kernel method selection learning theory VC dimension clustering density estimation EM dimensionality reduction ICA PCA reinforcement learning adaptive control Markov decision process approximate dynamic programming policy search
Prerequisites linear algebra basic probability statistic
Same How formalize mean algorithm learn data
This course focus developing mathematical tool answering question
We present various common learning algorithm prove theoretical guarantee
Topics include classical asymptotics method moment generalization bound via uniform convergence kernel method online learning bandit
Prerequisites A solid background linear algebra probability theory statistic machine learning
Convex optimization helpful required
Same Deep Learning one highly sought skill AI
We help become good Deep Learning
In course learn foundation Deep Learning understand build neural network learn lead successful machine learning project
You learn Convolutional network RNNs LSTM Adam Dropout BatchNorm initialization
You work case study healthcare autonomous driving sign language reading music generation natural language processing
You master theory also see applied industry
You practice idea Python TensorFlow teach
AI transforming multiple industry
After course likely find creative way apply work
This class taught format
You watch video complete programming assignment online quiz home come class advanced discussion work project
This class culminate final project teaching team help
Prerequisites Familiarity programming Python Linear Algebra matrix vector multiplication
may taken concurrently
Formerly An introduction concept application computer vision
Topics include camera projection model image processing method filtering edge detection vision topic segmentation clustering shape reconstruction stereo well vision task object recognition scene recognition face detection human motion categorization
Prerequisites linear algebra basic probability statistic
Computer Vision become ubiquitous society application innsearch image understanding apps mapping medicine drone car
Core many application task image classification localization detection
This course deep dive detail neural network architecture focus learning model task particularly image classification
During course student learn implement train debug neural network gain detailed understanding research computer vision
The final assignment involve training parameter convolutional neural network applying largest image classification dataset ImageNet
We focus teaching set problem image recognition learning algorithm
backpropagation practical engineering trick training network guide student assignment final course project
Much background material course drawn ImageNet Challenge http
Prerequisites Proficiency Python familiarity equivalent equivalent linear algebra
Image sampling quantization color point operation segmentation morphological image processing linear image filtering correlation image transforms eigenimages multiresolution image processing noise reduction restoration feature extraction recognition task image registration
Emphasis general principle image processing
Students learn apply material implementing investigating image processing algorithm Matlab optionally Android mobile device
Term project
Recommended
Same Mathematical computational tool analysis data geometric content image video scan GPS trace well data embedded geometric space
Global local geometry descriptor allowing various kind invariance
The rudiment computational topology persistent homology sampled space
Clustering unsupervised technique
Spectral method geometric data analysis
dimensionality reduction
Alignment matching map computation geometric data set
Function space functional data set joint analysis segmentation labeling
The emergence abstraction concept data
Prerequisites discrete algorithm level linear algebra level
Same To realize dream impact AI requires autonomous system learn make good decision
Reinforcement learning one powerful paradigm relevant enormous range task including robotics game playing consumer modeling healthcare
This class briefly cover background Markov decision process reinforcement learning focusing central problem including scaling large domain exploration challenge
One key tool tackling complex RL domain deep learning class include least one homework deep reinforcement learning
Prerequisites proficiency python equivalent permission instructor linear algebra basic probability
This course designed increase awareness appreciation uncertainty matter particularly aerospace application
Introduces decision making uncertainty computational perspective provides overview necessary tool building autonomous system
Following introduction probabilistic model decision theory course cover computational method solving decision problem stochastic dynamic model uncertainty imperfect state information
Topics include Bayesian network influence diagram dynamic programming reinforcement learning partially observable Markov decision process
Applications cover air traffic control aviation surveillance system autonomous vehicle robotic planetary exploration
Prerequisites basic probability fluency programming language
Same Survey recent research advance intelligent decision making dynamic environment computational perspective
Efficient algorithm single multiagent planning situation model environment may may known
Partially observable Markov decision process approximate dynamic programming reinforcement learning
New approach overcoming challenge generalization experience exploration environment model representation method scale real problem variety domain including aerospace air traffic control robotics
Students expected produce original research paper relevant topic
Prerequisites
Same Recent research
Classic new paper
Topics virtual memory management synchronization communication file system protection security operating system extension technique fault tolerance history experience system programming
Prerequisite equivalent
building hardware software embedded computing system
Students work existing project join one project
Syllabus topic determined need enrolled student project
Examples topic include interrupt concurrent programming deterministic timing synchronization programming model filter frequency response signal low power operation system PCB design security networked communication
Prerequisite equivalent
Same Central concept modern programming language impact software development language design implementation consideration
Functional imperative paradigm
Formal semantic method program analysis
Modern type system higher order function closure exception continuation
Modularity language concurrency
Runtime support language feature interoperability security issue
Prerequisite experience Lisp C language
Program analysis technique used compiler software development tool improve productivity reliability security
The methodology applying mathematical abstraction graph fixpoint computation binary decision diagram writing complex software using compiler example
Topics include data flow analysis instruction scheduling register allocation parallelism data locality interprocedural analysis garbage collection
Prerequisites
Classic paper new idea research paper networking
Architectural principle Internet designed way
Congestion control
Wireless mobility network SDN network virtualization content distribution network packet switching network
Prerequisite equivalent
Distributed operating system application issue emphasizing protocol distributed state sharing key technology
Topics distributed shared memory distributed system design distributed directory service atomic transaction time synchronization consistency file access process scheduling process migration abstraction distribution scale robustness face failure security
Prerequisites
Companion project option
Corequisite
File organization access buffer management performance analysis storage management
Database system architecture query optimization transaction management recovery concurrency control
Reliability protection integrity
Design management issue
Prerequisites
Availability massive datasets revolutionizing science industry
This course discus data mining machine learning algorithm analyzing large amount data
The focus algorithm system mining big data
nTopics include Big data system Hadoop Spark Hive Link Analysis PageRank spam detection Similarity search hashing shingling minhashing random hyperplanes Stream data processing Analysis graph Association rule Dimensionality reduction UV SVD CUR decomposition Algorithms mining clustering search machine learning gradient descent machine classification regression Submodular function optimization Computational advertising
Prerequisites At least one
Supplement providing additional material Hadoop
Students learn implement data mining algorithm using Hadoop implement debug complex MapReduce job Hadoop use tool Hadoop ecosystem data mining machine learning
Topics Hadoop MapReduce HDFS combiners secondary sort distributed cache SQL Hadoop Hive Cloudera Mahout Hadoop streaming implementing Hadoop job debugging Hadoop job Pig Sqoop Oozie HBase Impala
Prerequisite equivalent
focus interaction design process especially design rapid prototyping
Methods used interaction design including need analysis user observation sketching concept generation scenario building evaluation
Prerequisites equivalent background design thinking equivalent background programming
Recommended equivalent background web programming
introduction contemporary HCI technology
Interaction design Adobe Flash mobile development physical computing web application
Corequisite
This second course computer graphic sequence assumes strong familiarity rendering image creation
The course strong focus computational geometry animation simulation
Topics include spline implicit surface geometric modeling collision detection animation curve particle system crowd character animation articulation skinning motion capture editing rigid deformable body fluid simulation
As final project student implement interactive video game utilizing various concept covered class
Games may designed mobile device environment standard personal computer
Prerequisite
Introduction theory error correcting code emphasizing algebraic construction diverse application throughout computer science engineering
Topics include basic bound error correcting code code locality
Applications may include communication storage complexity theory pseudorandomness cryptography streaming algorithm group testing compressed sensing
Prerequisites Linear algebra basic probability level say mathematical maturity student asked write proof
Familiarity finite field helpful required
Same For advanced undergraduate graduate student
The potential application technology enormous
The course cover technical aspect blockchain technology distributed consensus
Students learn system work engineer secure software interacts Bitcoin network crypto currency
Prerequisite
Recommended
An introduction computational complexity theory
Topics include P versus NP problem diagonalization space complexity PSPACE Savitch theorem counting problem circuit complexity pseudorandomness derandomization complexity approximation quantum computing complexity barrier
Prerequisites equivalent mathematical maturity
For advanced undergraduate graduate student
Theory practice cryptographic technique used computer security
Topics encryption symmetric public key digital signature data integrity authentication key management PKI protocol application
Prerequisite basic probability theory
This course intersection philosophical logic artificial intelligence
After reviewing recent work AI leveraged idea logic slow study detail various component intelligence tool designed capture component
Specific area include reasoning belief action causality counterfactuals legal normative reasoning natural language inference logical formalism including probabilistic logic programming lambda calculus
Our main concern understanding logical tool including formal property relate tool probability statistic
At end student expect learned lot logic also sense logic used AI application
Prerequisites A background logic least level expected
In case student willing put extra work catch may possible take course background equivalent
A background AI level would also helpful time expected
unit option PhD student past second year
Course website http
Same Algorithms network optimization flow matching assignment problem
Introduction linear programming
Use LP duality design analysis algorithm
Approximation algorithm problem Steiner Trees Traveling Salesman scheduling problem
Randomized algorithm
Introduction online algorithm
Prerequisite equivalent
We traditionally think algorithm running data available single location typically main memory
In many modern application including web analytics search data mining computational biology finance scientific computing data often large reside single location arriving incrementally time
Paradigms streaming sketching Distributed Hash Tables Bulk Synchronous Processing random walk proved useful application
This course provide introduction design analysis algorithm modern data model
Prerequisite Algorithms level
Same MS E This course motivated problem traditional analysis algorithm fails differentiate meaningfully different solution recommends intuitively wrong solution right one
This course study systematically alternative traditional analysis nevertheless enable rigorous robust guarantee performance algorithm
Topics include instance optimality smoothed analysis parameterized analysis condition number model data pseudorandomness locality diffuse adversary etc
analysis robust distributional analysis resource augmentation planted graph model
Motivating problem drawn online algorithm online learning constraint satisfaction problem graph partitioning scheduling linear programming hashing machine learning auction theory
Prerequisites required
recommended required
Randomness pervades natural process around u formation network genetic recombination quantum physic
Randomness also powerful tool leveraged create algorithm data structure many case efficient simpler deterministic counterpart
This course cover key tool probabilistic analysis application tool understand behavior random process algorithm
Emphasis theoretical foundation though apply theory broadly discussing application machine learning data analysis networking system
Topics include tail bound probabilistic method Markov chain martingale application analyzing random graph metric embeddings random walk host powerful elegant randomized algorithm
Prerequisites STAT equivalent instructor consent
Same An introduction advanced topic graph algorithm
Focusing variety graph problem course explore topic small space graph data structure approximation algorithm dynamic algorithm algorithm special graph class
Topics include approximation algorithm shortest path graph matching distance oracle graph spanner clique graph pattern dynamic algorithm graph coloring algorithm planar graph
Prerequisites equivalent mathematical maturity
Techniques design analysis efficient geometric algorithm object higher dimension
Topics convexity triangulation simplicial complex sweeping partitioning point location
diagram property
Arrangements curve surface
Intersection visibility problem
Geometric searching optimization
Random sampling method
Range searching
Impact numerical issue geometric computation
Example application robotic motion planning visibility preprocessing rendering graphic recognition computer vision
Prerequisite discrete algorithm level
Recommended
Over past decade explosion activity designing new provably efficient fast graph algorithm
Leveraging technique disparate area computer science optimization researcher made great stride improving upon best known running time fundamental optimization problem graph many case breaking barrier efficient algorithm design
In course survey result cover key algorithmic tool leverage achieve breakthrough
Possible topic include limited spectral graph theory sparsification oblivious routing local partitioning Laplacian system solving maximum flow
Prerequisites calculus linear algebra
Same MS E Many computer science application require design software system interact multiple participant
This course provide student vocabulary modeling tool reason design problem
Emphasis understanding basic economic game theoretic concept relevant across many application domain case study demonstrate apply concept design problem
Topics include auction contest design equilibrium analysis cryptocurrencies design network network protocol reputation system social choice social network analysis
Case study include BGP routing Bitcoin eBay reputation system Facebook advertising mechanism Mechanical Turk dynamic pricing
Prerequisites permission instructor
Introduction core algorithmic technique proof strategy underlie best known provable guarantee minimizing high dimensional convex function
Focus broad canonical optimization problem survey result efficiently solving ultimately providing theoretical foundation study optimization
In particular focus method smooth convex function minimization well method structured convex function minimization discussing algorithm gradient descent accelerated gradient descent mirror descent Newton method interior point method
Prerequisite multivariable calculus linear algebra
Same MS E Methods modeling biomedical system building software system
Emphasis intelligent system decision support Semantic Web application
Topics knowledge representation controlled terminology ontology reusable problem solver knowledge acquisition
Students learn current trend development advanced biomedical software system acquire experience several system tool
Prerequisites basic familiarity biology
Same Capstone Biomedical Informatics BMI experience
software building
Student team conceive design specify implement evaluate report software project domain biomedicine
Creating written proposal peer review providing status report preparing final report
Issues related research reproducibility
Guest lecture professional biomedical informatics system builder issue related process project management
Software engineering basic
Because team project start first week class attendance week strongly recommended
Prerequisites
Preference BMI graduate student
Consent instructor required
Same A computational introduction amazing programming language planet genome
Topics include genome sequencing assembling source code code fragment human genome functional landscape variable assignment gene logic gene regulation stack epigenomics human disease personalized genomics hunt bug human code genome editing code injection cure incurable source code behind amazing animal adaptation
Algorithmic approach introduce idea computational genomics machine learning natural language processing
Course includes primer molecular biology text processing language
No prerequisite
Same Recent breakthrough genomic biomedical data transforming biological science big data discipline
In parallel progress deep neural network revolutionizing field image recognition natural language processing broadly AI
This course explores exciting intersection two advance
The course start introduction deep learning overview relevant background genomics biotechnology focusing available data relevance
It cover ongoing development deep learning supervised unsupervised generative model focus application method biomedical data beginning produced dramatic result
In addition predictive modeling course emphasizes visualize extract interpretable biological insight model
Recent paper literature presented discussed
Students introduced work popular deep learning software framework
Students work group final class project using real world datasets
Prerequisites College calculus linear algebra basic probability statistic basic machine learning
No prior knowledge genomics necessary
Same Topics introduction bioinformatics computational biology algorithm alignment biological sequence structure computing string phylogenetic tree construction hidden Markov model basic structural computation protein protein structure prediction protein threading technique homology modeling molecular dynamic energy minimization statistical analysis biological data integration data source knowledge representation controlled terminology molecular biology microarray analysis machine learning clustering classification natural language text processing
Prerequisite recommended consent instructor unit
Same Computational method translation biomedical data diagnostic prognostic therapeutic application medicine
Topics omics data generation analysis utility limitation public biomedical resource machine learning data mining issue opportunity drug discovery health solution
Case study course project
Prerequisites programming ability level familiarity biology statistic
Same Focus symbolic data music application including advanced notation system optical music recognition musical data conversion internal structure MIDI file
Same Leveraging three synchronized set symbolic data resource notation analysis lab portion introduces student Humdrum Toolkit music representation analysis
Issues data content quality well method information retrieval visualization summarization considered class
Grading based primarily student project
Prerequisite consent instructor
Same Text information retrieval system efficient text indexing Boolean vector space probabilistic retrieval model ranking rank aggregation evaluating IR system text clustering classification Web search engine including crawling indexing algorithm web metadata question answering distributed word representation
Prerequisites
Same Computational technique investigating designing structure dynamic biomolecules cell
These computational method play increasingly important role drug discovery medicine bioengineering molecular biology
Course topic include protein structure prediction protein design drug screening molecular simulation simulation image analysis microscopy method solving structure crystallography electron microscopy data
Prerequisites elementary programming background equivalent introductory course biology biochemistry
Same Student team faculty supervision work research implementation large project AI
method related problem domain
Prerequisites AI course series consent instructor
Student team faculty supervision work research implementationnof large project HCI
method related problemndomain
Prerequisites permission instructor
Topics vary
Focus emerging research theme programmable open mobile Internet span multiple system topic interaction programming system operating system networking security
May repeated credit
Prerequisites
Restricted Computer Science Computer Systems Engineering undergraduate
Students enroll section attached CS project chosen
Software specification testing verification
The emphasis automated tool developing reliable software
The course cover material primarily recent research paper technologynunderlying tool
Assignments supplement lecture experience using tool customizing solving new problem
The course appropriate student intending pursue research program analysis verification well wish add use advanced software tool skill set
Prerequisites
Recommended project course
Faculty undergraduate graduate student interested teaching discus topic raised teaching computer science introductory level
Prerequisite consent instructor
Same Priority given Computer Science student
CS Masters student admitted space available
Presentations member department faculty describing informally current research interest view computer science whole
Guest computer scientist
By arrangement
May repeated credit
For science engineering computer science business education medicine law student
Cloud computing bringing information system back office making core entire economy
Furthermore advent smarter machine cloud computing integral building precision planet
This class intended student want begin understand implication technology
Guest industry expert public company CEOs either delivering cloud service using cloud service transform business
The principle tradeoff design parallel architecture
Emphasis naming latency bandwidth synchronization parallel machine
Case study shared memory message passing data flow data parallel machine illustrate technique
Architectural study lecture technique programming parallel computer
Programming assignment one commercial multiprocessor
Prerequisites reasonable programming experience
Advanced topic new paradigm parallel computing including parallel algorithm programming language runtime environment library tool scalable architecture
Research project
Prerequisite consent instructor
coverage architectural technique used modern chip mobile server system
Advanced processor design technique superscalar core VLIW core core core cache coherence memory consistency vector processor graphic processor heterogeneous processor hardware support security parallel programming
Students become familiar complex interaction
A central part project open research question technology
Prerequisites formerly
Recommended
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
Intelligent computer agent must reason complex uncertain dynamic environment
This course graduate level introduction automated reasoning technique application covering logical probabilistic approach
Topics include logical probabilistic foundation backtracking strategy algorithm behind modern SAT solver stochastic local search Markov Chain Monte Carlo algorithm variational technique class reasoning task reduction application
The sustainable development goal SDGs encompass many important aspect human ecosystem traditionally difficult measure
This course focus way use inexpensive unconventional data stream measure outcome relevant SDGs including poverty hunger health governance economic activity
Students apply machine learning technique various project outlined beginning quarter
The main learning goal gain experience conducting communicating original research
Prior knowledge machine learning technique required
Open undergraduate graduate student
Enrollment limited
Students must apply class filling form http
A permission code given admitted student register class
Same This course provides survey important influential concept autonomous robotic manipulation
It includes classical concept still widely used recent approach changed way look autonomous manipulation
We cover approach towards motion planning control using visual tactile perception well machine learning
This course especially concerned new approach overcoming challenge generalization experience exploration environment learning representation method scale real problem
Students expected present one paper tutorial debate paper Pro Con side
They also expected propose original research project work towards research paper
Recommended equivalent
Computing object motion computer graphic geometrical computing robotics artificial intelligence application design manufacturing robotics animated graphic surgical planning drug design assembly planning graphic animation human figure humanoid robot inspection surveillance simulation crowd biology
Path planning method generate path among static obstacle
Extensions include uncertainty mobile obstacle manipulating moveable object maneuvering kinematic constraint making breaking contact
Configuration space geometric arrangement random sampling
Theoretical method
Advanced control methodology novel design technique complex robotic bio mechanical system
Class cover fundamental operational space dynamic control elastic planning human motion synthesis
Topics include redundancy inertial property haptics simulation robot cooperation mobile manipulation robot design humanoid control
Additional topcs emerging area presented group student
Prerequisites equivalent
Fundamental issue mathematical model computer vision
Sample topic camera calibration texture stereo motion shape representation image retrieval experimental technique
May repeated credit
Prerequisites equivalent
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
This advanced graduate course explores depth several important class algorithm modern machine learning
We focus understanding mathematical property algorithm order gain deeper insight perform well
We also study application algorithm interesting setting
Topics include spectral clustering tensor decomposition Hamiltonian Monte Carlo adversarial training variational approximation
Students learn mathematical technique analyzing algorithm experience using
We supplement lecture latest paper significant research project component class
Prerequisites Probability linear algebra machine learning coding experience
A representation performs task converting observation real world
image recorded speech signal word sentence mathematical form
vector
This mathematical form used subsequent step
classifier produce outcome classifying image recognizing spoken word
Forming proper representation task essential problem modern AI
In course focus establishing representation matter classical modern method forming representation Computer Vision method analyzing probing representation portraying future landscape representation generic comprehensive system horizon finally going beyond computer vision talking representation one used NLP neuroscience
The course heavily feature system based deep learning convolutional neural network
We several teaching lecture number prominent external guest speaker well presentation student recent paper project
nnRequired Prerequisites
If required prerequisite please contact member course staff enrolling course
This class provide core overview essential topic newnresearch frontier reinforcement learning
Planned topic include nmodel free model based reinforcement learning policy search MontenCarlo Tree Search planning method policy evaluation exploration nimitation learning temporal approach safetynand risk sensitivity RL inverse reinforcementnlearning learning communicate insight human expected create original research paper relatedntopic
Prerequisites similarnexperience
Once confined manufacturing floor robot quickly entering public space multiple level drone surgical robot service robot car becoming tangible technology impacting human experience
Our goal class learn design algorithm enable robot reason action interact one another human environment live well plan safe strategy human trust rely graduate course study algorithm formal method control theory robotics improve system
We focus designing new algorithm enhancing safe interactive autonomy
nnRecommended Introductory course AI robotics
Convex set function optimization problem
The basic convex analysis theory convex programming optimality condition duality theory theorem alternative application
linear quadratic program semidefinite programming geometric programming
Numerical algorithm smooth equality constrained problem method inequality constrained problem
Applications signal processing communication control analog digital circuit design computational geometry statistic machine learning mechanical engineering
Prerequisite linear algebra basic probability
Same Topics vary every quarter may include advanced material taught first time
May repeated credit
Team project data mining machine learning data including problem statement implementation evaluation solution
Students work real problem data
The course provides access large data access big data cloud computing infrastructure Amazon Google Cloud Platform
Some lecture relevant material given Hadoop Spark Hive Amazon well topic relevance project
network system design
Students work team two build fully functioning Internet router
Students design control plane C linux host design data plane new language NetFPGA x switch
For midterm milestone team must demonstrate router interoperate team building small scale datacenter topology
In final week class team participate design challenge
Prerequisites At least one student team must taken Stanford completed Lab static router Verilog experience one member team helpful required
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
The last decade saw enormous shift design system due rise Internet service cloud computing Big Data processing
Where see next increase scale data volume system accordingly evolve
This course critically examine range trend including Internet Things drone smart city emerging hardware capability lens software system research design
Students perform comparative analysis reading discussing research performing original research
Prerequisites Strong background software system especially database distributed system machine learning
Undergraduates completed strongly encouraged attend
The mathematical tool needed geometrical aspect computer graphic especially modeling smooth shape
Fundamentals homogeneous coordinate transformation perspective
Theory parametric implicit curve surface model polar form Bézier arc de Casteljau subdivision continuity constraint tensor product triangular patch surface
Subdivision surface representation geometry
Representations solid conversion among
Surface reconstruction scattered data point
Geometry processing mesh including simplification parameterization
Prerequisite linear algebra level
Recommended
Intermediate level emphasizing image synthesis algorithm system issue rendering
Topics include Reyes advanced rasterization including motion blur depth field ray tracing physically based rendering Monte Carlo algorithm rendering including direct illumination global illumination path tracing photon mapping surface reflection light source model volume rendering subsurface scattering SIMD parallelism rendering
Written assignment programming project
Prerequisite equivalent
Recommended Fourier analysis digital signal processing
Core mathematics method computer animation motion simulation
Traditional animation technique
simulation method modeling shape motion particle system constraint rigid body deformable model collision contact fluid fracture
Animating natural phenomenon
Methods animating virtual character crowd
Additional topic selected animation method realism perception animation system motion control interactive method feedback
Recommended
Prerequisite linear algebra
Visual computing task computational photography analysis reconstruction graphic key responsibility modern computer system ranging smart phone autonomous robot large data center
These workload demand exceptional system efficiency course examines key idea technique challenge associated design parallel heterogeneous system execute accelerate visual computing application
This course intended graduate advanced system student interested architecting efficient graphic image processing computer vision platform new hardware architecture programming framework student graphic vision ML seek understand throughput computing principle develop scalablenalgorithms map efficiently future platform
Students perform daily research paper reading complete simple programming assignment compete term project
Prerequisites equivalent
Recommended Parallel computing computer architecture background technique either deep learning computer vision digital image processing
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
The largest change computer industry past five year arguably emergence cloud computing organization increasingly moving workload managed public cloud using new service simply possible private datacenters
However building using cloud system remains black art many difficult research challenge
This research seminar cover industry academic work cloud computing survey challenge including programming interface cloud native application resource management pricing availability reliability privacy security
Students also propose develop original research nPrerequisites For graduate student background computer system strongly recommended
Undergrads need instructor approval
Pseudorandomness widely applicable theory efficiently generating object look random despite constructed using little randomness
Since psudorandom object replace uniformly distributed one sense one may view pseudorandomness extension understanding randomness computational lens
We study basic tool pseudorandomness limited independence randomness extractor expander graph pseudorandom generator
We also discus application pseudrandomness derandomization cryptography
We cover classic result well technique
Prerequisites equivalent
Topics Pseudo randomness multiparty computation cryptography zero knowledge protocol new encryption integrity paradigm
May repeated credit
Prerequisite
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
This course review greatest discovery modern cryptography proof factoring algorithm cryptography cryptography
Some topic cover immediate practical application
Other topic study potential future application
And yet others study theoretical insight provide
The course reading combination original classic paper modern treatment topic
Prerequisite equivalent course permission instructor
Design engineering system within formal optimization framework
This course cover mathematical algorithmic fundamental optimization including derivative approach linear problem emphasis multidisciplinary design optimization
Topics also include quantitative methodology addressing various challenge accommodating multiple objective automating differentiation handling uncertainty evaluation selecting design point experimentation principled method optimization evaluation expensive
Applications range design aircraft automated vehicle
Prerequisites familiarity probability programming multivariable calculus
Same Designing algorithm efficient processing large data set pose unique challenge
This course discus algorithmic paradigm developed efficiently process data set much larger available memory
We cover streaming algorithm sketching method produce compact datanstructures dimension reduction method preserve geometric structure efficient algorithm numerical linear algebra graph sparsification method well impossibility result technique
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
Mathematical programming relaxation integer programming formulation popular way apply convex optimization technique hard combinatorial optimization problem
Such relaxation made closer integer programming counterpart adding constraint systematic way achieve via hierarchy relaxation
Several hierarchy literature SoS hierarchy
Recently hierarchy received lot attention due potential make progress long standing algorithmic question connection various area computational complexity combinatorial polynomial optimization quantum computing proof complexity
In course cover recent research result area problem arising optimization machine learning computational complexity discussing lower upper bound
Prerequisites Mathematical maturity required exposure algorithm strongly recommended optimization recommended
research computational technique investigating designing structure dynamic biomolecules cell everything
These technique draw approach ranging simulation machine learning play increasingly important role drug discovery medicine bioengineering molecular biology
Course devoted primarily reading presentation discussion critique paper describing important recent research development
Prerequisite equivalent introductory course biology biochemistry
Recommended experience mathematical modeling need formal course
Same Introduction statistical computational method genomics
Sample topic include expectation maximization hidden Markov model Markov chain Monte Carlo ensemble learning probabilistic graphical model kernel method modern machine learning paradigm
Rationales technique illustrated existing implementation used population genetics disease association functional regulatory genomics study
Instruction includes lecture discussion reading primary literature
Homework project require implementing algorithm using existing toolkits analysis genomic datasets
Same Introduction designing building training neural network modeling brain behavioral data including deep convolutional neural network model sensory system vision audition somatosensation recurrent neural network dynamic memory attention integration variational generative method cognitive modeling method metric comparing model neural data
Attention given established method well technique
Students learn conceptual base deep neural network model also implement learn implement train model Tensorflow using GPUs
Requirements Fluency Unix shell Python programming familiarity differential equation linear algebra probability theory one course cognitive system neuroscience
Same Prepares student conduct original HCI research reading discussing seminal research paper
Main topic ubiquitous computing social computing design creation breadth topic include HCI method programming visualization user modeling
Student pair perform research project
Prerequisites For CS Symbolic Systems student better
No prerequisite PhD student student outside CS Symbolic Systems
Contents change quarter
May repeated credit
See http offering
This class focus design social computing crowdsourcing system
Students learn engage large group people online microtask crowdsourcing design online community
The course cover best practice system design motivating participation ethical guideline agreement measure gold standard
Advanced topic expert crowdsourcing incentive design complex crowd workflow also discussed
Students learn application crowdsourcing area computer science field relates social psychology organizational behavior
Prerequisite
Contents course change year
The course repeated
Stress silently steadily damage physical emotional relationship productivity ability learn remember
This highly experiential class focus designing interactive technology enable calm state cognition emotion physiology better human health learning creativity productivity
Same In course creatively apply information technology collectively attack Global Grand Challenges global warming rising healthcare cost declining access ensuring quality education
Interdisciplinary student team carry within target domain followed brainstorming propose quarter long project
Teams spend rest quarter applying design method rapidly iterate design prototyping testing solution
This course interweave weekly lecture weekly studio session student apply technique supportive environment
This class focus design system support large group collaborate cooperate act together
A large body research Interaction Computer Supported Cooperative Work devoted design system assist large group come together aggregate effort whether form information code people power
Examples sociotechnical system include Wikipedia Facebook group
Students read paper HCI literature participate discussion analyze design system various stakeholder system play real world
Prerequisites recommended required
This class focus understanding use technology world
Students learn generative evaluative research method explore system appropriated everyday life project design implement evaluate novel mobile application
Quantitative
testing instrumentation analytics survey qualitative
diary study contextual inquiry ethnography method combination covered along practical experience applying method project
Prerequisites equivalent mobile programming experience
Advanced material often taught first time topic course perhaps faculty member visiting another institution
May repeated credit
This course emphasizes approach scaling technology computer science system neuroscience take advantage exponential trend computational power known Moore Law
Modern method signal processing machine learning combined technology managing large datasets common industry
Classes feature scientist presenting novel approach analyzing structure function complex neural circuit
Grading based class participation project proposal due midterm final project demonstration report due end final
Team project encouraged especially collaboration
Prerequisites basic biology good math skill familiarity machine learning
Some background computer vision signal processing important project structural analysis
Familiarity modern artificial neural network technology plus project functional analysis
For detail see http special attention CALENDAR DISCUSSION tab past class available following ARCHIVES link
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage internship work integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
A B C may taken
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage internship work integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
B C may taken
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage internship work integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
B C may taken
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educationalnopportunities high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research reportnoutlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make themnineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For qualified computer science PhD student
Permission number required enrollment see CS PhD program administrator Gates room
May taken repeatable
Educational opportunity high technology research development lab computing industry
Qualified computer science student engage research integrate work academic program
Students register quarter employed complete research report outlining work activity problem investigated result project expect perform
Students visa aware completing month CPT make ineligible Optional Practical Training OPT
For CS graduate student
A substantial computer program designed implemented written report required
Recommended preparation dissertation research
Register using section number associated instructor
Prerequisite consent instructor
For graduate student Computer Science
Use database management file system substantial application implementation component database management system
Written analysis evaluation required
Register using section number associated instructor
Prerequisite consent instructor
Letter grade
Graded credit
Practicum designing building curriculum learning environment
Students use software toolkits fabrication machine design educational software educational toolkits tangible user interface
The course focus designing technology particularly urban school US abroad
We explore theoretical design framework constructionist learning perspective critical pedagogy interaction design child
Same This course lab prototyping fabrication tangible technology special focus learning education
We learn use fabrication machine printer scanner laser cutter router design educational toolkits educational toy science kit tangible user interface
A special focus course design technology particularly urban school US abroad
Same Computational modeling dramatically changing physical science recently also social behavioral science
Traditional analysis technique insufficient investigate complex dynamic social phenomenon social network online gaming diffusion innovation opinion dynamic classroom behavior complex adaptive system
In course learn modeling network theory basic support research cognitive social science particular around issue learning cognitive development educational policy
Same This course introduce probabilistic approach cognitive science learning reasoning understood inference complex probabilistic model
Examples drawn area including concept learning causal reasoning social cognition language understanding
Formal modeling idea technique discussed concert relevant empirical phenomenon
Same Interdisciplinary seminar focusing understanding computation brain enable rapid efficient object perception
Covers topic multiple perspective drawing recent research Psychology Neuroscience Computer Science Applied Statistics
Emphasis discussing recent empirical finding method theoretical debate field
Topics include theory object perception neural computation underlying invariant object perception visual exemplar category represented brain information present distributed activation across neural population relates object perception modern statistical analytical tool analysis brain activation
Same Topic change quarter
Recent topic computational photography datannvisualization character animation virtual world graphic architecture advanced rendering
See http offererings prerequisite
May repeated credit
Techniques algorithm creating effective visualization based principle graphic design visual art perceptual psychology cognitive science
Topics graphical perception data image model visual encoding graph tree layout color animation interaction technique automated design
Lectures reading project
Prerequisite one equivalent
Topic change quarter
Recent topic computational photography data visualization character animation virtual world graphic architecture advanced rendering
See http offering prerequisite
May repeated credit
Spawned rapid advance optical fabrication digital processing power new generation imaging technology emerging computational camera convergence applied mathematics optic computing
Similar trend observed modern display pushing boundary resolution contrast capability immersive experience optic electronics computation
This course serf introduction emerging field computational imaging display
Students learn master bit photon
Same Contents course change offering
Past offering included geometric matching surface reconstruction collision detection computational topology
May repeated credit
Winter iteration cover Computational Symmetry Regularity spring quarter cover shape analysis
Prerequisites equivalent basic coding
Creative design computer music software
Programming audiovisual design well software design musical tool instrument toy game
Provides paradigm strategy designing building music software emphasis interactive system aesthetic artful product design
Course work includes several programming assignment final project
Prerequisite experience http
Same Aesthetics design exploration creative musical application virtual reality VR augmented reality AR centered around VR mobile technology
Comparison AR VR traditional software design paradigm music
Topics include embodiment interaction design novel instrument social experience software design prototyping
Prerequisite
Same Letter grade
Advanced reading research CS graduate student
Register using section number associated instructor
Prerequisite consent instructor
Graded credit
Advanced reading research CS graduate student
Register using section number associated instructor
Prerequisite consent instructor
Artificial intelligence poised make radical change healthcare transforming area diagnosis genomics surgical robotics drug discovery
In coming year artificial intelligence potential lower healthcare cost identify effective treatment facilitate prevention early detection disease
This class seminar series featuring prominent researcher physician entrepreneur venture capitalist sharing thought future healthcare
We highly encourage student background enroll background necessary
Speakers
Weekly speaker interaction topic
May repeated credit
Surgical robot developed implemented clinically varying scale
Seminar goal expose student engineering medicine business guest lecturer academia industry
Engineering clinical aspect connected design use surgical robot varying degree complexity procedural role
May repeated credit
Same This course introduce student interested computer science engineering medium possible probable come medium innovation
nnSpeakers multiple discipline industry discus range topic context evolving medium focus technical trend opportunity challenge surfacing unfolding medium ecosystem
Speakers underscore need innovate survive medium information industry
Open undergraduate graduate student




