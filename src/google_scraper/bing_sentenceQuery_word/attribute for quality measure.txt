Parker Paradigms Penn Plaza Floor New York NY Email help View Our View Our answer common question
Your email address This preview solution
Please use purchase button see entire solution Parker Paradigms Penn Plaza Floor New York NY

Chen Gao Karen Panetta Color image quality measure used many computer vision task
In practical application NR measure desirable reference image always accessible
However limited success achieved
Most existing NR quality assessment require type image distortion known
In paper three NR color image attribute colorfulness sharpness contrast quantified new metric
Using metric new Color Quality Measure CQM based linear combination three color image attribute presented
We evaluated performance several measure comparison purpose
Experimental result demonstrate CQM correlate well evaluation obtained human observer operates real time
The result also show presented CQM outperforms previous work respect ranking image quality among image containing different content
Finally performance CQM independent distortion type demonstrated experimental result
Gao Chen Panetta Karen
TY CHAP Color image attribute quality measurement AU Gao Chen AU Panetta Karen AU Agaian Sos PY Color image quality measure used many computer vision task
In practical application NR measure desirable reference image always accessible
However limited success achieved
Most existing NR quality assessment require type image distortion known
In paper three NR color image attribute colorfulness sharpness contrast quantified new metric
Using metric new Color Quality Measure CQM based linear combination three color image attribute presented
We evaluated performance several measure comparison purpose
Experimental result demonstrate CQM correlate well evaluation obtained human observer operates real time
The result also show presented CQM outperforms previous work respect ranking image quality among image containing different content
Finally performance CQM independent distortion type demonstrated experimental result
AB Color image quality measure used many computer vision task
In practical application NR measure desirable reference image always accessible
However limited success achieved
Most existing NR quality assessment require type image distortion known
In paper three NR color image attribute colorfulness sharpness contrast quantified new metric
Using metric new Color Quality Measure CQM based linear combination three color image attribute presented
We evaluated performance several measure comparison purpose
Experimental result demonstrate CQM correlate well evaluation obtained human observer operates real time
The result also show presented CQM outperforms previous work respect ranking image quality among image containing different content
Finally performance CQM independent distortion type demonstrated experimental result
KW Colorfulness KW Contrast KW Image quality KW measure KW Sharpness UR http UR http DO Conference contribution SN VL BT Mobile Processing Security Applications PB SPIE ER Powered
Cookies used site
To decline learn visit

Modelling target attribute attribute data perhaps traditional data mining task
When many attribute data one need know attribute relevant modelling target either group one feature appropriate select within model construction process progress
There many approach selecting attribute machine learning
We examine various important concept approach used purpose contrast strength
Discretization numeric attribute also discussed use prevalent many modelling technique
Check access login credential institution

This service advanced JavaScript available learn It widely accepted software measure provide appropriate mechanism understanding monitoring controlling predicting quality software development project
In software product line SPL quality even important single software product since owing systematic reuse fault inadequate design decision could propagated several product family
Over last year great number quality attribute measure assessing quality SPL reported literature
However study summarizing current knowledge exist
This paper present systematic literature review objective identifying interpreting available study present quality attribute measure SPL
These attribute measure classified using set criterion includes life cycle phase measure applied corresponding quality characteristic support specific SPL characteristic variability compositionality procedure used validate measure etc
We found measure related different quality attribute
The result review indicated measure evaluate attribute related maintainability
In addition measure used design phase Domain Engineering applied evaluate product line architecture
However empirically validated
In conclusion result provide global vision state research within area order help researcher detecting weakness directing research effort identifying new research line
In particular need new measure evaluate quality artifact produced entire SPL life cycle quality characteristic
There also need validation theoretical empirical existing measure
In addition result may useful reference guide practitioner assist selection adaptation existing measure evaluating software product line
This research funded Spanish Ministry Science Innovation MULTIPLE Multimodeling Approach For Software Product Lines project ref

Abdelmoez Nassar Shereschevsky Gradetsky Gunnalan Ammar Yu Mili Error Propagation In Software Architectures
In International Symposium Software Metrics METRICS Chicago Illinois USA Ajila Dumitrescu Experimental use code delta code churn rate change understand software product line evolution
Journal Systems Software pp
Aldekoa Trujillo Sagardui Díaz Quantifying Maintainability Feature Oriented Product Lines
In European Conference Software Maintenance Reengineering Athens Greece pp
Alves de Oliveira Junior Gimenes Maldonado A Metric Suite Support Software Product Line Architecture Evaluation
In XXXIV Conferencia Latinamericana de Informática CLEI Santa Fé Argentina pp
Axelsson J
Evolutionary Architecting Embedded Automotive Product Lines An Industrial Case Study
In Joint Working Conference Software Architecture European Conference Software Architecture Cambridge UK September Dincel Medvidovic Van der Hoek Measuring Product Line Architectures
In International Workshop Product Family Engineering PFE Bilbao Spain Etxeberria Sagardui Architecture New Issues Evaluation
Software Product Lines Conference Gallina Guelfi A Product Line Perspective Quality Reuse Development Framework Distributed Transactional Applications
In International Computer Software Applications Conference Gallina Guelfi A Template Requirement Elicitation Dependable Product Lines
In International Workshop Requirements Engineering Foundation Software Quality RefSQ Ganesan Knodel Kolb Haury Meier Comparing Costs Benefits Different Test Strategies Software Product Line A Study Testo AG
In International Software Product Line Conference Kyoto Japan pp
September Gannod Lutz
An Approach Architectural Analysis Product Lines
In International Conference Software Engineering pp
Geppert Weiss
Assessment Domains
International Software Metrics Symposium METRICS Hwan Kim Kim J
An Elicitation Approach Measurement Indicator Based Product Line Context
Proceedings Fourth International Conference Software Engineering Research Inoki Fukazawa Software Product Line Evolution Method Based Kaizen Approach
In Annual ACM Symposium Applied Computing Korea Johansson Höst Tracking Degradation Software Product Lines Measurement Design Rule Violations
In International Conference Software Engineering Knowledge Engineering Ischia Italy pp
Kim Ko Kang Lee Extending ATAM ass product line architecture
In IEEE International Conference Computer Information Technology pp
Land Alvaro Crnkovic I
Towards Efficient Software Component Evaluation An Examination Component Selection Certification
Euromicro Conference Software Engineering Advanced Applications Lin Ye Tang J
Measurement Complexity Variation Points Software Product Lines
World Congress Software Engineering Lutz Gannod
Analysis software product line architecture experience report
Journal Systems Software Mellado Rodríguez Piattini Automated Support Security Requirements Engineering Software Product Line Domain Engineering
International Conference Availability Reliability Security Meyer Dalal Managing platform architecture manufacturing process non assembled product
Journal Product Innovation Management
Volume Issue page July Misic B
Measuring Coherence SoftwareProduct Line Architectures
technical report TR Department Computer Science University Manitoba June Mustapic Andersson Norström Wall A
A Dependable Open Platform Industrial Robotics A Case Study
In Architecting Dependable Systems II
Lecture Notes Computer Science Volume Needham Jones A Software Fault Tree Metric
In International Conference Software Maintenance ICSM Philadelphia Pennsylvania USA Rahman Metrics Structural Assessment Product Line Architecture
Master Tesis Software Engineering Thesis

School Engineering Blekinge Institute Technology Sweden Sethi Cai Wong Garcia Sant Anna From Retrospect Prospect Assessing Modularity Stability Software Architecture
Joint Working Conference Software Architecture European Conference Software Architecture
Shaik Abdelmoez W
Gunnalan Shereshevsky Zeid Ammar Mili Fuhrman Change Propagation Assessing Design Quality Software Architectures
Working Conference Software Architecture WICSA Siegmund Rosenmüller Kuhlemann Kästner Saake Measuring Properties Software Product Lines Product Derivation
In Software Engineering Conference Beijing China Stoll Bass Golden John
Supporting Usability Product Line Architectures
In Software Product Lines Conference Stuikys Damasevicius Measuring Complexity Domain Models represented Feature Diagrams
Information Technology Control Sun Her Hyeok Kim Hun Oh Yul Rhew Dong Kim A framework evaluating reusability core asset product line engineering
Information Software Technology pp
Van der Hoek Dincel Medidović Using Services Utilization Metrics Assess Structure Product Line Architectures
In International Software Metrics Symposium METRICS Sydney Australia Wnuk Regnell Karlsson What Happened Our Features
Visualization Understanding Scope Change Dynamics Industrial Setting
In IEEE International Requirements Engineering Conference Yoshimura Ganesan Muthig Assessing Merge Potential Existing Engine Control Systems Product Line
In International Workshop Software Engineering Automative Systems Shangai China pp
Zhang Deng Wu Zhou Ma Some Metrics Accessing Quality Product Line Architecture
In International Conference Computer Science Software Engineering CSSE Wuhan China pp
Classification software measure found systematic review Legend Data extraction criterion Answer data extraction criterion Characteristic F Functional Suitability R Reliability Pe Performance efficiency O Operability S Security C Compatibility M Maintainability T Transferability Quality attribute Name name quality attribute Tp Type attribute I Internal E External Type measure QN Quantitative QL Qualitative E Exact P Probabilistic phase DE Domain Engineering DA Domain Application Req
Requirements Des
Design Real
Realization Test Test Evol
Evolution Artifact evaluated PLA Product Line Architecture Ass Asset Pro Arc Product Architecture Fin Pro Final Product Other characteristic C Compositionality V Variability Validation T Theoretical validation Met Method PB approach MT Measurement theory approach E Empirical validation Met
Method CS Case Studies S Surveys CE Controlled Experiments Tool x Some tool exists Actual usage A Academic I Industrial Reference Paper reference Measure Characteristic Quality attribute Type meas
Result measure Phase Artifact evaluated Name Tp PLA Ass ProArc Fin Pro Binary size M Binary size I D QN E DA Test x x Cyclomatic complexity M Complexity source code E D QN E DA Test x x Performance P Performance E D QN E DA Test x Class AlternativeOR M Complexity class I B QN E DE Des
x Class AlternativeXOR M Complexity class I B QN E DE Des
x Class Mandatory M Complexity class I B QN E DE Des
x ClassNumVariantsAltOR M Complexity class I B QN E DE Des
x ClassNumVariantsAltXOR M Complexity class I B QN E DE Des
x ClassNumVariantsMandatory M Complexity class I B QN E DE Des
x ClassNumVariantsOptional M Complexity class I B QN E DE Des
x ClassOptional M Complexity class I B QN E DE Des
x ClassTotal PLVariabilities M Complexity architecture PLA I D QN E DE Des
x ClassTotal AlternativeOR M Complexity class diagram I D QN E DE Des
x ClassTotal AlternativeXOR M Complexity class diagram I D QN E DE Des
x ClassTotal Mandatory M Complexity class diagram I D QN E DE Des
x ClassTotalOptional M Complexity class diagram I D QN E DE Des
x ClassTotal Variabilities M Complexity class diagram I D QN E DE Des
x ClassTotalVP M Complexity class diagram I D QN E DE Des
x ClassVP M Complexity class I B QN E DE Des
x Component TotalVariabilities M Complexity component diagram I D QN E DE Des
x Component Variable M Complexity component I B QN E DE Des
x CompPL M Complexity architecture PLA I D QN E DE Des
x CompVariability M Complexity class diagram I D QN E DE Des
x CompVariant M Complexity class I D QN E DE Des
x CompVariantVP M Complexity class I D QN E DE Des
x CompVP M Complexity class I D QN E DE Des
x nVariants M Complexity class diagram I D QN E DE Des
x nVP M Complexity class diagram I B QN E DE Des
x PLTotalVariability M Complexity architecture PLA I D QN E DE Des
x UseCase AlternativeOR M Complexity use case I B QN E DE Req
x UseCase AlternativeXOR M Complexity use case I B QN E DE Req
x UseCaseMandatory M Complexity use case I B QN E DE Req
x UseCaseNum VariantsAltOR M Complexity use case I B QN E DE Req
x UseCase NumVariants AltXOR M Complexity use case I B QN E DE Req
x UseCaseNum VariantsMandatory M Complexity use case I B QN E DE Req
x UseCaseNum VariantsOptional M Complexity use case I B QN E DE Req
x UseCaseOptional M Complexity use case I B QN E DE Req
x UseCaseTotal AlternativeOR M Complexity use case diagram I D QN E DE Req
x UseCaseTotal AlternativeXOR M Complexity use case diagram I D QN E DE Req
x UseCaseTotal Mandatory M Complexity use case diagram I D QN E DE Req
x UseCaseTotal Optional M Complexity use case diagram I D QN E DE Req
x UseCaseTotalPL Variabilities M Complexity architecture PLA I D QN E DE Req
x UseCaseTotal Variabilities M Complexity use case diagram I D QN E DE Req
x UseCaseTotalVP M Complexity use case diagram I D QN E DE Req
x UseCaseVP M Complexity use case I B QN E DE Req
x Maintainability Index MI product M Maintainability Index MI product I D QN E DA Real
x Maintainability Index MI feature M Maintainability Index MI feature I D QN E DA Real
x x Maintainability Index MI architecture M Maintainability Index MI architecture I D QN E DA Real
x x Architecture Variability AV M Variability PLA I D QN E DE Des
x Component Reuse Rate CRR M Component reuse I D QN E DA Des
x Exterior information flow complexity EIFC M Complexity interaction port component role connector I D QN E DE Des
x Interior information flow complexity IIFC M Complexity interior information flow arc component connector I D QN E DE Des
x Cyclomatic Complexity PCC M Flow structure attribute PLA I D QN E DE Des
x information flow complexity M Total complexity PLA partially different point view I D QN E DE Des
x total complexity PTC M Total complexity PLA I D QN E DE Des
x vertex complexity PVC M Total complexity PLA partially point view I D QN E DE Des
x Reuse Benefit Rate RBR M Reuse Benefit I D QN E DE Real
x Strong Coupling Coefficient SCC M Strong Coupling PLA I D QN E DE Des
x Structure Similarity Coefficient SSC M Similarity PLA I D QN E DE Des
x Structure Variability Coefficient SVC M Structure Variability Coefficient SVC I D QN E DE Des
x Variability Points Number VP M Variability PLA I B QN E DE Des
x Weak Coupling Coefficient WCC M Weak Coupling PLA I D QN E DE Des
x Architectural Commonality AC M Architectural commonality I D QN E DE Des
x Component Compliance CC M Component replaceability I D QN E DE Des
x Coverage Variability CV M Variability richness I D QN E DE Des
x x Cumulative Applicability CA M Applicability I D QN E DE Des
x x Effectiveness Tailoring ET M Effectiveness Tailoring I D QN E DE Des
x Functional Coverage FC M Functional commonality I D QN E DE Des
x Commonality NFC M commonality I D QN E DE Des
x Coverage NC M feature commonality covered I D QN E DE Des
x Overall Understandability OU O Understandability I D QN E DE Des
x Reusability RE M Reusability core asset I D QN E DE Des
x x Tailorability TL M Tailorability I D QN E DE Des
x Tailorability Closed variability TC M Tailorability Closed variability I D QN E DE Des
x Tailorability Open variability TO M Tailorability Open variability I D QN E DE Des
x Cognitive Complexity Feature Model I M Cognitive Complexity Feature Model I B QN E DE Des
x Cognitive Complexity Feature Model II M Cognitive Complexity Feature Model I B QN E DE Des
x Compound Complexity Feature Diagram M Compound Complexity Feature Diagram I D QN E DE Des
x Structural Complexity Feature Model M Structural Complexity Feature Model I D QN E DE Des
x Efficiency single derivate product P Final product efficiency I D QN E Evol
x Efficiency entire stream derivative product based common PLA P PLA efficiency I D QN E Evol
x x Reuse single product M Final product reusability I D QN E Evol
x x Reuse entire stream derivative product based common platform architecture M PLA reusability I D QN E Evol
x x Adjust product line growth M Effort I D QN E Evol
x x Changes product line M Effort I D QN E Evol
x x Code churn change product line layer M Effort I B QN E Evol
x Code churn product layer M Effort I D QN E Evol
x Code churn product line M Effort I D QN E Evol
x x Efficiency M Efficiency I D QN E Evol
x x Impact change M Effort I D QN E Evol
x Number module M Size I B QN E Evol
x Product line growth M Size I D QN E Evol
x Size code product line M Size I B QN E Evol
x Size product code M Size I B QN E Evol
x Source change M Effort I D QN E Evol
x x x Software Fault Tree Metric S Security product architecture I D QN E DA Des
x Average number age fault M Maturity E D QN E DE Test x Average number day close fault M Maturity E D QN E DE Test x Configuration Complexity Metric M Configuration Complexity I D QN E DE Des
x Constraint Complexity Metric M Constraint complexity I D QN E DE Des
x Interface Complexity Metric M Interface Complexity sofware component I D QN E DE Des
x Modularity M Modularity architecture I D QN E DE Des
x Number closed fault M Maturity E B QN E DE Test x Number constraint sequence interface invocation M Interface Constraints Complexity I B QN E DE Des
x Number different configuration component operate M Interface Packaging Configurations Complexity I D QN E DE Des
x Number distinct range constraint property M Interface Constraints Complexity I B QN E DE Des
x Number event M Interface Signature Complexity I B QN E DE Des
x Number fault requirement design M Maturity E B QN E DE Test x Number open fault M Maturity E B QN E DE Test x Number M Interface Constraints Complexity I B QN E DE Des
x Number M Interface Constraints Complexity I B QN E DE Des
x Number property M Interface Signature Complexity I B QN E DE Des
x Number readable property M Observability I D QN E DE Des
x Number service M Interface Signature Complexity I B QN E DE Des
x Number writable property M Customizability I D QN E DE Des
x Avg
No day fault remains M Maturity E D QN E DE Test x Overall Interface Complexity Component Metric M Interface Complexity Component I D QN E DE Des
x Ratio business service without parameter component SCp c M Self Completeness Degree independence term functionality provides I D QN E DE Des
x Ratio business service without return value component SCr c M Self Completeness Degree independence term functionality provides I D QN E DE Des
x Reusability architecture M Reusability architecture I D QN E DE Des
x x Signature Complexity Metric M Signature Complexity I D QN E DE Des
x Compound PSU CPSU M Internal cohesion I D QN E DE Des
x x Compound RSU CRSU M Internal cohesion I D QN E DE Des
x x Internal cohesion architecture M Internal cohesion I D QL E DE Des
x x Number service provided component x actually used component architecture Pactual x M Structural soundness I D QN E DE Des
x x Number service required component x actually used component architecture Ractual x M Structural soundness I D QN E DE Des
x x Provided Service utilization PSU M Structural soundness I D QN E DE Des
x x Required Service utilization RSU M Structural soundness I D QN E DE Des
x x Total number service provided component x Ptotal x M Structural soundness I B QN E DE Des
x Total number service required component x Rtotal x M Structural soundness I B QN E DE Des
x Error propagation R Error propagation I D QN P DE Des
x Average PSU M Cohesion complex component I D QN E DE Des
x Average PSU per product family architecture M Average PSU per Product Family Architecture I D QN E DE Des
x Average RSU M Cohesion complex component I D QN E DE Des
x Average RSU per Product Family Architecture M Average RSU per Product Family Architecture I D QN E DE Des
x Number day beginning project feature included P Time feature included scope project I B QN E DE Des
x Number day needed make final decision feature exclusion P Number scope decision per feature I B QN E DE Des
x Number scope change needed remove scope P Number scope decision per feature I B QN E DE Des
x Number scope exclusion timestamp P Size direction scope change time I B QN E DE Des
x Number scope inclusion timestamp P Size direction scope change I B QN E DE Des
x Reason scope exclusion P Rationale removing feature scope I B QL E DE Des
x Number kind core asset F Level Coverage I B QN E DE Des
x x Total number core asset F Level Coverage I B QN E DE Des
x x Clone coverage M Similarity I D QN E DE Real
x Tracking degradation M Tracking Degradation E D QN E DA Test x x x x Coherence component M Coherence E D QN E DE Des
x x Cost testing single product M Cost testing single product E D QN E DE Des
x Percentage reusable component per product M Percentage reusable component per product E D QN E DE Des
x Percentage component per product M Percentage component per product E D QN E DE Des
x Percentage slightly generic reusable component per product M Percentage slightly generic reusable component per product E D QN E DE Des
x Percentage generic reusable component per product M Percentage generic reusable component per product E D QN E DE Des
x Relative cost test component M Relative cost test component E D QN E DE Des
x Relative cost test slightly generic component M Relative cost test slightly generic component E D QN E DE Des
x Relative cost test generic component M Relative cost test generic component E D QN E DE Des
x Relative cost test adaptation component M Relative cost test adaptation component E D QN E DE Des
x Relative cost test adaptation slightly generic component M Relative cost test adaptation slightly generic component E D QN E DE Des
x Relative cost test adaptation generic component M Relative cost test adaptation generic component E D QN E DE Des
x Variation rank variant M Variability variant I D QN E DE Des
x Variation rank variation point M Variability variation point I D QN E DE Des
x Change propagation coefficient CPC M Potential architecture insulate component change I D QN E DE Des
x x Change propagation probability CP M Change propagation probability architecture I D QN P DE Des
x x Concern overlap M Interaction two concern I D QN E DE Des
x Decision volatility M Stability decision I D QN E DE Des
x Design volatility M Stability decision I D QN E DE Des
x Independence level M Independence system I D QN E DE Des
x Measure Other characteristic Validation Tool Actual usage Reference C V T Met E Met Not valid Binary size N N x x A Cyclomatic complexity N N x x A Performance N N x x A Class AlternativeOR x x N N x x A Class AlternativeXOR x x N N x x A Class Mandatory x x N N x x A ClassNumVariantsAltOR x x N N x x A ClassNumVariantsAltXOR x x N N x x A ClassNumVariantsMandatory x x N N x x A ClassNumVariantsOptional x x N N x x A ClassOptional x x N N x x A ClassTotal PLVariabilities x x N N x x A ClassTotal AlternativeOR x x N N x x A ClassTotal AlternativeXOR x x N N x x A ClassTotal Mandatory x x N N x x A ClassTotalOptional x x N N x x A ClassTotal Variabilities x x N N x x A ClassTotalVP x x N N x x A ClassVP x x N N x x A Component TotalVariabilities x x N N x x A Component Variable x x N N x x A CompPL x x N N x x A CompVariability x x N N x x A CompVariant x x N N x x A CompVariantVP x x N N x x A CompVP x x N N x x A nVariants x x N N x x A nVP x x N N x x A PLTotalVariability x x N N x x A UseCase AlternativeOR x x N N x x A UseCase AlternativeXOR x x N N x x A UseCaseMandatory x x N N x x A UseCaseNum VariantsAltOR x x N N x x A UseCase NumVariants AltXOR x x N N x x A UseCaseNum VariantsMandatory x x N N x x A UseCaseNum VariantsOptional x x N N x x A UseCaseOptional x x N N x x A UseCaseTotal AlternativeOR x x N N x x A UseCaseTotal AlternativeXOR x x N N x x A UseCaseTotal Mandatory x x N N x x A UseCaseTotal Optional x x N N x x A UseCaseTotalPL Variabilities x x N N x x A UseCaseTotal Variabilities x x N N x x A UseCaseTotalVP x x N N x x A UseCaseVP x x N N x x A Maintainability index MI product x N N x x A Maintainability index MI feature x N N x x A Maintainability index MI architecture x N N x x A Architecture variability AV x N N x x A Component reuse rate CRR x N N x x A Exterior information flow complexity EIFC x N N x x A Interior information flow complexity IIFC x N N x x A cyclomatic complexity PCC x N N x x A information flow complexity x N N x x A total complexity PTC x N N x x A vertex complexity PVC x N N x x A Reuse benefit rate RBR x N N x x A Strong coupling coefficient SCC x N N x x A Structure similarity coefficient SSC x N N x x A Structure Variability Coefficient SVC x N N x x A Variability point number VP x N N x x A Weak coupling coefficient WCC x N N x x A Architectural commonality AC x Y PB N A Component compliance CC x Y PB N A Coverage variability CV x Y PB N A Cumulative applicability CA x Y PB N A Effectiveness tailoring ET x Y PB N A Functional coverage FC x Y PB N A commonality NFC x Y PB N A Coverage NC x Y PB N A Overall understandability OU x Y PB N A Reusability RE x Y PB N A Tailorability TL x Y PB N A Tailorability closed variability TC x Y PB N A Tailorability open variability TO x Y PB N A Cognitive complexity feature model I x N N x A Cognitive complexity feature model II x N N x A Compound Complexity Feature Diagram x N N x A Structural complexity feature model x N N x A Efficiency single derivate product N Y CS A Efficiency entire stream derivative product based common PLA N Y CS A Reuse single product N Y CS A Reuse entire stream derivative product based common platform architecture N Y CS A Adjust product line growth N N x I Changes product line N N x I Code churn change product line layer N N x I Code churn product layer N N x I Code churn product line N N x I Efficiency N N x I Impact change N N x I Number module N N x I Product line growth N N x I Size code product line N N x I Size product code N N x I Source change N N x I Software fault tree metric x x N N x I Average number age fault N Y CS A Average number day close fault N Y CS A Configuration complexity metric N Y CS A Constraint complexity metric N Y CS A Interface complexity metric N Y CS A Modularity N Y CS A Number closed fault N Y CS A Number constraint sequence interface invocation N Y CS A Number different configuration component operate N Y CS A Number distinct range constraint property N Y CS A Number event N Y CS A Number fault requirement design N Y CS A Number open fault N Y CS A Number N Y CS A Number N Y CS A Number property N Y CS A Number readable property N Y CS A Number service N Y CS A Number writable property N Y CS A Avg
No day fault remains N Y CS A Overall Interface Complexity Component Metric N Y CS A Ratio business service without parameter component SCp c N Y CS A Ratio business service without return value component SCr c N Y CS A Reusability architecture N Y CS A Signature Complexity Metric N Y CS A Compound PSU CPSU x N N x A Compound RSU CRSU x N N x A Internal cohesion architecture x N N x A Number service provided component x actually used component architecture Pactual x x N N x A Number service required component x actually used component architecture Ractual x x N N x A Provided Service Utilization PSU x N N x A Required Service Utilization RSU x N N x A Total number service provided component x Ptotal x x N N x A Total number service required component x Rtotal x x N N x A Error Propagation x N Y CS x A Average PSU x N N x A Average PSU per Product Family Architecture x N N x A Average RSU x N N x A Average RSU per Product Family Architecture x N N x A Number day beginning project feature included N Y CS x A Number day needed make final decision feature exclusion N Y CS x A Number scope change needed remove scope N Y CS x A Number scope exclusion timestamp N Y CS x A Number scope inclusion timestamp N Y CS x A Reason scope exclusion N Y CS A Number kind core asset N N x A Total number core asset N N x A Clone Coverage N N x I Tracking Degradation N N x I Coherence component x N N x A Cost testing single product x N N x x I Percentage reusable component per product x N N x x I Percentage component per product x N N x x I Percentage slightly generic reusable component per product x N N x x I Percentage generic reusable component per product x N N x x I Relative cost test component x N N x x I Relative cost test slightly generic component x N N x x I Relative cost test generic component x N N x x I Relative cost test adaptation component x N N x x I Relative cost test adaptation slightly generic component x N N x x I Relative cost test adaptation generic component x N N x x I Variation rank variant x N N x A Variation rank variation point x N N x A Change propagation coefficient CPC x N Y CS x A Change propagation probability CP x N Y CS x A Concern overlap N Y CE x A Decision volatility N Y CE x A Design volatility N Y CE x A Independence level N Y CE x A List quality attribute software product line found systematic review Quality attribute Number occurrence Number measure Accuracy Active domain Applicability Architectural commonality Architecture compliance Atomicity Availability Average PSU per product family architecture Average RSU per product family architecture Behaviour Benefit reusability Binary size Change propagation probability architecture Clarity reason scope decision Cognitive complexity feature model Coherence Cohesion complex component Commercial efficiency Complexity Complexity class Complexity class diagram Complexity component Complexity component diagram Complexity use case Complexity use case diagram Complexity architecture PLA Complexity interaction port component role connector Complexity interior information flow arc component connector Complexity source code Compliance Component replaceability Component reuse Composability Compound complexity feature diagram Confidentiality Configurability Configuration complexity Consistency Constraint complexity Cost production core asset Cost testing single product Cost use core asset Customer satisfaction Customizability Defect density applied artifact Defect density core asset Defect density trend Deletions Direct product cost Durability Effect investment Effectiveness tailoring Efficiency Effort EMC Energy efficiency Error propagation Evolution Extensibility Final product efficiency Final product reusability Flexibility Flow structure attribute PLA Functional commonality Functional requirement Independence system Independent domain Infrastructure production cost Integrity Interaction two concern Interface complexity component Interface complexity software component Interface constraint complexity Interface packaging configuration complexity Interface signature complexity Internal cohesion Interoperability Isolation Level coverage Maintainability Maintainability index MI feature Maintainability index MI product Maintainability index MI architecture Market feature application scope Market satisfaction Maturity Mission focus Modifiability Modularity architecture commonality feature commonality covered Number scope decision per feature Observability Operational time parking Percentage reusable component per product Percentage component per product Percentage slightly generic reusable component per product Percentage generic reusable component per product Performance Physical fitness Physical weight system PLA efficiency PLA reusability Portability Potential architecture insulate component change Power consumption normal operation Process compliance Producibility Productivity Quality core asset Rationale removing feature scope Relative cost test component Relative cost test slightly generic component Relative cost test generic component Relative cost test adaptation component Relative cost test adaptation slightly generic component Relative cost test adaptation generic component Reliability Responsiveness communication network Restructuring Reusability Reusability core asset Reusability architecture Reuse rate domain Robustness Safety Scalability Schedule difference Security Security product architecture Self completeness Degree independence term functionality provides Serviceability Signature complexity Similarity Similarity PLA Size Size direction scope change time Stability decision Stability decision Stability scoping process Strong coupling PLA Structural complexity Feature Model Structural soundness Structure variability coefficient SVC Styling compatibility Suitability Tailorability Tailorability closed variability Tailorability open variability Testability The number type artifact asset library The number product past current future Throughput Time distributed cycle time activity Time market Time feature included scope project Total complexity PLA Total complexity PLA partially different point view Total complexity PLA partially point view Total product development cost Tracking degradation Understandability Usability Usefulness core asset Variability variant Variability variation point Variability PLA Variability richness Viable domain Volatility dynamic scope decision Volatility scope decision Weak coupling PLA Over million scientific document fingertip Springer International Publishing AG
Part

This service advanced JavaScript available learn Relief measure attribute quality often used feature subset selection
Its use induction classification tree rule discretization method however hindered inability suggest subset value discrete attribute threshold splitting continuous attribute interval
We present efficient algorithm task
Editor Hendrik Blockeel
Over million scientific document fingertip Springer International Publishing AG
Part

In specification defines property element file
It may also refer set specific given instance
For clarity attribute correctly considered
An attribute frequently generally property property
However actual usage term attribute often treated equivalent depending technology discussed
An attribute object usually consists name value element type class name file name extension
For example computer graphic line object attribute thickness real value color descriptive value brown green value defined certain color model RGB dashing attribute etc
A circle object defined similar attribute plus origin radius
In attribute attached field block code like equivalent
Attributes accessible compiler programmatically
Users language see many example attribute used address concern mechanistic platform us
This creates false impression sole intended purpose
With attribute possible extend attribute
Their specific use metadata left developer cover wide range type information given application class member
The decision expose given attribute property also left developer decision use part larger application framework
Attributes implemented class derived
They often used service like interoperability queried runtime
The example show attribute defined C Positional parameter like first parameter type string parameter attribute constructor
Name parameter like Boolean parameter example property attribute constant value
Attributes contrasted XML documentation also defines metadata included compiled assembly therefore accessed programmatically
Display checked attribute property checkbox change
On many database system relative SQL table file row item column attribute
Both database code attribute synonymous property variable although attribute defined contain value subvalues
The first database
Two current platform include
In markup construct consisting pair exists within
Markup language use attribute describe data formatting data
A good example process XML assigning value property element
Note element value found separate end tag element
The element may number attribute set
If element question could considered property another entity let say element zero attribute property

âãÏÓ obj endobj xref n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n trailer R R çä á n êÎZVR Å À endstream endobj obj stream C L X Ímì endstream endobj obj endobj obj R stream ÚNúGýËð H ùëÕÉóùÁÓê Á
Ð æU òÓ Eä Ó endstream endobj obj R endobj obj endobj obj stream
endstream endobj obj R R endobj obj endobj obj R stream µ mnv Üü n ï ºkûîÜf Uði È ûÙãrVá Dê ÀÛÐ ÿ HZy endstream endobj obj R endobj obj R endobj obj R endobj obj R endobj obj endobj obj R stream R gxæÌ X
S Ù ÊÇ P òAuÏóTÖv uö æè w C

âãÏÓ obj endobj obj stream hÞbbd AD
endstream endobj startxref EOF obj stream hÞb Ò æÙ endstream endobj obj endobj obj endobj obj stream Ì kò ÄÛ ï I éJé j l Íô M í ö ïà æñ endstream endobj obj stream v Û ÐµÍ Å cÕ bªBÇ êfÉ ãövc kÍsì PÂ D Ù æ MÇ Y úHÛÝ âöêÝTªÔq H H endstream endobj obj stream Íº A ôL

Ò Ùé Xt Ðÿ eQã endstream endobj obj stream V M ñ
ïíkQlö Q Á ÖÐ ÏTæ B Ù Îö È þ endstream endobj obj stream ÈÛë cÅ h ÌCp O O endstream endobj obj stream Wáu kÂÃkÝ ñy è øþU W ýy þ endstream endobj obj stream ñmù T Êauòa Ü endstream endobj obj stream T
D x Õ Ù Jõe Ø iG P þ endstream endobj obj stream EúÊ ö üâDÓ ÎíWYÏ Z O eÜN endstream endobj obj stream vEùm qéÇ
h à Üph endstream endobj obj stream b ÂÚ v VÀxAPàDpR TåT ñ TåTåTåTåTåTåTåTåTåTåTåTåTåTåÃQE á eIäwì Ôt endstream endobj obj stream b
ý P P P P P P P P P P P P P P P Yù Êª Wgs endstream endobj obj stream M ê Ö p KÐþ TÜ ál endstream endobj obj stream n

In context refers two related distinct notion exist wherever defined business context Many aspect structural quality evaluated analysis software inner structure source code unit level technology level system level effect architecture adheres sound principle outlined paper topic OMG
But structural quality user others acting behalf interact software least prototype partial implementation even interaction mock version made cardboard represents dynamic test version considered prototype
Other aspect reliability might involve software also underlying hardware therefore assessed statically dynamically
Functional quality typically assessed dynamically also possible use static test
Historically structure classification terminology attribute metric applicable derived extracted subsequent ISO quality model also known SQuaRE
Based model CISQ defined five major desirable structural characteristic needed piece software provide Reliability Efficiency Security Maintainability adequate Size
Software quality measurement quantifies extent software program system rate along five dimension
An aggregated measure software quality computed qualitative quantitative scoring scheme mix weighting system reflecting priority
This view software quality positioned linear continuum supplemented analysis critical programming error specific circumstance lead catastrophic outage performance degradation make given system unsuitable use regardless rating based aggregated measurement
Such programming error found system level represent production issue whilst even far numerous programming error account le production issue
As consequence code quality without context whole system described limited value
To view explore analyze communicate software quality measurement concept technique provide visual interactive mean useful particular several software quality measure related component software system
For example represent specialized approach express combine information software development software quality system dynamic
A science mature measurement tool Louis Pasteur
Measuring software quality motivated least two reason However distinction measuring improving software quality embedded system emphasis risk management software quality business software emphasis cost maintainability management becoming somewhat irrelevant
Embedded system often include user interface designer much concerned issue affecting usability user productivity counterpart focus business application
The latter turn looking ERP CRM system corporate nervous system whose uptime performance vital enterprise
This convergence visible mobile computing user access ERP application depending quality software across type software layer
Both type software use technology stack complex architecture software quality analysis measurement managed comprehensive consistent manner decoupled software ultimate purpose use
In case engineer management need able make rational decision based measurement analysis adherence precept attributed others
There many different definition quality
For capability software product conform requirement
commented others synonymous customer value Highsmith even defect level
The first definition quality History remembers Shewhart beginning century Shewhart Kitchenham Pfleeger reporting teaching David Garvin identify five different perspective quality The problem inherent attempt define quality product almost product stated master Walter Shewhart
The difficulty defining quality translate future need user measurable characteristic product designed turned give satisfaction price user pay
This easy soon one feel fairly successful endeavor find need consumer changed competitor moved etc
Quality customer determination engineer determination marketing determination general management determination
It based customer actual experience product service measured requirement stated unstated conscious merely sensed technically operational entirely subjective always representing moving target competitive market
The word quality multiple meaning
Two meaning dominate use word
Quality consists product feature meet need customer thereby provide product satisfaction

Quality consists freedom deficiency
Nevertheless handbook convenient standardize short definition word quality fitness use
Even though quality perceptual conditional somewhat subjective attribute may understood differently different people noted article software structural quality characteristic clearly defined Consortium IT Software Quality CISQ
Under guidance framework CISQ first Director CISQ Distinguished Advisor CISQ defined five major desirable characteristic piece software needed provide
In model Whats need achieved Software functional quality defined conformance explicitly stated functional requirement identified example using analysis part toolkit documented level satisfaction experienced
The latter referred concerned intuitive responsive easily simple complex operation performed useful
Typically software testing practice tool ensure piece software behaves compliance original design planned user experience desired
piece software disposition support acceptance criterion
The dual dimension software quality consistent model proposed divide software characteristic two piece internal external quality characteristic
External quality characteristic part product face user internal quality characteristic
One challenge defining quality everyone feel understand could based extending various description concept quality used business
proposed product quality function much change world better
This interpreted meaning functional quality user satisfaction important structural quality determining software quality
Another definition coined Quality Software Management Systems Thinking Quality value person
This definition stress quality inherently people experience quality software differently
One strength definition question invite software team consider Who people want value software
What valuable
Although concept presented section applicable structural functional software quality measurement latter essentially performed testing see main article
Software quality measurement quantifying extent system software posse desirable characteristic
This performed qualitative quantitative mean mix
In case desirable characteristic set measurable attribute existence piece software system tend correlated associated characteristic
For example attribute associated portability number statement program
More precisely using approach measurable attribute hows need enforced enable whats Software Quality definition
The structure classification terminology attribute metric applicable software quality management derived extracted subsequent quality model
The main focus internal structural quality
Subcategories created handle specific area like business application architecture technical characteristic data access manipulation notion transaction
The dependence tree software quality characteristic measurable attribute represented diagram right characteristic matter user right owner business system depends measurable attribute left Correlations programming error production defect unveil basic code error account total error source code
These numerous issue eventually count defect production
Bad software engineering practice architecture level account total defect consume half effort spent fixing problem lead serious reliability security efficiency issue production
Many existing software measure count structural element application result parsing source code individual instruction Park token Halstead control structure McCabe object Chidamber Kemerer
Software quality measurement quantifying extent system software rate along dimension
The analysis performed using qualitative quantitative approach mix provide aggregate view using example weighted average reflect relative importance factor measured
This view software quality linear continuum supplemented identification discrete
These vulnerability may fail test case result bad practice specific circumstance lead catastrophic outage performance degradation security breach corrupted data myriad problem Nygard make given system de facto unsuitable use regardless rating based aggregated measurement
A example vulnerability repository vulnerability source code make application exposed security breach
The measurement critical application characteristic involves measuring structural attribute application architecture coding documentation displayed picture
Thus characteristic affected attribute numerous level abstraction application must included calculating characteristic measure valuable predictor quality outcome affect business
The layered approach calculating characteristic measure displayed figure first proposed Boehm colleague TRW Boehm approach taken ISO series standard
These attribute measured parsed result static analysis application source code
Even dynamic characteristic application reliability performance efficiency causal root static structure application
Structural quality analysis measurement performed analysis relationship principle standard together define conceptual logical architecture system
This distinct basic local code analysis typically performed mostly concerned implementation consideration crucial activity
The root cause poor reliability found combination good architectural coding practice
This detected measuring static quality attribute application
Assessing static attribute underlying application reliability provides estimate level business risk likelihood potential application failure defect application experience placed operation
Assessing reliability requires check least following software engineering best practice technical attribute Depending application architecture component used external library framework custom check defined along line drawn list best practice ensure better assessment reliability delivered software
As Reliability cause performance inefficiency often found violation good architectural coding practice detected measuring static quality attribute application
These static attribute predict potential operational performance bottleneck future scalability problem especially application requiring high execution speed handling complex algorithm huge volume data
Assessing performance efficiency requires checking least following software engineering best practice technical attribute Most security vulnerability result poor coding architectural practice SQL injection scripting
These well documented list maintained CWE Emergency Center Carnegie Mellon University
Assessing security requires least checking following software engineering best practice technical attribute Maintainability includes concept modularity understandability changeability testability reusability transferability one development team another
These take form critical issue code level
Rather poor maintainability typically result thousand minor violation best practice documentation complexity avoidance strategy basic programming practice make difference clean code unorganized code
Assessing maintainability requires checking following software engineering best practice technical attribute Maintainability closely related Ward Cunningham concept expression cost resulting lack maintainability
Reasons maintainability low classified reckless prudent deliberate inadvertent often origin developer inability lack time goal carelessness discrepancy creation cost benefit documentation particular maintainable
Measuring software size requires whole source code correctly gathered including database structure script data manipulation source code component header configuration file etc
There essentially two type software size measured technical size footprint functional size The function point analysis sizing standard supported International Function Point Users Group IFPUG
It applied early software development dependent line code like somewhat inaccurate Backfiring method
The method technology agnostic used comparative analysis across organization across industry
Since inception Function Point Analysis several variation evolved family functional sizing technique broadened include sizing measure COSMIC NESMA Use Case Points FP Lite Early Quick FPs recently Story Points
However Function Points history statistical accuracy used common unit work measurement numerous application development management ADM outsourcing engagement serving currency service delivered performance measured
One common limitation Function Point methodology manual process therefore costly large scale initiative application development outsourcing engagement
This negative aspect applying methodology may motivated industry IT leader form Consortium IT Software Quality focused introducing computable metric standard automating measuring software size IFPUG keep promoting manual approach activity rely FP counter certification
CISQ announced availability first metric standard Automated Function Points CISQ membership CISQ Technical
These recommendation developed OMG Request Comment format submitted OMG process standardization
Critical Programming Errors specific architectural coding bad practice result highest immediate long term business disruption risk
These quite often depend heavily context business objective risk
Some may consider respect naming convention others preparing ground knowledge transfer example consider absolutely critical
Critical Programming Errors also classified per CISQ Characteristics
Basic example Newer proposal quality model Quamoco propagate direct integration definition quality attribute measurement
By breaking quality attribute even defining additional layer complex abstract quality attribute reliability maintainability become manageable measurable
Those quality model applied industrial context received widespread adoption

