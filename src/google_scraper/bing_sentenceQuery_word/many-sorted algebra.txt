Still question
Ask

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
I Computer Science student
I completed linear algebra course
I got point point final exam
I know linear algebra well
As programmer I difficult time understanding linear algebra help computer science
Can someone please clear topic
The page see also might useful
In second page read among others I guess giving standard course linear algebra reference application field interest
Although standard practice I think approach theory mixed application preferred
This surely I I teach Mathematics Economics major year ago
used computer science many way boolean algebra evaluating code path error correcting code processor optimization relational database forth
used computer programming many way graphic modeling arithmetic ad hoc business logic forth
Linear algebra often taught one two way computational aspect thing focus matrix property operation matrix algebraically linear mapping treated algebraic structure one study instance group theoretic relation arise
In either case need try hard find situation knowledge either theoretical linear algebra matrix mathematics necessary
A computer scientist need various algebraic theory semigroups ring field category
Linear algebra base
Besides used mathematical science differencial equation probability etc
Linear algebra applies many area machine learning
Here small set example
find best separating hyperplane two set vector
The optimization problem minimizes objective function clearly expressed using linear algebra minimization algorithm often solved dual space using linear algebra proof regarding algorithm involve linear algebra
Many label propagation graph algorithm expressed optimization formula involving graph
separate data point group related point finding eigenvalue graph Laplacian matrix small eigenvectors
Neural net use linear algebra various way
For example densely connected neural net layer perform multiplication propagate value
Convex optimization algorithm used throughout machine learning use linear algebra
The common algorithm
Optimization algorithm used problem often formulated implemented using linear algebra
PageRank us stochastic matrix eigenvectors heart arguably one useful application computer science Thank interest question
Because attracted spam answer removed posting answer requires site
Would like answer one instead
asked viewed active site design logo Stack Exchange Inc user contribution licensed

partnered develop curriculum teach algebraic geometric concept computer programming
The twenty lesson focus concept like order operation Cartesian plane function composition definition solving word problem within context video game design
By shifting classwork abstract problem series relevant programming problem CS Algebra demonstrates algebra applies real world using exciting approach create something cool
At end course student written program build composite image animation complete video game design shared demonstrate mastery programming algebra
For information view
CS Algebra aligned Common Core Standards Mathematics making possible integrate curriculum classroom smoothly
CS Algebra also model implementation Common Core Standards Mathematical Practice offering explicit pedagogical recommendation across eight practice standard
Our curriculum also satisfies several CSTA Computer Science Teacher Association standard across level grade grade
For information view
The Computer Science Algebra course inspired developed partnership
If enjoyed CS Algebra want go student Bootstrap us WeScheme instead block based programming allows student explore complex apps game algebraic concept recursion
If would like try WeScheme looking Hour Code tutorial algebra class recommend short hour tutorial designed beginner

ÐÄÆ obj R stream ì w blJ c EO Ú wo Ï RÙl ºÆÞ Ä b ôùä U x òÍ Öz k Ï Âøè úÀN B ÌàAài ÿ TÎj ej QÂ Uç lùäÒeB w

obj endobj obj References endobj obj endobj obj Introduction endobj obj endobj obj General remark endobj obj endobj obj Motivation consideration partial algebra endobj obj endobj obj Some remark set theory endobj obj endobj obj Classes set general endobj obj endobj obj Axioms set theory endobj obj endobj obj Some useful set theoretical definition principle endobj obj endobj obj Similarity type partial algebra first visit closed subset homomorphism direct product endobj obj endobj obj Homogeneous partial algebra endobj obj endobj obj Heterogeneous partial algebra endobj obj endobj obj Closed subset generation algebraic induction endobj obj endobj obj A first visit homomorphism direct product endobj obj endobj obj Partial Peano algebra term term operation endobj obj endobj obj Partial Peano algebra recursion theorem endobj obj endobj obj More term term operation endobj obj endobj obj Some basic logical model theoretic concept homomorphism revisited endobj obj endobj obj Existence equation endobj obj endobj obj Preservation reflection formula endobj obj endobj obj Homomorphisms closed homomorphism isomorphism second endobj obj endobj obj Examples endobj obj endobj obj Classical algebraic structure module endobj obj endobj obj Some example partial algebra endobj obj endobj obj A different view heterogeneous algebra endobj obj endobj obj Substructures generation homomorphism revisited endobj obj endobj obj Substructures generation revisited endobj obj endobj obj On property homomorphism endobj obj endobj obj Monomorphisms epimorphisms endobj obj endobj obj Congruence relation factor algebra diagram completion I endobj obj endobj obj Congruence relation closed congruence relation endobj obj endobj obj Factor algebra endobj obj endobj obj Diagram Completion Lemma mapping full surjective homomorphism endobj obj endobj obj Isomorphism theorem endobj obj endobj obj Factorization system endobj obj endobj obj Some construction partial algebra endobj obj endobj obj Products reduced product endobj obj endobj obj Coproducts directed colimits endobj obj endobj obj Some operator derived construction endobj obj endobj obj Free partial algebra universal solution endobj obj endobj obj Some descriptive principle universal algebraic language endobj obj endobj obj Free partial algebra endobj obj endobj obj Free completion endobj obj endobj obj Diagram completion II Epimorphism Theorem endobj obj endobj obj On existence universal solution endobj obj endobj obj Fully invariant congruence relation endobj obj endobj obj characterization primitive class free partial algebra endobj obj endobj obj Preservation formula operator endobj obj endobj obj A characterization free partial algebra endobj obj endobj obj Characterizations primitive class finitely many sort endobj obj endobj obj The theory endobj obj endobj obj Quasivarieties partial algebra endobj obj endobj obj About first order language partial algebra based existence equation endobj obj endobj obj Elementary implication translation epimorphisms endobj obj endobj obj Preservation reflection formula revisited endobj obj endobj obj Factorization system revisited endobj obj endobj obj A Meta Birkhoff Theorem Sain endobj obj endobj obj Some addition endobj obj endobj obj Some general remark concerning use different kind equation endobj obj endobj obj Some remark term operation clone endobj obj R endobj obj R stream ÔÏ
Ríü â Ð ÂR
sI î Av Úa ù ïÜùàCåPCg ÓqDðü ÇJ ò xf ñfÃDù K áendstream endobj obj endobj obj R R R endobj obj endobj obj endobj obj R endobj obj R R Tf g true endobj obj R null endobj obj R null endobj obj R R R R R R endobj obj R stream µu A ºù Øûi mòÇ îu ÎòÔçØDþt qîæc Zõån Háî µù ÜÅqó Í ù
LuUñpek I CÍ Þ éZ VÌ Ôß ALHDÓ

º ÅB K ÝCùendstream endobj obj endobj obj R R R R endobj obj endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R R R R R R R R endobj obj R stream DÀNbøj
Ô é Á N ÕT ÛQÛ þ Ûbì âIÈU g Íîê U lí h Â ÂÒiP Ø N SiÐMÀÝ ÄÅéAq Ttèa
ûT X ê
ÁÈXÀÀöãgl ú endobj obj endobj obj R R R endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R R R R R R R endobj obj R stream ÂF âº zö
ÿ ýÒÊ ÆuS âÇÐÀex
Úº CRöÄ ºZöu
ùxd f à çi Û Ñ h IEÎ µÇ çÝà íie ÿ g Kg Ý ï äí Y endobj obj endobj obj R R R endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R R R R R R endobj obj R stream
tr ýr qtz l YJ qOùo Ú Pfd À ÏtA PJ äM Ö WÝ møXwåê Æáü SEçÔ é Û BÅOÇK
ø û p z ä

P ü j êQendstream endobj obj endobj obj R R R endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R R R R endobj obj R stream G
Ôîgñ Û ñ
XÁÝ ÊãßÆR endstream endobj obj endobj obj R R R R R R R R R endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R R R R R R R endobj obj R stream Ùu Ì þ zÄ ÇÚÑ M xÞ yG Ë x tì ø Q HhæÂ Ì ìîkGùÒ g Løg ÚýÔUbHæHÅ SM Ätq H ËxtF Éñk î ªáTÖO Ó
ÜqG Î ii ößáó mÁ Âäm r ZT endstream endobj obj endobj obj R R R R R R endobj obj endobj obj endobj obj endobj obj R null endobj obj R R R endobj obj R stream oeÉ g yYDeR bh öãQäø zÌQhÆÉv Ûü kÜ Ì æe Ä À Úú E k æÆi k ä R ÞÁºg óGgNKµ n J CÂ qk éâò ê
Gª zE zaRq Fg ªëC Ò
ÏúU T endstream endobj obj endobj obj R R R R R R R R endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj R null endobj obj R null endobj obj R R R R R endobj obj R stream Í õúÉó p ìét

èeüÞº À à wF Iµøõ çµîNî
ú yÉ Ób éxÊñ Æ ý yt V pÙ OQº Ëjy n ßOÜ H É þ ÅOñùw ÇçÒ Ë È µ ù ü µB ø ª VkÆÆòhx Q endobj obj endobj obj R R R R R R R R R R R R R endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj R null endobj obj R R R R endobj obj R stream ãÛ Ó
öôÔÕ èGl xÍÏþs e éë æ ûöTÑ h µÉyMXX ÅÛ ù ÕÇª JÛ ÂCly SSÆÒ Ã
Ô
su Óô â GáóÚªìåUFÒj x V û õr Å Î D ø í À Ám ò XûÅMxæßè u ê endobj obj endobj obj R R R endobj obj R null endobj obj R R R R R R endobj obj R stream
Ö øx ð ô Tf z Êl Ö ßJ h é ÉÐt Ò
Í â ZU ì ßxªpþÕ Zûï Y ZØ ò Iò MÃ Ê JÊ Õ çKo ï ÏÒLbA ôñ óâ euú âN ð æT æEe endobj obj endobj obj R R R R R R endobj obj endobj obj endobj obj endobj obj R null endobj obj R null endobj obj R R R R R R R R R R endobj obj R stream íKÙ à Á ñ p íÂ O öL áGòî
Ü Ë MZM þÉbôÝÍÖ
ÓU k Å L ö Ì xö Ìrö Êá õôõZæ á S û µzy è Í èÃ Æ vî éE gç á j ßó ªÕe õ Q Åò Üì ûn AÒÞbÑ Ë é endstream endobj obj endobj obj R R R R R R endobj obj endobj obj endobj obj endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R null endobj obj R R R R R R R R R R R R endobj obj R stream M ÏofÖ dB êÀrU B
ÜPØ óZÂ N hâ LaùÅçÂK SpúOh Ûw ÿ ïeØm W â Ë Ö úP Cú e á
ò øô R h Y yò ÃKþ endobj obj endobj obj R R R endobj obj R null endobj obj R null endobj obj R R R R R R R R R endobj obj R stream h V ª Î Õ áµ F ê
ªÿßY ØºúXw Î ÝÂÂ p àz
âÐ
u õ tÑû ÐÅuh ÈérØ
wÄX Xä µVÅ Æõp ãÙäOñÓå ÈôÓÏ
Óo OýúO WW
endobj obj endobj obj R R R R R R R R R endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj R null endobj obj R null endobj obj R null endobj obj R R R R R R R R R R R R R endobj obj R stream xÚµ bøýa ücÆ ÎÙ Pr ªúkA í
Â Z ÇïïÊ PT PÊ k ô Ó I Õ lA ZÙØ oI ÓW C âÁZBµü
X Å XIôu S Ôxbñ Â pAxN N Ã
qíÓÅYä ZÚs Ùk Ã öË ØÚ Ã ú
é èÁ l endobj obj endobj obj R R R endobj obj R null endobj obj R R R R R R R R R R R endobj obj R stream xÚÝ ÎÙ v æ Ûä U U Ï á L õ

use following search parameter narrow result
Welcome Computer Science researcher student professional enthusiast
We share discus content computer scientist find interesting
Q A thread welcome prefer high quality post focused directly graduate level CS material
We discourage post introductory material study CS career
For topic please consider one subreddits sidebar instead
Read original free see Other optic likely better suited Other online community If new Computer Science please read posting
A list book recommendation community various topic found
front page internet
subscribe one thousand community
submitted Hello I first year engineering student KULeuven Belgium
In first semester course Linear Algebra
I found course interesting much take completely professor rushed theory SVD week order give introduction Systems Theory
This left time learn application
Therefore I looking information source learning platform specific use Linear Algebra Computer Science
I already stumbled upon book called Linear Algebra Probability Computer Science Applications website selling course
I wondering interesting read specific topic
Preferably something mainly focused application theory
Thanks advance
Post comment
PageRank pretty famous algorithm relies heavily Linalg
I know Linalg class touched going markov chain
I read sub I realize crappy university
Our linear algebra class basically calculate eigenspaces programming class even worse
Frankly amazing professor
Also class accelerated time cool shit like
Most computer graphic built simple linear algebra
QR factorization SVDs form matrix inversion important solving approximating system equation lot numerical method
I guess applied engineering implemented code
Likewise anything deal physic simulation probably linear algebra component
On hand normal program like word processor compiler browser based around discrete mathematics
You look matrix dealing graphic transforms draw screen
What type engineering used
My friend say take engineering I CS
Currently class right btw
Bit complicated I find interesting
I think I would put linear algebra two large class scientific computing computer graphic
I talk first one
Scientific computing simulation physic us linear algebra extensively
Here treat real world physical event say flow pipe simple kind system black box using mathematical model
The problem solving b A matrix x b vector
Linear algebra basically help solve kind simultaneous linear equation
However matrix involved huge million unknown instead two equation solving x
Classical linear algebra teach x solve exactly run problem physical system huge end finding solution actual one
This approximation approach used everywhere physic simulation flow pipe flying rocket space digital signal processing etc
I taking advanced numerical linear algebra right I opinion I live without anymore
D compiler Linear algebra used polyhedral scheduling
The general idea treat set possible loop variable value iteration vector geometric space lot common code transformation loop nest representable transformation performed iteration space
The determinant transformation also serve nice summary unrolling parallelization etc
Almost Machine Learning representing data vector performing linear transformation order perform Classification Regression etc
Can expand
Or maybe point another source talk basic fundamental without getting weed
deleted Many machine learning algorithm rebranded statistical method hence
I second ESL favorite textbook time
I used Machine Learning Courses one thick text comfortable lot applied mathematics many peer
Many gradient descent optimization method truly put Machine Learning
Anything else pretty vanilla computation
huh neat
I taking semester make lot sense
I guess part I understand part said solve derivative adjust accordingly
But made way sense I though would
I see would quickly get complicated least I understand basic
Here fairly bastardized way look
Say trying handwriting classification number
Your dataset contains handwriting image digit form
You represent image dimensional vector
All group one zone dimensional space point another zone dimensional space point even another zone dimensional space
Say write digit try figure
Well figure zone new digit likely associated
This task classification super well known task dozen
Here figure zone new digit
Classify zone maximized via via Gaussian Mixture Model
Classify closest via let K digit
Classify making wall aka zone see room new digit exists
Commonly known
You know tend look lot like
Well thats zone zero zone
You actually measure intermixed datapoints
This called intermixed chaos implies higher entropy
So good goal minimize entropy
That task
More apply function dimensionality expansion function minimize entropy make classification perform better
The problem already working high dimensional space risking computational time transform data higher dimension
This come play giving u value need assuming higher dimensional space without actually transforming data higher dimensional space
Do note different operating system kernel null space function

I could go
Great course I taking
It free audit Would also like know like dude
Can expand
deleted Might need make plural Hello In one course cool problem using Linear Algebra
For instance given light source blocker shadow cast blocker
Guess light source knowing blocker well shadow
This problem series
The series deal generating picture raw picture file sensor camera store image way actually observe light term vector space need change coordinate system one corresponds perceive light
In link bellow assignment mostly self explanatory
Problem series interesting part
All done python
Exactly I looking
Saved one start learning Python thanks
Computer Vision Artificial Intelligence field rely heavily matrix vector operation
Compiler optimization time performed geometric context iteration space modelled polyhedron
Smart tool transform loop reasoning polyhedron applying technique determine optimal transformation Another one cryptography whole family cryptosystems built problem basically linear algebra problem
Where I find
Closely related Not quite compsci odd use linear algebra analysing software suitability
The basic problem hard turn set preference weighting criterion
So people express pairwise preference one criterion another reverse oddly enough f A B necessarily equal B A turn matrix usually end principal eigenvector express consensus preference number subsidiary eigenvectors represent explorable disagreement
You also thing comparing package criterion
Raytracing basically linear algebra intuitive learning math easy get nice result shadow particularly easy simple vector math They algebraic transforms linear
A linear operator additive homogeneous Comp science student UAntwerpen
I got scientific programming semester us linear algebra solving problem
least square function interpolation data smoothing etc
Came opposite direction needed write projection calibration algorithm incredibly useful book supplied linalg algorithm Image processing compression deal heavily Linear Algebra well Signal processing modem using linear algebra pretty cool stuff
Graphics
You use matrix sort matrix manipulation advanced graphic class I assume real life lol The financial sector sometimes us linear optimization
I seen used rebalancing client portfolio specific asset allocation
For something quite different example thread Static verification program
You consider vector space composed input variable called abstract domain
Invariants program subset abstract domain instruction transformation set
Usually chose abstraction make easier compute interval octagon polyhedron
It get technical quite quickly academic field particularly present France concrete real world application
I little work field resulted
Use site constitutes acceptance
reddit All right reserved
REDDIT ALIEN Logo registered trademark reddit inc

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
I reading help understand computer science material mainly machine learning I concerned lot information useful CS
For example knowing efficiently solve system linear equation seem useful unless trying program new equation solver
Additionally book talked lot span linear dependence independence matrix inverse relationship I ca think application CS
So part linear algebra used CS
The part mentioned basic concept linear algebra
You understand advanced concept say eigenvalue eigenvectors first understanding basic concept
There shortcut mathematics
Without intuitive understanding concept span linear independence wo get far linear algebra
Some algorithm work full rank matrix Do know mean
Do know make matrix full rank
How handle
You clue know linear independence
The Gaussian elimination algorithm used solve linear equation actually numerically unstable implemented improperly something might worry case
Without understanding algorithm wo know problem come whether anything level algorithm solving linear equation level coming correct linear equation solve
In short lazy take faith thing useful
Linear algebra sometimes extremely useful powerful graph algorithm
With efficiently count number spanning tree graph need understand eigenvalue
A challenging application need even firmer grasp linear algebra computing number perfect matchings planar graph polynomial time
There many exciting example us linear algebra
The algorithm arise counting problem like two example I gave
For instance also compute
One well known us linear algebra Google The PageRank value entry dominant left eigenvector modified adjacency matrix
There plenty matrix algebra based algorithm technique
And great
Principal component analysis example fairly useful applied linear algebra
The said Fourier analysis also root orthogonality inner product
So direct application
even importantly taking linear algebra class valuable teach think certain way
Most good linear algebra class place emphasis generalisation logic proof
Is something true general certain specific common case
How certain
Being able think prove assumption good help keep making bad assumption writing code generalise way assuming
It also help think generalise thing might otherwise difficult generalise let solve bigger problem
In summary good keep mind linear algebra good weight lifting part brain useful computer science
Almost anything involving computer graphic animation computer vision image processing scientific computing simulation physical phenomenon involve extensive use vector matrix linear algebra simple thing like representing spatial transformation orientation complex algorithm
These thing used domain supercomputing field core coolest apps desktop phone everywhere else video game computational photography car
Linear algebra everywhere
By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

Although broadly defined computer science basically practical scientific approach computation well application
More specifically computer science study structure mechanization expression process used store communicate process information encoded within bit computer memory
An individual work computer scientist typically specialize computation theory well computational system design
As Dawn Rosenberg McKay point important article job outlook sector high Bureau Labor Statistics predicting faster average growth career within field
Individuals want know whether obtaining computer science degree necessitate completion lot math course know answer generally yes
Thus educational program unique requirement student typically expect take plethora math course throughout undergraduate career
Some math course required typically include Calculus With Analytic Geometry I Calculus Analytic Geometry II Matrices Statistical Analysis I Elementary Probability Elementary Probability Additionally student often required complete around hour elective
In must select list elective likely include math course following Introduction Analysis I Ordinary Differential Equations Fourier Series Partial Differential Equations Introduction Operations Research Linear Algebra Discrete Models I Linear Algebra Discrete Models II Basic Abstract Algebra Yet another reality prospective computer science student recognize computer science course required take include mathematical component
For example required computer science course student might take include Discrete Mathematics Computer Science Design Analysis Algorithms Formal Languages Applications In case individual passionate pursuing career field computer science may find confident mathematical ability
However preclude exceling student within chosen vocational field
In order ensure one pass math course required obtain computer science degree student several option Tutoring service generally attained either one learning institution conducting internet search using phonebook find local tutor
Oftentimes professor willing work student take initiative master difficult material asking assistance
Developing maintaining positive relationship professor respectful showing class time first step make happen
Once established good working relationship professor feel comfortable approaching question regarding material find challenging
If thinking pursuing career computer science know personally professionally rewarding
Now obtained answer important question Does computer science degree require lot math course prepare excel required math course
For information computer science degree please see You must post comment

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
I software practitioner I writing survey algebraic structure personal research trying produce example structure used theoretical computer science lesser degree computer science
Under group theory I come across syntactic monoids formal language trace history monoids computing
From ring theory standpoint I come across semiring framework graph processing semiring based parsing
I yet find us algebraic structure module theory research would like
I assuming example I looking right place find
What example algebraic structure domain listed commonly found theoretical computer science computer science
Alternatively journal resource recommend might cover topic
My impression large traditional algebra rather specific use Computer Science
So Computer Scientists either use weaker hence general structure generalize traditional structure fit need
We also use category theory mathematician think part algebra see
We find regimentation traditional mathematics algebra topology separate branch inconvenient even pointless algebra generally whereas topology chance dealing aspect
So structure used Computer Science algebra topology mixed
In fact I would say tend towards topology algebra
Regimentation reasoning algebra logic another pointless division point view algebra deal equational property whereas logic deal kind property well
Coming back question semigroups monoids used quite intensely automaton theory
Eilenberg written second almost entirely algebra
I told planning four volume age allow project finished
Pin modernized version lot content
Automata monoid module also called monoid action act right level generality Computer Science
Traditional ring module probably specific
Lattice theory major force development denotational semantics
Topology mixed lattice theory Computer Scientists jointly mathematician developed generalized
I would say domain theory Computer Scientists mathematics traditional mathematics knowledge
Universal algebra used defining
Having gotten Computer Scientists immediately found need deal general property conditional equation also called equational Horn clause logic property still using idea universal algebra
As would note algebra merges model theory
Category theory foundation type theory
As Computer Scientists keep inventing new structure deal various computational phenomenon category theory comforting framework place idea
We also use structure enabled category theory existence traditional mathematics functor category
Also algebra come back picture categorical point view use
duals algebra also find lot application
So application algebra Computer Science kind algebra found traditional algebra textbook
There concrete sense category theory algebra
fundamental structure algebra
It consists binary multiplication operator associative identity
Category theory generalizes associating type element monoid X Y
You multiply element type match X Y b Y Z ab X Z
For example n n matrix multiplication operation making monoid
However n matrix n could different form category
Monoids thus special case category single type
Rings special case additive category single type
Modules special case functors source target category single type
So
Category theory whose type make infinitely applicable traditional algebra
My favorite application group theory TCS Barrington Theorem
You find Barrington exposition comment section post
Groups ring field module everywhere computational topology
See especially Carlsson Zomorodian work ex multidimensional persistent homology graded module principal ideal domain
Here nice practical use
To compute connectivity graph author give algorithm assigns random vector entry drawn finite field edge construct similar vector edge graph taking random linear combination finally discover connectivity computing rank resulting vector assigned Lattices fixed point foundation program analysis verification
Though advanced result lattice theory rarely used concerned algorithmic issue computing approximating fixed point research lattice theory different focus connection topology duality theory etc
The initial abstract interpretation paper use basic lattice theory
The work Roberto Giacobazzi collaborator us advanced result
In distributed computing celebrated family impossibility result derived using method algebraic topology See work Maurice Herlihy Nir Shavit
Edit See
Universal algebra important tool studying complexity constraint satisfaction problem
For example state roughly speaking constraint satisfaction problem finite domain either solvable
Note Ladner theorem problem NP P unless P NP conjecture say CSPs special dichotomy larger complexity class
It also would provide explanation problem encounter practice classified either Dichotomies proven several special case
binary domain CSPs Schaefer ternary domain CSPs Bulatov homomorphism undirected graph Hell Nesetril
But general case fairly open
One major line attack universal algebra
Very roughly I definitely expert
one defines polymorphism CSP function domain CSP leaf satisfied constraint satisfied applied variable
The set polymorphism CSP sense capture complexity
For example CSP A admits polymorphism CSP B A polynomial time reducible B
The set polymorphism form algebra whose structure seems helpful desining reduction
For example polymorphism algebra CSP idempotent admits unary type CSP
Idempotence simplifying assumption made le without loss generality
Showing CSP whose algebra idempotent admit unary type solved polynomial time prove Dichotomy Conjecture
See survey Bulatov
Here two application different part TCS
Semirings used modelling annotation database especially needed provenance often also valuation structure valued constraint satisfaction
In application individual value must combined together way lead naturally semiring structure associativity one semiring operation distributing
Regarding query module neither monoid inverse application general
Rings module algebraic variety used error correction generally coding theory
Specifically abstract error correcting scheme code generalizes code Chinese Remainder code
The scheme basically take message come ring R encode taking residue modulo many different ideal Under certain assumption R one prove make decent error correcting code
In world list decoding recent Guruswami give method list decoding folded code nice property candidate message lie affine subspace message space
One construct set almost large whole space small intersection every affine subspace
If one restricts message come subspace evasive set inside message space Guruswami scheme give algorithm guarantee nice list size
So far explicit construction subspace evasive set given Dvir Lovett upcoming STOC paper construct set taking specific affine variety taking Cartesian product
Check basically significant generalization underlies lot automaton formal language theory I say pigeonhole principle simplest case Ramsey Theory
It basically say even highly disordered structure turn necessarily contain lot order sufficiently large
For small example beyond pigeonhole principle note take six people either three mutually know three mutually know
look like nice place start connection computer science google
It combinatoric algebraic basic nature many application algebra theoretical CS
And also check story inventor truly remarkable polymath made fundamental even revolutionary contribution economics philosophy well mathematics many unappreciated much later dying age think
In fact Ramsey original theorem basis Ramsey Theory mere lemma paper bigger aim mathematical logic
Algebra algebraic geometry pretty big role play cryptography elliptic curve group lattice course Z basis nearly modern cryptographic work
Analyzing problem lot symmetry facilitated using group theory
An example would find algorithm thing like rubic cube
Although I know detail I sure proving required serious group theoretical pruning
In different context practical solver graph isomorphism problem like use automorphism group graph
By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

The following along description

