Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
I come electronics background
I know three type implementation multithreading see issue instruction different thread every cycle
switch issue instruction another thread current executing thread cause long latency event like page fault etc
issue multiple instruction multiple thread one cycle
The processor must superscalar
Does mean SMT extension multithreading multithreading suitable single core processor
What exact difference SMT approach
Hennessy Patterson Computer Architecture A Quantitative Approach use term multithreading refer running one thread single core
Their distinction simultaneous involves different approach thread share issue logic logic move instruction decode pipeline stage execute pipeline stage
In multithreading issue stage issue instruction one thread many cycle dozen hundred switch issuing another thread first thread get cache miss operation
In multithreading issue stage issue instruction different thread cycle instruction issued together cycle must come thread
In simultaneous multithreading issue stage issue instruction different thread cycle
The restriction lifted instruction issued together cycle must come thread
The distinction multithreading simultaneous multithreading matter machine simultaneously issue two instruction
multithreading multithreading two approach implemented even processor
The idea different thread single core
multithreading switch thread every often multithreading transfer control executing thread waiting operation resolve
Simultaneous multithreading implemented multicore system executes different thread different core different processing unit core superscalarity
Hopefully I explained concept clearly enough answer question
A physical processor made number different resource including architecture state general purpose CPU register interrupt controller register cache bus execution unit branch prediction logic
However order define thread architecture state required
A logical processor thus created duplicating architecture space
The execution resource shared among different logical processor
This technique known SMT
See Intel
By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
I come electronics background
I know three type implementation multithreading see issue instruction different thread every cycle
switch issue instruction another thread current executing thread cause long latency event like page fault etc
issue multiple instruction multiple thread one cycle
The processor must superscalar
Does mean SMT extension multithreading multithreading suitable single core processor
What exact difference SMT approach
Hennessy Patterson Computer Architecture A Quantitative Approach use term multithreading refer running one thread single core
Their distinction simultaneous involves different approach thread share issue logic logic move instruction decode pipeline stage execute pipeline stage
In multithreading issue stage issue instruction one thread many cycle dozen hundred switch issuing another thread first thread get cache miss operation
In multithreading issue stage issue instruction different thread cycle instruction issued together cycle must come thread
In simultaneous multithreading issue stage issue instruction different thread cycle
The restriction lifted instruction issued together cycle must come thread
The distinction multithreading simultaneous multithreading matter machine simultaneously issue two instruction
multithreading multithreading two approach implemented even processor
The idea different thread single core
multithreading switch thread every often multithreading transfer control executing thread waiting operation resolve
Simultaneous multithreading implemented multicore system executes different thread different core different processing unit core superscalarity
Hopefully I explained concept clearly enough answer question
A physical processor made number different resource including architecture state general purpose CPU register interrupt controller register cache bus execution unit branch prediction logic
However order define thread architecture state required
A logical processor thus created duplicating architecture space
The execution resource shared among different logical processor
This technique known SMT
See Intel
By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

In execution smallest sequence programmed instruction managed independently typically part
The implementation thread differs operating system case thread component process
Multiple thread exist within one process executing sharing resource different process share resource
In particular thread process share executable code value variable given time
Systems single processor generally implement multithreading CPU switch different
This generally happens often rapidly enough user perceive thread task running parallel
On system multiple thread execute every processor core executing separate thread simultaneously processor core separate software thread also executed concurrently separate hardware thread
Threads made early appearance MVT context called task
The term thread attributed
many modern operating system directly support multiprocessor threading allows programmer manipulate thread exposing required functionality interface
Some threading implementation called whereas LWP specific type kernel thread share state information
Furthermore program threading timer signal method interrupt execution performing sort time slicing
Threads differ traditional operating system Systems said thread process operating system great difference except cost switch architecture notably result TLB flush
In one time
The opposite multithreading
While suggested term misleading term widely accepted within community
Multithreading mainly found multitasking operating system
Multithreading widespread programming execution model allows multiple thread exist within context one process
These thread share process resource able execute independently
The threaded programming model provides developer useful abstraction concurrent execution
Multithreading also applied one process enable system
Multithreaded application following advantage Multithreading following drawback Operating system schedule thread either cooperatively
On widely used approach finer grained control execution time via
However preemptive scheduling may context switch thread moment unanticipated programmer therefore causing
In contrast relies thread relinquish control execution thus ensuring thread
This create problem cooperatively multitasked thread waiting thread yielding control execution intensive computation
Until early desktop computer one CPU support although thread still used computer switching thread generally still quicker
In added support processor name introduced processor introduced processor
Processors higher requirement behavior might support multithreading decreasing time perhaps allocating dedicated thread instead common register file
Scheduling done kernel level user level multitasking done preemptively cooperatively
This yield variety related concept
At kernel level contains one share process resource memory file handle process unit resource thread unit scheduling execution
Kernel scheduling typically uniformly done preemptively le commonly cooperatively
At user level process schedule multiple thread execution
If share data Erlang usually analogously called process share data usually called particularly preemptively scheduled
Cooperatively scheduled user thread known different process may schedule user thread differently
User thread may executed kernel thread various way
The term variously refers user thread kernel mechanism scheduling user thread onto kernel thread
A heavyweight unit kernel scheduling creating destroying switching process relatively expensive
Processes allocated operating system
Resources include memory code data socket device handle window
Processes share address space file resource except explicit method inheriting file handle shared memory segment mapping file shared way see
Creating destroying process relatively expensive resource must acquired released
Processes typically preemptively multitasked process switching relatively expensive beyond basic cost due issue cache flushing
A lightweight unit kernel scheduling
At least one kernel thread exists within process
If multiple kernel thread exist within process share memory file resource
Kernel thread preemptively multitasked operating system process preemptive
Kernel thread resource except copy including thus relatively cheap create destroy
Thread switching also relatively cheap requires context switch saving restoring register stack pointer change virtual memory thus leaving TLB valid
The kernel assign one thread logical core system processor split multiple logical core support multithreading support one logical core per physical core swap thread get blocked
However kernel thread take much longer user thread swapped
Threads sometimes implemented library thus called
The kernel unaware managed scheduled
Some implementation base user thread top several kernel thread benefit machine
In article term thread without kernel user qualifier default referring kernel thread
User thread implemented also called
User thread generally fast create manage take advantage multithreading multiprocessing get blocked associated kernel thread get blocked even user thread ready run
even lighter unit scheduling running fiber must explicitly allow another fiber run make implementation much easier kernel
A fiber scheduled run thread process
This permit application gain performance improvement managing scheduling instead relying kernel scheduler may tuned application
Parallel programming environment typically implement task fiber
Closely related fiber distinction coroutines construct fiber construct
Threads process share address space
This allows concurrently running code tightly conveniently exchange data without overhead complexity
When shared thread however even simple data structure become prone require one CPU instruction update two thread may end attempting update data structure time find unexpectedly changing underfoot
Bugs caused race condition difficult reproduce isolate
To prevent threading APIs offer data structure concurrent access
On uniprocessor system thread running locked mutex must sleep hence trigger context switch
On system thread may instead poll mutex
Both may sap performance force processor SMP system contend memory bus especially locking fine
Although thread seem small step sequential computation fact represent huge step
They discard essential appealing property sequential computation understandability predictability determinism
Threads model computation wildly job programmer becomes one pruning nondeterminism
User thread fiber implementation typically entirely
As result context switching user thread fiber within process extremely efficient require interaction kernel context switch performed locally saving CPU register used currently executing user thread fiber loading register required user thread fiber executed
Since scheduling occurs userspace scheduling policy easily tailored requirement program workload
However use blocking system call user thread opposed kernel thread fiber problematic
If user thread fiber performs system call block user thread fiber process unable run system call return
A typical example problem performing program written perform synchronously
When operation initiated system call made return operation completed
In intervening period entire process blocked kernel run starves user thread fiber process executing
A common solution problem providing API implement synchronous interface using internally scheduling another user thread fiber operation progress
Similar solution provided blocking system call
Alternatively program written avoid use synchronous blocking system call
implemented LWPs
implement LWPs kernel thread model
SunOS SunOS well NetBSD NetBSD implemented two level model multiplexing one user level thread kernel thread M N model
SunOS later well NetBSD eliminated user thread support returning model
FreeBSD implemented M N model
FreeBSD supported M N user could choose one used given program using
Starting FreeBSD became default
FreeBSD longer support M N model
The use kernel thread simplifies user code moving complex aspect threading kernel
The program need schedule thread explicitly yield processor
User code written familiar procedural style including call blocking APIs without starving thread
However kernel threading may force context switch thread time thus expose race hazard concurrency would otherwise lie latent
On SMP system exacerbated kernel thread may literally execute separate processor parallel
Threads created user correspondence schedulable entity kernel simplest possible threading implementation
used approach start implement approach via older
This approach also used
An model implies thread map one scheduled entity kernel knowledge application thread
With approach context switching done quickly addition implemented even simple kernel support threading
One major drawback however benefit hardware acceleration processor computer never one thread scheduled time
For example If one thread need execute request whole process blocked threading advantage used
The us threading
M N map M number application thread onto N number kernel entity virtual processor
This compromise threading
In general M N threading system complex implement either kernel user thread change kernel code required
In M N implementation threading library responsible scheduling user thread available schedulable entity make context switching thread fast avoids system call
However increase complexity likelihood well suboptimal scheduling without extensive expensive coordination userland scheduler kernel scheduler
Fibers implemented without operating system support although operating system library provide explicit support
IBM F included support multithreading called late continued Optimizing Compiler later version
The IBM Enterprise compiler introduced new model thread API
Neither version part standard
Many programming language support threading capacity
Many implementation support threading provide access native threading APIs operating system
Some usually programming language language expose threading developer abstracting platform specific difference threading implementation runtime
Several programming language language extension also try abstract concept concurrency threading developer fully MPI
Some language designed sequential parallelism instead especially using GPUs without requiring concurrency thread
A interpreted programming language implementation Ruby Python support threading concurrency parallel execution thread due GIL
The GIL mutual exclusion lock held interpreter prevent interpreter simultaneously interpreting application code two thread effectively limit parallelism multiple core system
This limit performance mostly thread require processor much one
Other implementation interpreted programming language using Thread extension avoid GIL limit using Apartment model data code must explicitly shared thread
In Tcl thread one interpreter
different threading model support extremely large number thread modeling hardware
A standardized interface thread implementation Pthreads set library call
OS vendor free implement interface desired application developer able use interface across multiple platform
Most platform including Linux support Pthreads
Microsoft Windows set thread function interface multithreading like
Java provides yet another standardized interface host operating system using library
Multithreading library provide function call create new thread take function parameter
A concurrent thread created start running passed function end function return
The thread library also offer synchronization function make possible implement free multithreading function using condition variable synchronization primitive
Another paradigm thread usage set number thread created startup wait task assigned
When new task arrives wake completes task go back waiting
This avoids relatively expensive thread creation destruction function every task performed take thread management application developer hand leaf library operating system better suited optimize thread management
For example framework like
In programming model designed array thread run parallel using ID find data memory
In essence application must designed thread performs operation different segment memory operate parallel use GPU architecture

In set stored storage location denoted word copy value variable
In assignment statement expression fundamental construct
Today commonly used notation basic operation come originally Superplan popularized followed originally popularised although many notation use
In language symbol used regarded meaning assignment value others define assignment statement meaning used expression
Assignments typically allow variable hold different value different time
However language primarily allow kind destructive reassignment might imply change state
The purpose enforce
function depend state variable produce result given set parametric input point time
Modern program language also often use similar strategy although le strict certain part order reduce complexity normally conjunction complementing methodology
An assignment operation process different value associated particular variable name time pass
The program model operates changing state using successive assignment statement
Primitives imperative programming language rely assignment
At lowest level assignment implemented using
container value
It possible put value variable later replace new one
An assignment operation modifies current state executing program
Consequently assignment dependent concept
In assignment Example Assuming numeric variable assignment mean content variable doubled execution statement
An example segment code In sample variable first declared int assigned value
Notice declaration assignment occur statement
In second line declared without assignment
In third line reassigned value
Finally assigned value
For assignment operation necessary value valid represents modifiable entity valid modifiable
In language typically one necessary declare variable prior assigning value
Any assignment change existing value
disallowed purely functional language
In assignment discouraged favor single assignment also called
Single assignment example differs assignment described article done usually variable created subsequent reassignment allowed
An evaluation expression change observable state machine produce value input
Imperative assignment introduce side effect destroying making old value unavailable substituting new one referred reason similar
Single assignment form assignment available purely functional language variable sense imperative programming language rather named constant value possibly compound nature element progressively defined
Purely functional language provide opportunity avoiding sequential one step time execution since value independent
Impure functional language provide single assignment well true assignment though true assignment typically used le frequency imperative programming language
For example Scheme single assignment true assignment used variable specialized primitive provided destructive update inside list vector string etc
In OCaml single assignment allowed variable via syntax however destructive update used element array string separate operator well field record object explicitly declared meaning capable changed initial declaration programmer
Functional programming language use single assignment include data structure var accepts multiple assignment value equal contrast Haskell dataflow variable cell data structure like list symbol vals
code considered explicit sense named variable explicitly unassigned state set exactly
In Haskell contrast unassigned variable every variable thought implicitly set value rather computational object produce value created
In programming language assignment statement return value others
In example assignment statement return assigned value allowing idiom assignment statement return value assigned
In statement return value function used control loop assigning value variable
In programming language example return value assignment undefined idiom invalid
In variable assignment operation similar assignment like assigning field array field mutable data structure usually evaluate represented
This type one possible value therefore containing information
It typically type expression evaluated purely side effect
Certain use pattern common thus often special syntax support
These primarily reduce redundancy source code also simplify compilation clarifying programmer intent easing analysis source code
The case assigned value depends previous one common many imperative language notably majority descendant provide special operator called like instead written
Beyond syntactic sugar simplifies compilation since make clear modification variable possible
A statement like called value assigned multiple variable
Chained assignment often used initialize multiple variable Not programming language support chained assignment
Chained assignment equivalent sequence assignment evaluation strategy differs language
For simple chained assignment like initializing multiple variable evaluation strategy matter target assignment connected way evaluation strategy affect result
In programming language example chained assignment supported assignment expression value
In case chain assignment implemented assignment happen
For example equivalent
In also available value class type declaring appropriate return type assignment operator
In assignment statement expression thus value
Instead chained assignment series statement multiple target single expression
The assignment executed evaluates expression assigns result leftmost target assigns result next target using new value
This essentially equivalent though actual variable produced temporary value
Some programming language since allow several variable assigned parallel syntax like simultaneously assigns
This often known introduced name sometimes called though confusing used single assignment opposite
If side assignment single variable
array structure feature called The list unpacked assigned
More interestingly swap value
In language without parallel assignment would written use temporary variable since leaf original value
Some language Go Python combine parallel assignment tuples automatic allow multiple return value single function Python example This provides alternative use returning multiple value function
This date CLU helped popularize parallel assignment generally
In C similar parallel assignment allowing multiple assignment occur within single statement writing instead
This primarily used replaced parallel assignment language Go
However code ensure perfect simultaneity since right side following code evaluated left side
In language Python assign two variable concurrently using initial value compute new b
The use equal sign assignment operator frequently criticized due conflict equal comparison equality
This result confusion novice writing code confusion even experienced programmer reading code
The use equal assignment date back language designed particularly popularized Fortran A notorious example bad idea choice equal sign denote assignment
It go back Fortran blindly copied army language designer
Why bad idea
Because overthrow century old tradition let denote comparison equality predicate either true false
But Fortran made mean assignment enforcing equality
In case operand unequal footing The left operand variable made equal right operand expression
x mean thing x
Beginning programmer sometimes confuse assignment equality mean mathematics used assignment many language
But assignment alters value variable equality testing test whether two expression value
In language single equal sign used assignment operator equality relational operator context determining meant
Other language use different symbol two operator
For example The similarity two symbol lead error programmer forgets form appropriate mistypes intended
This common programming problem language C including one famous attempt backdoor Linux kernel assignment operator also return value assigned way function return value validly nested inside expression
If intention compare two value statement instance assignment quite likely return value interpretable Boolean true case clause executed leading program behave unexpectedly
Some language processor detect situation warn programmer potential error
The two common representation copying assignment
Both form may semantically denote either assignment assignment also value depending language usage
Other possibility include left arrow keyword though rarer variant Mathematical assignment generally depicted
Some platform put expression left variable right Some language Tcl uniformly use prefix postfix syntax statement including assignment

Computer simulation pioneered scientific tool meteorology nuclear physic period directly following World War II since become indispensable growing number discipline
The list science make extensive use computer simulation grown include astrophysics particle physic material science engineering fluid mechanic climate science evolutionary biology ecology economics decision theory medicine sociology epidemiology many others
There even discipline chaos theory complexity theory whose existence emerged alongside development computational model study
After slow start philosopher science begun devote attention role computer simulation science
Several area philosophical interest computer simulation emerged What structure epistemology computer simulation
What relationship computer simulation experiment
Does computer simulation raise issue philosophy science fully covered recent work model generally
What computer simulation teach u emergence
About structure scientific theory
About role fiction scientific modeling
No single definition computer simulation appropriate
In first place term used narrow broad sense
In second place one might want understand term one point view
In narrowest sense computer simulation program run computer us method explore approximate behavior mathematical model
Usually model system although system question might imaginary hypothetical one
Such computer program
One run program computer computer simulation system
The algorithm take input specification state value variable time It calculates system state time
From value characterizing second state calculates system state time
When run computer algorithm thus produce numerical picture evolution system state conceptualized model
This sequence value model variable saved large collection data often viewed computer screen using method visualization
Often certainly always method visualization designed output scientific simulation appears measuring system interest
Sometimes method computer simulation used model interest contains continuous differential equation specify continuous rate change time solved principle perhaps practice
This underwrites spirit following definition given Paul Humphreys method exploring property mathematical model analytic method available
But even narrow definition one read carefully taken suggest simulation used analytically unsolvable equation model
Computer simulation often used either original model contains discrete directly implemented algorithm suitable original model consists something better described
In former case equation discretized turning equation describe continuous rate change discrete equation emphasized although common speak simulation solving equation discretization best find something approximates solution continuous equation desired degree accuracy
Finally speaking computer simulation narrowest sense speaking particular implementation algorithm particular digital computer written particular language using particular compiler etc
There case different result obtained result variation particular
More broadly think computer simulation comprehensive method studying system
In broader sense term refers entire process
This process includes choosing model finding way implementing model form run computer calculating output algorithm visualizing studying resultant data
The method includes entire make inference target system one try well procedure used sanction inference
This le definition computer simulation Winsberg
Successful simulation study compute number
They make use variety technique draw inference number
Simulations make creative use calculational technique motivated
As unlike simple computation carried computer result simulation automatically reliable
Much effort expertise go deciding simulation result reliable When philosopher science write computer simulation make claim epistemological methodological property computer simulation usually mean term understood broad sense computer simulation study
Both definition take computer simulation fundamentally using computer solve approximately solve mathematical equation model meant represent real hypothetical
Another approach try define simulation independently notion computer simulation define computer simulation compositionally simulation carried programmed digital computer
On approach simulation system believed hoped dynamical behavior similar enough system former studied learn latter
For example study object believe sufficiently dynamically similar basin fluid u learn basin fluid studying provides simulation basin fluid
This line definition simulation find Hartmann something imitates one process another process
In definition term process refers solely object system whose state change time
Hughes objected Hartmann definition ruled simulation imitate structure rather dynamic
Humphreys revised definition simulation accord remark Hartmann Hughes follows Note Humphreys defining computer simulation simulation generally spirit defining compositional term
It noted Humphreys definition make simulation success term seems unfortunate
A better definition would one like one last section included word like believed hoped address issue
In philosophical discussion computer simulation useful concept one defined
The exception explicitly goal discussion understand computer simulation example simulation generally see section
Examples simulation computer simulation include famous physical model San Francisco Bay Huggins Schultz
This working hydraulic scale model San Francisco Bay Joaquin River Delta System built Army Corps engineer study possible engineering intervention Bay
Another nice example discussed extensively Dardashti et al
forthcoming use acoustic dumb hole made condensate study behavior Black Holes
Physicist Bill Unruh noted certain fluid something akin black hole would arise region fluid moving fast wave would move faster speed sound something order escape Unruh
Such region would effect sonic event horizon
Unruh called physical setup dumb hole dumb mute proposed could studied order learn thing know black hole
For time proposal viewed nothing clever idea physicist recently come realize using condensate actually build study dumb hole laboratory
It clear think setup simulation dumb hole simulates black hole
Instead finding computer program simulate black hole physicist find fluid dynamical setup believe good model model fundamental mathematical similarity model system interest
They observe behavior fluid setup laboratory order make inference black hole
The point definition simulation section try understand sense computer simulation sort activity specie genus
We might better situation understand simulation sense happens run computer overlap simulation sense
We come back section
Barberousse et al
however critical analogy
They point computer simulation work way Unruh simulation work
It case computer material object target system follow differential equation
A good reference simulation computer simulation Trenholme
Two type computer simulation often distinguished
Computer Simulations type used three different general sort purpose prediction pointwise understanding exploratory heuristic purpose
simulation commonly used physical science science governing theory guide construction mathematical model based differential equation
I use term equation based refer simulation based kind global equation associate physical opposed rule evolution discussed next section
Equation based simulation either n many discrete body set differential equation governing interaction set equation governing time evolution continuous medium field
An example former simulation galaxy formation gravitational interaction finite collection discrete body discretized time space
An example latter simulation fluid meteorological system like severe storm
Here system treated continuous field representing distribution relevant variable space discritized space updated discrete interval time
simulation common social behavioral science though also find discipline artificial life epidemiology ecology discipline networked interaction many individual studied
simulation similar simulation represent behavior discrete individual
But unlike simulation global differential equation govern motion individual
Rather simulation behavior individual dictated local rule To give one example famous groundbreaking simulation Thomas Schelling model The agent simulation individual lived chessboard
The individual divided two group society
two different race boy girl smoker etc
Each square board represented house one person per house
An individual happy certain percent neighbor group
Happy agent stay unhappy agent move free location
Schelling found board quickly evolved strongly segregated location pattern agent happiness rule specified segregation heavily favored
Surprisingly however also found initially integrated board tipped full segregation even agent happiness rule expressed mild preference neighbor type
In section discussed model based particle method based field method
But simulation model hybrid different kind modeling method
Multiscale simulation model particular couple together modeling element different scale description
A good example would model simulates dynamic bulk matter treating material field undergoing stress strain relatively coarse level description zoom particular region material important small scale effect taking place model smaller region relatively modeling method
Such method might rely molecular dynamic quantum mechanic description matter offered treating material field
Multiscale simulation method broken serial multiscale parallel multiscale method
The traditional method serial modeling
The idea choose region simulate lower level description summarize result set parameter digestible higher level model pas part algorithm calculating higher level
Serial multiscale method effective different scale strongly coupled together
When different scale interact strongly produce observed behavior required approach simulates region simultaneously
This called parallel multiscale modeling
Parallel multiscale modeling foundation nearly ubiquitous simulation method called modeling
modelingrefers representation important physical process occur adequately resolved grid size particular simulation
Remember many simulation discretize continuous equation relatively arbitrary finite grid In study turbulence fluid example common practical strategy calculation account missing fall inside grid cell
This done adding motion characterizes transport dissipation energy feature occurs small scale captured grid
In climate science kindred discipline modeling called This refers method replacing complex physically represented simple mathematical description
This opposed flow calculated grid level accordance basic theory
It called parameterization various needed drive highly approximative algorithm compute value
Examples parameterization climate simulation include descent rate raindrop rate atmospheric radiative transfer rate cloud formation
For example average cloudiness km grid box cleanly related average humidity box
Nonetheless average humidity increase average cloudiness also could parameter linking average cloudiness average humidity inside grid box
Even though parameterizations cloud formation sophisticated basic idea well illustrated example
The use modeling method simulation important consequence understanding structure epistemology simulation
This discussed greater detail section
modelling method contrasted another kind parallel multiscale model algorithm theoretically principled motivated theory different level description
In example simulation bulk matter mentioned example algorithm driving smaller level description built
The algorithm driving smaller level actually theoretically principled higher level sense physic fundamental quantum mechanic molecular dynamic continuum mechanic
These kind multiscale model word cobble together resource theory different level description
So provide interesting example provoke thinking intertheoretic relationship challenge view inconsistent set law model
In scientific literature another large class computer simulation called Monte Carlo MC Simulations
MC simulation computer algorithm use randomness calculate property mathematical model randomness algorithm feature target model
A nice example use random algorithm calculate value π
If draw unit square piece paper inscribe circle randomly drop collection object inside square proportion object land circle would roughly equal
A computer simulation simulated procedure like would called MC simulation calculating π
Many philosopher science deviated ordinary scientific language shied away thinking MC simulation genuine simulation
Weirich offer following reasoning The Monte Carlo approach mimetic purpose It imitates deterministic system order serve surrogate investigated stead order offer alternative computation deterministic system property
This show MC simulation fit definition aptly
On hand divide philosopher ordinary language perhaps squared noting MC simulation simulate imaginary process might used calculating something relevant studying process
Suppose I modeling planetary orbit calculation I need know value π
If I MC simulation mentioned last paragraph I simulating process randomly dropping object square I modeling planetary orbit
This sense MC simulation simulation simulation system used study
However Beisbart Norton Other Internet Resources point MC simulation viz
use MC technique solve stochastic dynamical equation referring physical system fact simulation system study
There three general category purpose computer simulation put
Simulations used heuristic purpose purpose predicting data generating understanding data already
Under category heuristic model simulation subdivided used communicate knowledge others used represent information
When Watson Crick played tin plate wire latter first former showed result others
When army corp built model San Francisco Bay convince voting population particular intervention dangerous using kind heuristic purpose
Computer simulation used kind explore feature possible representational structure communicate knowledge others
For example computer simulation natural process bacterial reproduction tectonic shifting chemical reaction evolution used classroom setting help student visualize hidden structure phenomenon process impractical impossible costly illustrate wet laboratory setting
Another broad class purpose computer simulation put telling u expect system real world behave particular set circumstance
Loosely speaking computer simulation used prediction
We use model predict future retrodict past use make precise prediction loose general one
With regard relative precision prediction make simulation slightly finegrained taxonomy
There Point prediction Where planet Mars October
b Qualitative global systemic prediction Is orbit planet stable
What scaling law emerges kind system
What fractal dimension attractor system kind
c Range prediction It likely global mean surface temperature increase degree C year highly likely sea level rise least two foot implausible thermohaline shut next year
Finally simulation used understand system behavior
If already data telling u system behaves use computer simulation answer question event could possibly occurred event actually occur
When thinking topic next section epistemology computer simulation also keep mind procedure needed sanction result simulation often depend large part kind purpose purpose simulation put
As computer simulation method gained importance discipline issue trustworthiness generating new knowledge grown especially simulation expected counted epistemic peer experiment traditional analytic theoretical method
The relevant question always whether result particular computer simulation accurate enough intended purpose
If simulation used weather predict variable interested degree accuracy sufficient meet need consumer
If simulation atmosphere Midwestern plain used structure severe thunderstorm confidence structure one play explanatory role account storm sometimes split two sometimes form depicted accurately enough support confidence explanation
If simulation used engineering design prediction made simulation reliable enough sanction particular choice design parameter sanction belief particular design airplane wing function
Assuming answer question sometimes yes
kind inference least sometimes justified central philosophical question justifies
More generally claim simulation good enough intended purpose evaluated
These central question epistemology computer simulation EOCS
Given confirmation theory one traditional topic philosophy science might seem obvious latter would resource begin approach question
Winsberg however argued come topic related credentialing knowledge claim philosophy science traditionally concerned justification theory application
Most simulation hand extent make use theory tends make use theory
EOCS word rarely testing basic theory may go simulation often establishing credibility hypothesis part result application theory
Winsberg argued unlike epistemological issue take center stage traditional confirmation theory adequate EOCS must meet three condition
In particular must take account fact knowledge produced computer simulation result inference

EOCS must reflect fact large number case accepted scientific theory starting point construction computer simulation model play important role justification inference simulation result conclusion target system
The word downward meant signal fact unlike scientific inference traditionally interested philosopher move observation instance theory inference drawn part high theory particular feature phenomenon

EOCS must take account simulation result nevertheless typically depend theory many model ingredient resource well including parameterizations discussed numerical solution method mathematical trick approximation idealization outright fiction ad hoc assumption function library compiler computer hardware perhaps importantly blood sweat tear much trial error

EOCS must take account autonomy knowledge produced simulation sense knowledge produced simulation sanctioned entirely comparison observation
Simulations usually employed study phenomenon data sparse
In circumstance simulation meant replace experiment observation source data world relevant experiment observation reach principled practical ethical reason
Parker forthcoming made point usefulness condition somewhat compromised fact overly focused simulation physical science discipline simulation
This seems correct
In social behavioral science discipline simulation see norm model built absence established quantitative theory EOCS probably ought characterized term
For instance social scientist use simulation pursue methodology social phenomenon example observed pattern like segregation explained accounted generating similar looking phenomenon simulation Epstein Axtell Epstein
But raise sort epistemological question
What exactly accomplished kind knowledge acquired observed social phenomenon le reproduced simulation
Does count explanation phenomenon
A possible explanation
see
It also fair say Parker forthcoming condition outlined pay insufficient attention various differing purpose simulation used discussed
If using simulation make detailed quantitative prediction future behavior target system epistemology inference might require stringent standard involved inference made general qualitative behavior whole class system
Indeed also fair say much work could done classifying kind purpose computer simulation put constraint purpose place structure epistemology
Frigg Reiss argued none three condition new computer simulation
They argued ordinary paper pencil modeling incorporate feature
Indeed argued computer simulation could possibly raise new epistemological issue epistemological issue could cleanly divided question appropriateness model underlying simulation issue identical epistemological issue arise ordinary modeling question correctness solution model equation delivered simulation mathematical question one related epistemology science
On first point Winsberg replied simultaneous confluence three feature new simulation
We return second point section Some work EOCS developed analogy computer simulation order draw recent work epistemology experiment particularly work Allan Franklin
see entry
In work epistemology experiment Alan Franklin identified number strategy experimenter use increase rational confidence result
Weissart Parker argued various form analogy strategy number strategy available simulationists sanction result
The detailed analysis relationship found Parker also us analogy highlight weakness current approach simulation model evaluation
Winsberg also make use Ian Hacking work philosophy experiment
One central insight experiment captured slogan experiment life
Hacking intended convey two thing slogan
The first reaction unstable picture science come example Kuhn
Hacking suggests experimental result remain stable even face dramatic change part science
The second related point intended convey experiment organic develop change yet retain certain development make u talk repeating replicating experiment
Some technique simulationists use construct model get credentialed much way Hacking say instrument experimental procedure method credential develop extended period time become deeply
In Hacking language technique set assumption simulationists use become
Perhaps better expression would carry credential
This provides response problem posed understanding simulation could viable epistemology despite motley autonomous nature inference
Drawing inspiration another philosopher experiment Mayo Parker suggests remedy shortcoming current approach simulation model evaluation
In work Parker suggests Mayo approach understanding traditional make use notion severe test shed light epistemology simulation
The central question epistemology simulation perspective becomes What warrant taking computer simulation severe test hypothesis natural world
That warrant concluding simulation would unlikely give result fact gave hypothesis interest false
Parker belief much pass simulation model evaluation lack rigor structure Drawing explicitly upon Mayo work argues epistemology simulation ought instead offering account canonical error arise well strategy probing presence
Practitioners simulation particularly engineering context weapon testing climate science tend conceptualize EOCS term
said process determining whether output simulation approximates true solution differential equation original model
hand said process determining whether chosen model good enough representation system purpose simulation
The literature verification validation engineer scientist enormous beginning receive attention philosopher
Verification divided solution verification code verification
The former verifies output approximates true solution differential equation original model
The latter verifies code written carry intended algorithm
Code verification mostly ignored philosopher science probably seen problem computer science empirical mistake
Part solution verification consists comparing computed output analytic solution called benchmark solution
Though method course help make case result computer simulation since simulation often used precisely analytic solution unavailable region solution space interest
Other indirect technique available important probably checking see whether rate computed output converges stable solution time spatial resolution discretization grid get finer
The principal strategy validation involves comparing model output observable data
Again course strategy limited case simulation run observable data sparse
But complex strategy employed including comparing output subsystem simulation relevant experiment Parker forthcoming Oberkampf Roy
The concept verification validation drawn criticism philosopher
Oreskes et al
article mostly critical terminology arguing validity particular property applies logical argument hence term applied model might lead overconfidence
Winsberg argued conceptual division verification validation misleading taken suggest one set method show solved equation right another set method show got right equation
He also argued misleading think epistemology simulation cleanly divided empirical part verification mathematical computer science part validation
But misleading idea often follows discussion verification validation
We find work practitioner philosopher
Here standard line practictioner Roy Verification deal mathematics address correctness numerical solution given model
Validation hand deal physic address appropriateness model reproducing experimental data
Verification thought solving chosen equation correctly validation choosing correct equation first place Roy
Some philosopher put distinction work argument philosophical novelty simulation
We first raised issue section Frigg Reiss argued simulation could epistemologically novel feature since contained two distinct component component identical epistemology ordinary modeling component entirely mathematical
We distinguish two different notion reliability answering two different question
First solution computer provides close enough actual unavailable solution useful purely mathematical question fall within class problem mentioned
So nothing new philosophical point view question indeed one number crunching
Second computational model basis simulation represent target system correctly
That simulation result externally valid
This serious question one independent ﬁrst problem one equally arises connection model involve intractable mathematics ordinary experiment Frigg Reiss
But verification validation strictly speaking cleanly separable
That method validation much weak establish validity simulation
And model equation chosen simulation straightforward sense right equation model equation would choose ideal world
We good reason think word model equation enjoy better empirical support abstract
The equation choose often reflect compromise think best describes phenomenon computational tractability
So equation chosen rarely well validated
If want understand simulation result taken credible look epistemology simulation integrated whole cleanly divided verification would look inadequate task
So one point verification validation separable activity
But point two independent entity onto activity directed model chosen discretized method discretizing
Once one recognizes equation solved sometimes chosen cancel discretization error etc
Lenhard nice example involving Arakawa operator later distinction get harder maintain
So success achieved simulation kind piecemeal adjustment model method calculation
And case hard even know mean say simulation separately verified validated
No one argued V V useful distinction rather scientist overinflate pragmatically useful distinction clean methodological dictate misrepresents messiness practice
Collaterally Frigg Reiss argument absence epistemological novelty simulation fails reason
It purely mathematical question whether solution computer provides close enough actual unavailable solution useful
At least respect question answered pragmatic matter entirely using mathematical method
And hence issue arise ordinary modeling
Working scientist sometimes describe simulation study experimental term
The connection simulation experiment probably go back far von Neumann advocating early use computer physic noted many difficult experiment conducted merely determine fact ought principle derivable theory
Once von Neumann vision became reality experiment began replaced simulation became somewhat natural view version experiment
A representative passage found popular book simulation The idea silico experiment becomes even plausible simulation study designed learn happens system result various possible intervention What would happen global climate amount carbon added atmosphere
What happen airplane wing subjected strain
How would traffic pattern change onramp added location
Philosophers consequently begun consider sense computer simulation like experiment sense differ
A number view emerged literature centered around defending criticizing two thesis
Computer simulation study literally instance experiment

The identity thesis would true good reason weak version best reason stronger version reason strongest version necessary condition believe simulation provide warrant belief hypothesis support
A consequence strongest version identity thesis true reason believe simulation confer warrant believing hypothesis
The central idea behind epistemological dependence thesis experiment canonical entity play central role warranting belief scientific hypothesis therefore degree ought think simulation also play role warranting belief depends extent identified kind experiment
One find philosopher arguing identity thesis early Humphreys Hughes
And least implicit support stronger version epistemological dependence thesis Hughes
The earliest explicit argument favor epistemological dependence thesis however Norton Suppe
According Norton Suppe simulation warrant belief precisely literally experiment
They detailed story tell sense experiment supposed work
According Norton Suppe valid simulation one certain formal relation call realization hold base model modeled physical system computer running algorithm
When proper condition met simulation used instrument probing detecting real world phenomenon
Empirical data real phenomenon produced condition experimental control
One problem story formal condition set much strict
It unlikely many real example computer simulation meet strict standard
Simulation almost always far idealizing approximating enterprise
So simulation experiment probably way Norton Suppe imagined
More generally identity thesis drawn fire quarter
Gilbert Troitzsch argued major difference experiment one controlling actual object interest example chemistry experiment chemical investigation simulation one experimenting model rather phenomenon Gilbert Troitzsch
But seem right
Many Guala Morgan Parker Winsberg pointed problem claim
If Gilbert Troitzsch mean simulationists manipulate model sense abstract object claim difficult manipulate abstract entity
If hand simply mean point fact physical object simulationists digital actual object interest clear differs ordinary experiment
It false real experiment always manipulate exactly target interest
In fact real experiment simulation complex relationship manipulated investigation one hand system target investigation
In case experiment simulation therefore take argument substance establish external validity investigation establish learned system manipulated applicable system interest
Mendel example manipulated pea plant interested learning phenomenon heritability generally
The idea biology make idea perspicuous
We experiment interested understanding organism general use gene control development genealogy
We experiment provides useful model mutation genetic inheritance
But idea limited biology
Galileo experimented inclined plane interested object fall would behave absence interfering inclined plane experiment even actually instantiate
Of course view experiment uncontested
It true quite often experimentalists infer something system distinct system interfere
However clear whether inference proper part original experiment
Peschard mount criticism along line hence seen defender Gilbert Troitzsch
Peschard argues fundamental assumption experimentation simulation manipulated system standing target confused
It confuses Peshard argues experiment She argues epistemic motivation experiment might quite proper epistemic target experiment worm
In simulation according Peschard however epistemic target never digital computer
Thus simulation distinct experiment according epistemic target opposed merely epistemic motivation distinct object manipulated
Other opponent identity thesis include Giere Beisbart Norton Other Internet Resources
It clear adjudicate dispute seems revolve primarily around difference emphasis
One emphasize experiment simulation following Gilbert Troitzsch Peschard insisting experiment teach u first epistemic target secondarily allow inference behavior system
experiment worm teach u first instance worm secondarily allow u make inference genetic control generally
This would make conceptually different computer simulation thought teach u first instance behavior computer second instance storm galaxy whatever
Or one emphasize opposite way
One emphasize degree experimental target always chosen surrogate really interest
Morrison probably forceful defender emphasizing aspect similarity experiment simulation
She argues experimental practice indeed measurement practice involve kind modeling practice simulation
In case pace Peschard nothing debate maybe appeal ordinary language use scientist always compelling kind prevent u saying epistemic target storm simulation computer storm merely epistemic motivation studying computer
Be may many philosopher simulation including discussed section chosen latter way drawing attention way message lurking behind Gilbert Troitzch quoted claim paint overly simplistic picture experiment
It seem overly simplistic paint picture according experiment get world whereas situation
And picture one seems get Gilber Troitzsch quotation
Peschard sophisticated picture involving distinction epistemic target epistemic motivation go long way towards smoothing concern without pushing u territory thinking simulation experiment regard
Still despite rejecting Gilbert characterization difference simulation experiment Guala Morgan reject identity thesis
Drawing work Simon Guala argues simulation differ fundamentally experiment object manipulation experiment bear material similarity target interest simulation similarity object target merely formal
Interestingly Morgan accepts argument identity thesis seems hold version
She argues word difference experiment simulation identified Guala implies simulation epistemologically inferior real experiment intrinsically le power warrant belief hypothesis real world experiment
A defense epistemic power simulation Morgan argument could come form defense identity thesis form rejection epistemological dependency thesis
On former front seem two problem Guala argument identity thesis
The first notion material similarity weak second notion mere formal similarity vague required work
Consider example fact uncommon engineering science use simulation method study behavior system fabricated silicon
The engineer want learn property different design possibility silicon device develops computational model device run simulation behavior digital computer
There deep material similarity material cause work central processor computer silicon device studied
On Gaula line reasoning mark example real experiment seems wrong
The peculiarity example illustrate problem rather starkly problem fact quite general two system bear material similarity difference
On flip side idea existence formal similarity two material entity could mark anything interesting conceptually confused
Given two sufficiently complex entity many way formally identical mention similar
There also way formally completely different
Now speak loosely say two thing bear formal similarity really mean best formal representation two entity formal similarity
In case appear good ground rejecting Gilbert Troitzsch Morgan Guala ground distinguishing experiment simulation
Returning defense epistemic power simulation also ground rejecting epistemological dependence thesis
As Parker point experiment simulation relevant similarity computer simulation target system matter
When relevant background knowledge place simulation provide reliable knowledge system experiment
A computer simulation solar system based sophisticated model celestial dynamic produce better representation planet orbit experiment
Paul Humphreys argued computer simulation profound implication understanding structure theory argues reveal inadequacy semantic syntactic view scientific theory
This claim drawn sharp fire Roman Frigg Julian Reiss
Frigg Reiss argue whether model admits analytic solution bearing relates world
They use example double pendulum show
Whether pendulum inner fulcrum held fixed fact determine whether relevant model analytically solvable bearing semantics element model
From conclude semantics model relates world unaffected whether model analytically solvable
This responsive however charitable reading Humphreys pointing
The syntactic semantic view theory account abstract scientific representation relate world
More particularly story relation particular model world rather relation world role model played relation
They also story lot say philosophically interesting action come scientific theorizing
The syntactic view suggested scientific practice could adequately rationally reconstructed thinking theory axiomatic system importantly logical deduction useful regulative ideal thinking inference theory world drawn
The syntactic view also omission made fairly clear modeling played anything role science
This feature syntactic view theory Frederick Suppe one ardent critic often railed
Theories nothing model theory could compared world without important role modeling play
The semantic view theory hand emphasize important role model also urged theory entity
It urged philosopher distracted contingency particular form linguistic expression theory might found say particular textbook
Computer simulation however seem illustrate theme misguided
It profoundly wrong think logical deduction right tool rationally reconstructing process theory application
Computer simulation show method theory application vastly outstrip inferential power logical deduction
The space solution example available via logical deduction theory fluid microscopic compared space application explored via computer simulation
On flip side computer simulation seem reveal Humphreys urged syntax matter
It wrong turn suggest semantic view particular linguistic form scientific theory expressed philosophically uninteresting
The syntax theory expression deep effect inference drawn kind idealization work well etc
Humphreys put point follows specific syntactic representation used often crucial solvability theory equation Humphreys
The theory fluid used emphasize point whether express theory Eulerian Lagrangian form deeply affect practice calculate affect idealization approximation calculational technique effective reliable circumstance
So epistemology computer simulation need sensitive particular syntactic formulation theory well particular formulation credentialed
Hence seem right emphasize Humphreys computer simulation revealed inadequacy syntactic semantic theory
Paul Humphreys Mark Bedau argued philosopher interested topic emergence learn great deal looking computer simulation
Philosophers interested topic consult entry contribution philosopher discussed
The connection emergence simulation perhaps best articulated Bedau
Bedau argued conception emergence must meet twin hallmark explaining whole depends part whole independent part
He argues philosopher often focus call strong emergence posit brute downward causation irreducible principle
But argues mistake
He focus instead call weak emergence reducibility whole part
Systems produce emergent property mere mechanism mechanism complex many independently interacting part
As result way figure exactly happen given specific set initial boundary condition except crawl causal web
It connection computer simulation arises
Weakly emergent property characteristic complex system nature
And also characteristic complex computer simulation way predict except let run
Weak emergence explains according Bedau computer simulation play central role science complex system
The best way understand predict real complex system behave simulate crawling web see happens
Models course involve idealization
But argued kind idealization play especially prominent role kind modeling involved computer simulation point deserve title This section discus attempt define fiction explore role computer simulation
There two different line thinking role fiction science
According one model fiction
This line thinking motivated considering role example ideal pendulum science
Scientists argued often make claim sort entity ideal pendulum period proportional length nowhere found real world hence must fictional entity
This line argument fictional entity science connect special way computer interested topic consult entry scientific representation forthcoming
Another line thinking fiction concerned question sort representation science ought regarded fictional
Here concern much ontology scientific model entity representational character various postulated model entity
Here Winsberg argued fiction special connection computer simulation
Or rather computer simulation contain element best typify might call fictional representation science even representation uniquely present simulation
He note first conception make representation contradicts reality fiction correspond ordinary use term rough map fiction
He proposes alternative definition nonfiction offered good enough guide part world fiction
But definition need refined
Take fable grasshopper ant
Although fable offer lesson world still fiction useful guide way world general sense rather specific guide way part world prima facie representational target singing grasshopper toiling ant
Nonfictions hand point certain part world guide part world
These kind fictional component model paradigmatically exemplified certain computer simulation
Two example silogen atom artificial Silogen atom appear certain nanomechanical model crack specie kind multiscale model blend quantum mechanic molecular mechanic mentioned section
The silogen containing model crack propagation silicon work describing crack using quantum mechanic region immediately surrounding crack using classical molecular dynamic
To bring together modeling framework two region boundary get treated contains silogen atom mixture property silicon hydrogen
Silogen atom fiction
They offered even good enough description atom prima facie representational target
But used overall model hoped get thing right
Thus overall model fiction one component
Artificial viscosity similar sort example
Fluids abrupt shock difficult model computational grid abrupt shock hide inside single grid cell resolved algorithm
Artificial viscosity technique pretend fluid highly shock shock becomes le abrupt blur several grid cell
Getting viscosity hence thickness shock wrong help get overall model work well Again overall model fluid fiction reliable enough guide behavior fluid
But component called artificial viscosity used reliably model shock
It incorporated larger modeling framework make larger framework reliable This account drawn two sort criticism
Toon argued definition fiction narrow
He give example historical fiction like argues fiction despite fact offered good enough guide people place event certain respect entitled take
Toon presumably support broader conception role fiction science according play particularly prominent heightened role computer simulation
Gordon Purves forthcoming argues example fiction computational model example imaginary crack elsewhere meet strict requirement discussed
Unlike Toon however also want delineate fictional modeling element one
His principal criticism criterion fictionhood term social norm Purves argues ought able settle whether piece modeling fiction absence norm
Thus want find intrinsic characterization scientific fiction
His proposal take constitutive model fiction fail characteristic Laymon called piecewise improvability PI
PI characteristic many model idealization say model becomes accurate
But silogen atom get accurate simulation silicon crack
But Purves take failure PI constitutive fiction rather merely symptomatic
View site another server The Stanford Encyclopedia Philosophy Center Study Language Information CSLI Stanford University Library Congress Catalog Data ISSN

In ability CPU single core execute multiple concurrently appropriately supported
This approach differs multithreading process thread share resource single multiple core computing unit TLB
Where multiprocessing system include multiple complete processing unit multithreading aim increase utilization single core using well parallelism
As two technique complementary sometimes combined system multiple multithreading CPUs CPUs multiple multithreading core
The multithreading become popular effort exploit stalled since late
This allowed concept throughput computing specialized field even though difficult speed single thread single program computer system actually multitasking among multiple thread program
Thus technique improve throughput task result overall performance gain
Two major technique throughput computing
If thread get lot cache miss thread continue taking advantage unused computing resource may lead faster overall execution resource would idle single thread executed
Also thread use computing resource CPU instruction depend result running another thread may prevent resource becoming idle
Multiple thread interfere sharing hardware resource cache TLBs
As result execution time single thread improved degraded even one thread executing due lower frequency additional pipeline stage necessary accommodate hardware
Overall efficiency varies Intel claim improvement synthetic program performing loop dependent operation actually gain speed improvement run parallel
On hand program using extension performing data prefetches good video encoder might suffer cache miss idle computing resource
Such program therefore benefit hardware multithreading indeed see degraded performance due contention shared resource
From software standpoint hardware support multithreading visible software requiring change application program operating system multiprocessing
Hardware technique used support often parallel software technique used
Thread scheduling also major problem multithreading
The simplest type multithreading occurs one thread run blocked event normally would create stall
Such stall might cache miss access memory might take hundred CPU cycle data return
Instead waiting stall resolve threaded processor would switch execution another thread ready run
Only data previous thread arrived would previous thread placed back list thread
For example Conceptually similar cooperative used task voluntarily give execution time need wait upon type event
This type multithreading known block cooperative multithreading
The goal multithreading hardware support allow quick switching blocked thread another thread ready run
To achieve goal hardware cost replicate program visible register well processor control register program counter
Switching one thread another thread mean hardware switch using one register set another switch efficiently active thread active thread need register set
For example quickly switch two thread register hardware need instantiated twice
Additional hardware support multithreading allows thread switching done one CPU cycle bringing performance improvement
Also additional hardware allows thread behave executing alone sharing hardware resource thread minimizing amount software change needed within application operating system support multithreading
Many family embedded processor multiple register bank allow quick interrupt
Such scheme considered type block multithreading among user program thread interrupt thread
The purpose interleaved multithreading remove stall execution
Since one thread relatively independent thread le chance one instruction one pipelining stage needing output older instruction pipeline
Conceptually similar multitasking used operating system analogy would time slice given active thread one CPU cycle
For example This type multithreading first called barrel processing stave barrel represent pipeline stage executing thread
Interleaved preemptive multithreading modern terminology
In addition hardware cost discussed block type multithreading interleaved multithreading additional cost pipeline stage tracking thread ID instruction processing
Also since thread executed concurrently pipeline shared resource cache TLBs need larger avoid thrashing different thread
The advanced type multithreading applies
Whereas normal superscalar processor issue multiple instruction single thread every CPU cycle simultaneous multithreading SMT superscalar processor issue instruction multiple thread every CPU cycle
Recognizing single thread limited amount type multithreading try exploit parallelism available across multiple thread decrease waste associated unused issue slot
For example To distinguish type multithreading SMT term used denote instruction one thread issued time
In addition hardware cost discussed interleaved multithreading SMT additional cost pipeline stage tracking thread ID instruction processed
Again shared resource cache TLBs sized large number active thread processed
Implementations include later completed microarchitectures
A major area research thread scheduler must quickly choose among list thread execute next well maintain stalled thread list
An important subtopic different thread priority scheme used scheduler
The thread scheduler might implemented totally software totally hardware combination
Another area research type event cause thread switch cache miss communication completion etc
If multithreading scheme replicates state including privileged control register TLBs enables created thread
This allows thread run operating system processor
On hand state saved le hardware required would allow thread active one time die area cost

Most university offer computer engineering either degree electrical engineering offer dual degree electrical computer engineering
Because computing become much part society hard separate electrical engineer need know computer engineer need know
It safe say computer engineering combination element electrical engineering computer science deal design utilization computer
Computer engineering seek match efficient digital device appropriate software meet scientific technological administrative need business industry global economy
A Computer Engineering curriculum provide student foundation basic science mathematics humanity
Written oral communication skill emphasized developed throughout program
Also team project work appreciation ethical professional responsibility engineer present computer engineering program
Some recent development computer engineering include digital microcomputer application digital signal processing image processing telecommunication computer architecture electromagnetic compatibility computer vision
These area emphasized along digital system design embedded system design operating system conventional subject computer engineering
Extensive use computer tool mathematical analysis design data analysis instrumentation emphasized
The repetitive nature design cycle need simultaneous documentation development emphasized team project work
Computer engineer specialize area like digital system operating system computer network software etc
Professionals computer engineering field least undergraduate degree however many professional employed computing industry advanced degree
Graduates computer engineering find employment variety setting university industry government organization
Here short list research vocational area related computer engineering
An expanded list found Careers Computing publication IEEE Computer Society
Design new computer circuit microchip electronic component
Design new computer instruction set combine electronic optical component provide powerful computing
Develop manage information system support business organization
Design integrate deploy digital optical communication system
Computer engineer extensive training area electrical engineering computer science attractive combination potential employer allow student continue studying graduate professional school
Computer engineering grown matured dynamic major helping propel wave technological growth world
Computer engineering program provide student background prepares career lifelong learner since imperative computer engineer maintain technical competence field developing changing rapidly

