In computer network upstream refers sending data client local computer server remote host
Upstream transmission take several form speed data transferred local machine server known upstream rate
Upstream opposite downstream refers data transferred server local machine
When referring Internet node node closer Internet backbone said upstream node farther away backbone
Upstream traffic generated uploading file sending email server
Upstream also refer signal transmitted end user computer cable service provider
Moreover upstream speed extremely important software user
Typically downstream traffic voluminous upstream traffic
Asymmetric DSL service render slower upstream speed downstream speed
This done reserving le bandwidth upstream traffic providing bandwidth downstream traffic
Techopedia Terms Copyright Techopedia

learn share knowledge build career
organization tend use nomenclature downstream upstream talk communication system
What definition concept
Is standard concept world
To simplify thing let say talking system Upstream Something depends S Downstream Something S depends I know old I think answer wrong way around
Think way upstream something affect equally something upstream affect something downstream ca
So use method given system S Upstream something S depends action flow S Downstream something depends S S action flow By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

may refer

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
What design software development mean
This question came site linguist etymologist serious English language enthusiast
Upstream component part system component depends job
If design upstream component change ability component function may affected
If upstream component bug bug may manifested component
Downstream component part system component affect
Changes component ripple component downstream component
Consider application consists database tier application tier
The database tier would considereded upstream application tier
Upstream well origin software Downstream downwards ocean use case Open Source developer downstream build application tool finished product
Those upstream actually work product released
If develop software depend stability upstream development
And work software downstream developer
I think software engineering jargon English way I understand downstream design application developer take tool already developed use complete application
Using already produced software library decision library capability would already made downstream
With upstream design application developer consulted involved development library application work even really begun
If going software company focusing audio software example might need develop library cover range software plan develop
It would nice able library developer sit application developer app devs provide input want
Upstream customized make much expensive potentially produce better end product
Thank interest question
Because attracted spam answer removed posting answer requires site
Would like answer one instead
asked viewed active site design logo Stack Exchange Inc user contribution licensed

In refers direction data transferred
This differs greatly theory usage also upstream speed usually premium
Whereas downstream speed important average home user purpose content uploads used mainly application similar process data critical
Upstream speed also important user
upstream data rate much lower downstream
Symmetric connection SDSL however offer identical upstream downstream rate
If node A Internet closer fewer hop away node B A said upstream B conversely B downstream A
Related idea
An upstream provider usually large provides Internet access local ISP
Hence word upstream also refers data connection two ISPs

Upstream transmission
An upstream transmission form signal transmitted across signal sent customer cable service provider
A transmission server end user referred
Stay date latest development Internet terminology free weekly newsletter Webopedia
Join subscribe
The following fact statistic capture changing landscape cloud computing service provider customer keeping
The following computer science fact statistic provide quick introduction changing trend education related career
From ZZZ guide list text message online chat abbreviation help translate understand today texting lingo
Learn five generation computer major technology development led computing device use Computer architecture provides introduction system design basic computer science student
Networking fundamental teach building block modern network design
Learn different type network concept architecture

use following search parameter narrow result
Sharing information knowledge experience related principle practice type engineering civil structural mechanical electrical aerospace chemical computer environmental etc
Questions current engineering project working interpret code standard industry practice encouraged
Engineers help make world safer better place
Images related engineering accepted
Completed project destructive test result unique machinery hardware acceptable encouraged
comment encouraged provide context reader
Questions related school university allowed try
Asking help homework level result instant ban
Questions something work allowed try
Questions major selection career salary resume office politics posted GENERAL thread posted daily
Job ad placed weekly thread
Do post topic outside thread
No kind
No meme image macro
No post
This includes joke pun etc
Keep discussion civil
Overly insulting crass comment removed multiple violation lead ban
No sensationalised title
Posts blacklisted
You allowed post provided relevant engineering active comment answer question
Your post MUST submitted
Pick engineer list volunteer send PM indicating would like conduct interview Anything look like violates rule
Parts swap Q A various field front page internet
subscribe one thousand community
submitted Could somebody please explain difference Upstream Downstream Oil Gas industry
Like graduating Mechanical Engineer would possible role two option benefit disadvantage one
Post comment
upstream getting stuff ground mid stream moving stuff well refining processing place downstream turning stuff useful stuff refinery cracking mechanical sure could
machinery get oil ground machinery move oil A B machinery turn oil plastic fuel
source mom R D downstream engineer top oil company lived near refinery year OK Thanks nice simple
Use site constitutes acceptance
reddit All right reserved
REDDIT ALIEN Logo registered trademark reddit inc

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
I always hear people saying better merge upstream stuff like come designing software like
I feeling mainstream linux kernel stuff I probably wrong
And also opposite upstream
If good go upstream alternative
Upstream refers originator component discussed

wrote torrent client based upon libtransmission bug found client tracked back libtransmission
The bug fixed patch included client
Merging patch upstream context would mean send patch author libtransmission inclusion
This way fix would propagated every project based upon libtransmission
The alternative merging upstream keeping patch
Using Ubuntu example
Ubuntu distribution pack lot software together small large
There graphic driver X server Gnome among others
Ubuntu developing software
Ubuntu packing software together making sure individual component work together
All software Ubuntu packing together called Ubuntu point view
In process combining software together bug might pop
The bug might one software component example gnome might special way Ubuntu thing
After distribution distribution thing special way
If bug caused way Ubuntu thing Ubuntu fix bug
If bug fact one software component example Gnome Ubuntu patch Gnome
When Ubuntu sends patch back Gnome others also benefit patch Ubuntu sending patch
If Ubuntu decides send patch upstream upstream project reject patch ubuntu decides still keep patch Ubuntu technically project
The opposite upstream would downstream Ubuntu downstream Gnome
I term used often
See also Wikipedia
By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
In document blog development open source project read stuff like developer fix
What mean
Consider obvious analogy term flow pun intended water river flow thus source water come
This analogy deeply embedded software development mere coincidence use term like even extensively field
In context forked software project source particular project forked
This might absolute origin
If project A forked produce project B forked produce project C B C A upstream B C
Thus upstream developer one work upstream project
An upstream fix one exists upstream parent project
When working Git especially context Github uncommon developer set two remote This allows owner fork pull fix enhancement directly original project thus keeping sync
On Github I repository
My local repo setup thus I prepare change local branch regularly update fork rebase branch result
If I change fork I would like see upstream version I create pull request asking accept contribution
This process referred pushing change upstream many project reflects fact work going upstream
Upstream completely unique open source closed source world call vendor
It however better open source wait vendor fix bug river analogy popular although perfect river much likely flow one direction
A project get software many source put together distribute single distribution channel
Upstream project use build project
Which case one
Besides fork kdopen said upstream terminology also applies Linux distribution
In case upstream actual developer project downstream packager
Distros add packaging script sometimes patch build script source file sent downstream sent upstream
There even multiple level
Ubuntu package based Debian package fork project example
directional term describing flow data
For example software development use centralized revision control system like always commit change upstream decentralized upstream downstream system choose data flow main repository used upstream
In software development project code usually upstream repository towards production dev test stage live database pulled downstream production development environment
Related By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

Download free Babylon translation save much time
Everything I need one place without opening new window loading program
Alicia Spain

