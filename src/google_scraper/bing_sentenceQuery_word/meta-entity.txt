Entity Definition An entity thing interest organisation data held
In business example entity would item customer employee item stock
Each entity described
Search Entity UK US Search Entity rest Computing Students

Computer science also strong connection discipline
Many problem science engineering health care business area solved effectively computer finding solution requires computer science expertise knowledge particular application domain
Thus computer scientist often become proficient subject
Finally computer science wide range specialty
These include computer architecture software system graphic artifical intelligence computational science software engineering
Drawing common core computer science knowledge specialty area focus particular challenge
Finally importantly computer scientist computer scientist fun
Not mention lucrative career opportunity
Computer Science The Profession Computer science discipline involves understanding design computer computational process
In general form concerned understanding information transfer transformation
Particular interest placed making process efficient endowing form intelligence
The discipline range theoretical study algorithm practical problem implementation term computational hardware software
A central focus process handling manipulating information
Thus discipline span advancing fundamental understanding algorithm information process general well practical design efficient reliable software hardware meet given specification
Computer science young discipline evolving rapidly beginning
As includes theoretical study experimental method engineering design one discipline
This differs radically physical science separate understanding advancement science application science field engineering design implementation
In computer science inherent intermingling theoretical concept computability algorithmic efficiency modern practical advancement electronics continue stimulate advance discipline
It close interaction theoretical design aspect field bind together single discipline
Because rapid evolution difficult provide complete list computer science area
Yet clear crucial area theory algorithm data structure programming methodology language computer element architecture
Other area include software engineering artificial intelligence computer networking communication database system parallel computation distributed computation interaction computer graphic operating system numerical symbolic computation
A professional computer scientist must firm foundation crucial area field likely knowledge one area discipline depending upon person particular area practice
Thus well educated computer scientist able apply fundamental concept technique computation algorithm computer design specific design problem
The work includes detailing specification analysis problem provides design function desired satisfactory performance reliable maintainable meet desired cost criterion
Clearly computer scientist must sufficient training computer science area able accomplish task must also firm understanding area mathematics science well broad education liberal study provide basis understanding societal implication work performed
Computer Science study principle application technology computing computer
It involves study data data structure algorithm process structure principle computer hardware software design methodology topic numerical analysis operation research artificial intelligence language design structure translation technique
Computer Science provides foundation knowledge student career objective wide range computing profession
The study efficient effective software development technique
Team work communication skill
An interest applying technology problem wide variety discipline
Computer Science concerned information much sense physic concerned energy devoted representation storage manipulation presentation information
Computer Science concerned study machine communication man machine application machine
Major area Computer Science include
Operating Systems concerned development structure complex program facilitate communication

Computational Science analysis numerical method solving mathematical problem computer

Programming Languages study design property language human communicate computer

Architecture study use mathematical logic design electronic circuit

Intelligent Systems concerned mean computer may perform task might characterized intelligent performed human

Automata Theory abstract study computer capability

Information Storage Retrieval study method storing vast amount data computer method searching retrieving data

Software Engineering study tool technique software design development testing maintenance

study theory experimentation engineering form basic design use computer
It scientific practical approach application systematic study feasibility structure expression mechanization methodical underlie acquisition representation processing storage communication access information
An alternate succinct definition computer science study automating algorithmic process scale
A specializes theory computation design computational system
Its field divided variety theoretical
Some field explores fundamental property intractable problem highly abstract field emphasize visual application
Other field still focus challenge implementing computation
For example considers various approach description computation study investigates various aspect use
considers challenge making computer computation useful usable human
The earliest foundation would become computer science predate invention modern
Machines calculating fixed numerical task existed since antiquity aiding computation multiplication division
Further performing computation existed since antiquity even development sophisticated computing equipment
designed constructed first working
In demonstrated digital mechanical calculator called
He may considered first computer scientist information theorist among reason documenting binary number system
In launched industry released simplified first calculating machine strong enough reliable enough used daily office environment
started design first eventually gave idea first
He started developing machine le two year sketched many salient feature modern computer
A crucial step adoption punched card system derived making infinitely programmable
In translation French article Analytical Engine wrote one many note included algorithm compute considered first computer program
Around invented used process statistical information eventually company became part
In one hundred year Babbage impossible dream convinced IBM making kind punched card equipment also calculator business develop giant programmable calculator based Babbage Analytical Engine used card central computing unit
When machine finished hailed Babbage dream come true
During new powerful machine developed term came refer machine rather human predecessor
As became clear computer could used mathematical calculation field computer science broadened study general
Computer science began established distinct academic discipline early
The world first computer science degree program began
The first computer science degree program United States formed
Since practical computer became available many application computing become distinct area study right
Although many initially believed impossible computer could actually scientific field study late fifty gradually became accepted among greater academic population
It brand formed part computer science revolution time
IBM short International Business Machines released IBM later IBM computer widely used exploration period device
Still working IBM computer frustrating misplaced much one letter one instruction program would crash would start whole process
During late computer science discipline much developmental stage issue commonplace
Time seen significant improvement usability effectiveness
Modern society seen significant shift user computer technology usage expert professional user base
Initially computer quite costly degree human aid needed efficient part professional computer operator
As computer adoption became widespread affordable le human assistance needed common usage
Despite short history formal academic discipline computer science made number fundamental contribution science fact along founding science current epoch human history called driver seen third major leap human technological progress CE BC
These contribution include Although first proposed term computer science appears article Louis Fein argues creation analogous creation justifying name arguing like subject applied interdisciplinary nature characteristic typical academic discipline
His effort others rewarded university went create program starting Purdue
Despite name significant amount computer science involve study computer
Because several alternative name proposed
Certain department major university prefer term emphasize precisely difference
Danish scientist suggested term reflect fact scientific discipline revolves around data data treatment necessarily involving computer
The first scientific institution use term Department Datalogy University Copenhagen founded Peter Naur first professor datalogy
The term used mainly Scandinavian country
An alternative term also proposed Naur used distinct field data analysis including statistic database
Also early day computing number term practitioner field computing suggested
Three month later journal suggested followed next year
The term also suggested
In Europe term derived contracted translation expression automatic information
informazione automatica Italian information mathematics often used
French German Italian Dutch Spanish Portuguese mean informatics
Similar word also adopted UK
In however linked applied computing computing context another domain
A folkloric quotation often attributed almost certainly first formulated state computer science computer astronomy telescope
The design deployment computer computer system generally considered province discipline computer science
For example study computer hardware usually considered part study commercial deployment often called information technology
However much idea various discipline
Computer science research also often intersects discipline philosophy
Computer science considered much closer relationship mathematics many scientific discipline observer saying computing mathematical science
Early computer science strongly influenced work mathematician continues useful interchange idea two field area
The relationship computer science software engineering contentious issue muddied term software engineering mean computer science defined
taking cue relationship engineering science discipline claimed principal focus computer science studying property computation general principal focus software engineering design specific computation achieve practical goal making two separate complementary discipline
The academic political funding aspect computer science tend depend whether department formed mathematical emphasis engineering emphasis
Computer science department mathematics emphasis numerical orientation consider alignment
Both type department tend make effort bridge field educationally across research
A number computer scientist argued distinction three separate paradigm computer science
argued paradigm science technology mathematics
working group argued theory abstraction modeling design
Amnon Eden described rationalist paradigm treat computer science branch mathematics prevalent theoretical computer science mainly employ technocratic paradigm might found engineering approach prominently software engineering scientific paradigm approach artifact empirical perspective identifiable branch
As discipline computer science span range topic theoretical study algorithm limit computation practical issue implementing computing system hardware software
formerly called Computing Sciences Accreditation made representative ACM IEEE CS four area considers crucial discipline computer science
In addition four area CSAB also identifies field software engineering artificial intelligence computer networking communication database system parallel computation distributed computation interaction computer graphic operating system numerical symbolic computation important area computer science
mathematical abstract spirit derives motivation practical everyday computation
Its aim understand nature consequence understanding provide efficient methodology
All study related mathematical logic formal concept method could considered theoretical computer science provided motivation clearly drawn field
Data structure algorithm study commonly used computational method computational efficiency
According fundamental question underlying computer science What efficiently automated
Theory computation focused answering fundamental question computed amount resource required perform computation
In effort answer first question examines computational problem solvable various theoretical
The second question addressed study time space cost associated different approach solving multitude computational problem
The famous problem one open problem theory computation
Information theory related quantification information
This developed find fundamental limit operation compressing data reliably storing communicating data
Coding theory study property system converting information one form another fitness specific application
Codes used recently also
Codes studied purpose designing efficient reliable method
Programming language theory branch computer science deal design implementation analysis characterization classification individual
It fall within discipline computer science depending affecting software engineering
It active research area numerous dedicated academic journal
Formal method particular kind based technique development software system
The use formal method software hardware design motivated expectation engineering discipline performing appropriate mathematical analysis contribute reliability robustness design
They form important theoretical underpinning software engineering especially safety security involved
Formal method useful adjunct software testing since help avoid error also give framework testing
For industrial use tool support required
However high cost using formal method mean usually used development safety utmost importance
Formal method best described application fairly broad variety fundamental particular calculus also problem software hardware specification verification
Computer architecture digital computer organization conceptual design fundamental operational structure computer system
It focus largely way central processing unit performs internally access address memory
The field often involves discipline computer engineering electrical engineering selecting interconnecting hardware component create computer meet functional performance cost goal
Computer performance analysis study work flowing computer general goal improving controlling using resource efficiently eliminating predicting performance anticipated peak load
Concurrency property system several computation executing simultaneously potentially interacting
A number mathematical model developed general concurrent computation including model
A distributed system extends idea concurrency onto multiple computer connected network
Computers within distributed system private memory information often exchanged among achieve common goal
This branch computer science aim manage network computer worldwide
Computer security branch computer technology whose objective includes protection information unauthorized access disruption modification maintaining accessibility usability system intended user
Cryptography practice study hiding encryption therefore deciphering decryption information
Modern cryptography largely related computer science many encryption decryption algorithm based computational complexity
A database intended organize store retrieve large amount data easily
Digital database managed using database management system store create maintain search data
Computer graphic study digital visual content involves synthesis manipulation image data
The study connected many field computer science including heavily applied field special effect
Research develops theory principle guideline user interface designer create satisfactory user experience desktop laptop mobile device
field study concerned constructing technique using computer analyze solve problem
In practical use typically application form problem various scientific discipline
Artificial intelligence AI aim required synthesize process environmental adaptation learning communication found human animal
From origin artificial intelligence research necessarily drawing area expertise
AI associated popular mind main field practical application embedded component area require computational understanding
The late question Can computer think
question remains effectively unanswered although still used ass computer output scale human intelligence
But automation evaluative predictive task increasingly successful substitute human monitoring intervention domain computer application involving complex data
Software engineering study designing implementing modifying software order ensure high quality affordable maintainable fast build
It systematic approach software design involving application engineering practice software
Software engineering deal organizing analyzing deal creation manufacture new software internal maintenance arrangement
Both computer application software engineer computer system software engineer projected among fastest growing occupation
The philosopher computing noted three Conferences important event computer science research
During conference researcher public private sector present recent work meet
Unlike academic field computer science prestige greater journal publication
One proposed explanation quick development relatively new field requires rapid review distribution result task better handled conference journal
Since computer science relatively new field widely taught school university academic subject
For example estimated percent high school United States offered computer science education
A report Association Computing Machinery ACM Computer Science Teachers Association CSTA revealed state adopted significant education standard high school computer science
However computer science education growing
Some country Israel New Zealand South Korea already included computer science respective national secondary education curriculum
Several country following suit
In country significant gender gap computer science education
For example US computer science degree conferred woman
This gender gap also exists Western country
However part world gap small nonexistent
In approximately half computer science degree conferred woman
In woman made computer science graduate


A question I gotten lot lately difference similarity Computer Science Computer Engineering
At risk difference I written guide explain Computer Science Computer Engineering alike differ
Computer Engineering marriage Computer Science Electrical Engineering
It focus computing form microprocessor embedded computing device laptop desktop system supercomputer
As concern electrical engineering consideration microprocessor function designed optimized data communicated among electronic component integrated system electronic component designed operate process instruction expressed software software written compiled optimized specific hardware platform
Therefore computer engineer electrical engineer specialize software design hardware design system design integrates
Computer Science study data instruction processed stored communicated computing device
A modern descendant Applied Mathematics Electrical Engineering Computer Science deal algorithm processing data symbolic representation data instruction design instruction language processing data technique writing software process data variety computing platform protocol communicating data reliably securely across network organization data database various type scale emulation human intelligence learning computer algorithm statistical modeling data large database support inference trend technique protecting content authenticity data
Therefore computer scientist scientist mathematician develop way process interpret store communicate secure data
Because Computer Engineers Computer Scientists ultimately work data attempt ultimately harness meaning significant overlap coursework student two field take well career pursue
This minimize distinctive nature two discipline
It simply acknowledges fact type computer professional find context purpose similar kind project different aspect kind project
Both Computer Engineers Computer Scientists advance computing technology solve problem using computing technology
If consider computing technology term scale Computer Engineers operate often microscopic macroscopic end spectrum whereas Computer Scientists work middle part spectrum
More specifically Computer Engineers deal physic semiconductor electronics may design hardware integrated circuit level small well integration hardware software optimized run realize complete computing system large
Computer Scientists write software design database devise algorithm format communication secure data processed hardware make integrated system function
Consider iPhone
Apple employ Computer Scientists Computer Engineers design new version iPhone
Computer Engineers Electrical Engineers designed chip house integrated circuit make iPhone various component cell radio screen control memory microprocessor function figured get various component work
That involves looking device microscopic level integrated system level
Computer Scientists wrote operating system manages memory concurrently running application apps app store run top operating system packing unpacking data packet network communication encrypting data prying eye see
The computer scientist provide glue piece bring turn computer engineer beginning product component design computer engineer end product device people text browse web play Angry Birds
From example easy imagine much dependence function realizing finished product significant overlap coursework Computer Engineers Computer Scientists take career opportunity pursue
I found website provides particularly helpful description Computer Engineering identifies kind job Computer Engineers work company hire salary earn
That page begin helpful list specialization area Computer Engineering
I copied list specialization I marked asterisk Computer Scientists also specialize
In case overlap Computer Scientists focus software development aspect specialization Computer Engineers study hardware design integration hardware software needed implement specialization
That website present number interesting data Computer Engineering
For example table express relationship among Electrical Engineering Computer Engineering Computer Science term class major take percentage class fall category hardware software
You see computer science software computer engineering hardware theme play table
That easiest way distinguish two field
And yet enough overlap ensure kind student find plenty opportunity wide range career computer field
Professor chair Mathematics Computer Science Director Master Science Information Security Lewis University
You find
Please also I would like ask difference Sc
Computer Science Sc
Mathematics Computer Science
I computer science social science natural science
That good question
There consensus kind science Computer Science
A good book subject The Science Computing Shaping Discipline Matti Tedre
Personally I see Computer Science engineering discipline
Like Electrical Engineering applies law Physics Math solve problem
Computer Engineering Computer Science mean different thing different people
I think article may explaining American view
In Spain degree time I called Computer Science Engineering literally translated lasted year
Actually amount work year degree number Credits standardized EU
They teach math quite bit database software hardware
I think equivalent Degree Master US
Now education Spain changed programme I date I know issued kind lightweight degree year
Later go buy master without knowing nearly much knew degree fundamental
What business built top education
I find bit shame actually
But give older engineer competitive advantage opinion
Greetings everyone I Computer Engineering Computer Science
The simplest way I think explain difference BSCE BSCS considering two degree following A BSCE degree include coursework also required BSEE electrical engineering degree
This prepare graduate work company develop product consisting software directly control hardware
Some example Motorola Nokia texas instrument
A BSCE degree include little hardware electrical engineering course required BSCE degree
Instead computer science coursework operating system design compiler theory advanced algorithm design taken instead
This best degree working company google amazon Citrix
Which best depends interest want work
In experience many company need kind
While engineer Citrix never need interface hardware develop window kernel mode device driver
good luck
Required field marked Kathrynne Skonicki Director Media Relations Office Marketing Communications

In store certain value without particular repeated value
It computer implementation concept
Unlike type rather retrieving specific element set one typically test value membership set
Some set data structure designed change constructed
Static set allow query operation element checking whether given value set enumerating value arbitrary order
Other variant called allow also insertion deletion element set
An abstract data structure collection aggregate data
The data may booleans number character data structure
If one considers structure yielded packaging indexing four basic data structure In view content set bunch isolated data item elementary bunch element
Whereas set element bunch element
Further structuring may achieved considering multiplicity element set become multisets bunch become hyperbunches homogeneity record set field necessarily type
In set generally identified characteristic function accordingly set value type may denoted
Subtypes subset may modeled may replaced
The characteristic function set defined In theory many abstract data structure viewed set structure additional operation additional imposed standard operation
For example abstract viewed set structure operation return element smallest value
One may define operation Typical operation may provided static set structure Dynamic set structure typically add Some set structure may allow operation
The cost operation depend implementation possibly also particular value stored set order inserted
There many operation principle defined term Other operation defined set element special type Sets implemented using various provide different time space various operation
Some implementation designed improve efficiency specialized operation
Implementations described general use typically strive optimize operation
A simple implementation use ignoring order element taking care avoid repeated value
This simple inefficient operation like set membership element deletion require scanning entire list
Sets often instead implemented using efficient data structure particularly various flavor
As set interpreted kind map indicator function set commonly implemented way partial map case value pair sentinel value like namely sorted set O log n operation unsorted set O O n operation
A sorted linear hash table may used provide deterministically ordered set
Further language support map set set implemented term map
For example common convert array hash whose value sentinel value use set Other popular method include
In particular subset integer implemented efficiently also support efficient union intersection operation
A implement set probabilistically using compact representation risking small chance false positive query
The Boolean set operation implemented term elementary operation specialized algorithm may yield lower asymptotic time bound
If set implemented sorted list example naive algorithm take time proportional length time length whereas variant job time proportional
Moreover specialized set data structure optimized one operation expense others
One earliest language support set many language include whether core language
As noted previous section language directly support set support set emulated using associative array using element key using dummy value value ignored
A generalization notion set similar set allows repeated equal value duplicate
This used two distinct sens either equal value considered simply counted equal value considered stored distinct item
For example given list people name age year one could construct multiset age simply count number people given age
Alternatively one construct multiset people two people considered equivalent age may different people different name case pair name age must stored selecting given age give people given age
Formally possible object computer science considered equal still distinct another relation
Some type multiset implementation store distinct equal object separate item data structure others collapse one version first one encountered keep positive integer count multiplicity element
As set multisets naturally implemented using hash table tree yield different performance characteristic
The set bag type T given expression bag If multiset one considers equal item identical simply count multiset interpreted function input domain integer generalizing identification set indicator function
In case multiset counting sense may generalized allow negative value Python
Where multiset data structure available workaround use regular set override equality predicate item always return equal distinct object however still able store multiple occurrence object use mapping value integer multiplicity able distinguish equal element
Typical operation bag In table mathematical set multiset depending presence unicity constraint column turn candidate key
allows selection row relational table operation general yield multiset unless keyword used force row different selection includes primary candidate key
In keyword used transform subquery collection expression general select used another general query transforms subquery used another query assignment column appropriate collection type

This post part series produced HuffPost Mentorship Program
discus issue affecting woman science technology engineering math
Transitioning sophomore year summer given lot time think reflect upon experience towards majoring Computer Science
I feel extremely different way commonly portrayed medium even I expected
So six reality computer science major Personally brother one encouraged take computer science class
I tried learn code unsuccessful I could even set development environment
Even though dropped intro CS class told I could field needed woman engineer like
Through faith I took web development course jumped intro CS track Stanford stuck CS train ever since
The number one thing attracts CS major fact I build stuff stay around forever said internet written ink bad deal
b accessible many people c like teaching really stupid baby something
Mehran Sahami really famous one awesome CS professor told u first day class computer really dumb really good following instruction
Almost good point everything letter
If talk computer language make want golden
My problem solving skill become immensely better becoming computer science major
In fact everything I think problem
Running late morning
I break problem going take time I effectively cut corner avoid wasting time
My parent often rely fix anything technologically related television phone name
I approach every issue software problem could wrong
Look symptom problem see show
Understand system could causing
And usually I get solution
It easy give say oh care someone else code
Another one awesome CS Professors Eric Roberts showed u first day second introductory class even Stanford graduated student CS major Valley hired still need people fill job
It surprising software job even working eBay talent one thing company aggressively looking
You give could
Maybe could code next app Learning CS involves experimentation
You mess around code really get
Sometimes mean break something already working
But great thing return get learn something new sometimes something even documented fixed
This definitely happens work everyday
Sometimes I feel like taking lazy approach going back old way thing trust definitely lot better play around
Being CS major hard probably many people
You doubt everyday whether meant want give
You see kid since two year old think Damn I even bother trying
You fail programming ponder question personal experience
The truth one talk hard want think
Even year later I still doubting decision major CS software engineering
I doubt day I set foot first second third CS class every exam I took first day internship day I push code Github
But truth OK doubt long hold back
You think best
Of course
Do afraid wo get anywhere unless try
So someone contemplating computer science someone afraid stop
Forget boy tell ca forget hater jealous zeal
Code
If broken get segmentation fault Java exception go fix
Chances assume meant never able feel thrill getting something work even Hello World stopping
Sometimes one stopping answer let go

learn share knowledge build career
This question already answer Specifically I seen used context text filtering
As predicate filter criterion
Is accurate
This question asked already answer
If answer fully address question please
It term commonly used field Mathematical Logic
From In mathematics predicate either amount characteristic function indicator function relation
A function P true false called predicate X
When P predicate X sometimes say P property
predicate filter criterion A predicate part sentence contains verb tell something subject
For instance sentence Mike eating subject predicate eating
In context computer science interested stating fact rather testing condition purpose deciding whether something
The member instance predicate
It return assertion case eating
The predicate used decide whether feed person
Predicates often found form callback general use term function return bool based evaluation truth assertion
For sorting might want member function predicate
If come u sorting algorithm swap two fruit
There also term predicate
In English use like Graduation predicated upon attainment passing grade
It mean one thing depends another
In computer science use form word describe conditional execution
For instance CUDA programming assembly instruction whose execution predicate KATE prior result
That set predicate CAT flag true cause instruction executed false cause instruction treated NOP
Thus execution instruction predicated upon indicated predicate flag
The us similar
Hope help
The word come logic
A predicate boolean question input
IsNull predicate question
Also wikipedia link
A predicate statement something either true false
Proposition Predicate Use quantifier transform predicate proposition Just simplify thing
predicate function return true false value
used filter criterion meaning let consider array number predicate return true number false wise
filter function return new array based predicate filter criterion
filtered array based value predicate Predicate function take one element input parameter return either true false
Predicates used higher order function applied given function transformer list element return list result
Transformer function applies element produce one new element
asked viewed active Get In get see By subscribing agree
site design logo Stack Exchange Inc user contribution licensed

We know busy take guesswork financial aid college application survive college life
Thanks signing
Sign today get exclusive tip get head start college experience
It gift
Both degree job computing becoming increasingly specialized
For reason important ever fully research certain program provide knowledge experience need career
However always easy pick right program name program department
Although naming becoming standardized still variance school school program program
Knowing exactly kind computing want career finding right program helpful securing dream job graduation
Computer Science umbrella term encompasses four major area computing theory algorithm programming language architecture
At usually cover broad range computing topic allow student engage project across multiple area
For typical focus one area
Therefore important research graduate program make sure school faculty resource need complete master doctoral project
While Carnegie Mellon remained vanguard decade many school might familiar also great Computer Science program including state school like Rutgers University Texas Austin University Maryland College Park
Computer Engineering typically focus specifically computer hardware software
It integration computer science electrical engineering
For reason many people want become computer engineer earn often minor double major computer science earn
When searching graduate program look school equally strong computer science engineering
MIT still leader school like University Washington Texas A M University built strong engineering program integrate computer science
Florida Institute Technology FIT root engineering producing technological advance computing since inception
This reflected outstanding faculty facility well commitment preparing graduate student innovator computer engineering
From theory application specialty every person passion computing
During undergraduate program may want include Electrical Engineering class even program specifically require graduation
At graduate level far great program available might think
Instead going biggest brand name find program right goal within field
Make sure sign free account get started finding dream college
Your feedback important helping u improve Peterson website
Please let u know notice anything wrong best get fixed right away
Peterson Nelnet Company licence
All right reserved

If using assistive technology need help accessing PDF another format please contact u via email address
Program specific task command online robot simulation Engage exercise understand object communicate one another Understand core aspect computer science use create solution understandable adaptable appropriate reusable
The design implementation computer program solve problem involve skill fundamental study computer science
This includes development analysis algorithm fundamental data structure use logic formal method
PDF PDF Ask counselor teacher See question ask

If help find course best fit
Talk counselor taking course online approved provider


Field Invention The present invention relates meta model system integrated computer aided software engineering CASE repository based process methodology structured technique using information resource dictionary system IRDS consistently store share information generated CASE tool data flow diagram DFD structure chart SC well support software life cycle integrated supporting method integrated CASE repository meta model system

Discussion Related Art CASE two fundamental notion software engineering tool developing software aid automated function computer within given time budget software development maintenance
DFD CASE tool supporting structured analysis technique widely used software development analyzing technique
DFD tool graphical form representing entire structure system component process data flow data store external entity process specification
SC CASE tool supporting structured design technique implementation system technique design phase
SC tool graphical form representing entire structure system component root module standard module library module transaction module database connector call data couple control flag module specification
IRDS American National Standard Institute ANSI standard uniquely approved repository developed National Institute Standard Technology NIST IRDS defines content repository repository common interface user interface
IRDS characterized centralized repository share manages information using meta model meta data various level focused management integrated repository
As shown FIG
IRDS data structure divided four data level according service provided IRDS level abstraction information stored IRDS
Three level pair connect four level association type instance
Information described upper level describes potentially control information described lower level
This standard handle integration CASE tool help integration CASE tool analysis design
CASE tool generally used phase software development process replacing manual operation perform related operation speediness reliability
CASE tool also use various kind information newly create information operation
Supporting tool Integrated Software Engineering Tool ISET CASE Toolkit tool developed system engineering research institute composed data interface database different purpose storing controlling newly created information
Also supporting tool manages database according database interface
Thus use product generated former stage START next stage STADE translator separate translation algorithm required
Accordingly STADE requires information START operation procedure complicated data consistency difficult maintain due difference data storage structure
Furthermore information created supporting tool shared repeated information inconsistent information controlled previously
Moreover case repeated creation information unnecessary time cost consumed development operation
This result difficulty standardization automation software development process unnecessary repetition storage management identical information
Also requires translation algorithm supporting tool variety database interface data structure
The problem need complementing ISET based information storage integrate store manage share information generated various kind tool
Accordingly meta model repository required effectively supporting storage sharing management information created CASE tool supporting software life cycle
The meta model define kind information stored repository type nature information rule constraint information determine software life cycle methodology supported CASE tool based repository
Accordingly repository automatically integratedly manages information provide standardization full automation software development process sharing information tool
Accordingly present invention directed meta model system integrated CASE repository process methodology integrated supporting method substantially obviates one problem due limitation disadvantage related art
An object present invention provide meta model system integrated CASE repository integrated supporting method construct repository commonly storing sharing managing information generated CASE tool DFD SC process methodology realize standardization full automation software development process sharing information tool
Integrated CASE tool process methodology include variety tool DFD tool SC tool repository searcher repository generator
The repository essential component consistently storing sharing managing information generated DFD SC tool diagraming tool
The repository automatically integratedly manages information analysis design structured technique supporting software development process provide standardization full automation software development process sharing information tool
In present invention design repository integrated CASE tool process integrated CASE meta model process methodology meta model repository represented conceptual model model ER model
ER modeling conceptual design technique database proposed Chen represents definition data mutual relationship data plane user irrespective hardware data storing method database management system DBMS
ER model representing meta model repository form concept added restricted conventional technique proposed used defining content IRD schema IRD FIG
based modeling technique containing unary binary relationship directional association attribute related entity relationship characteristic single level attribute group related entity
It understood foregoing general description following detailed description exemplary explanatory intended provide explanation invention claimed
The accompanying drawing included provide understanding invention incorporated constitute part specification illustrate embodiment invention together description serve explain principle invention In drawing FIG
show architecture ISET system conventional CASE toolkit tool FIG
show structure four level architecture IRDS FIG
show architecture system repository integrated CASE tool according present invention FIG
show architecture abstracting system integrated CASE repository process according present invention FIG
show integrated CASE meta model process using ER model conceptual modeling technique FIGS
show logical data structure storing information meta entity FIG
FIG
show logical data structure storing information meta data FIGS
FIGS
show flow diagram process performed system according present invention
Reference made detail preferred embodiment present invention example illustrated accompanying drawing
FIG
show architecture system repository integrated CASE tool according present invention
Referring FIG
system contrast conventional ISET system FIG
includes user interface DFD SC tool diagramming tool repository generator repository searcher repository service interface repository database interface CASE repository
DFD SC tool perform structured analysis design software development integrated user interface
Here consistently store information generated CASE repository following procedure used
First information inputted transmitted repository service interface command syntactic analyzing processor
Then searching carried repository check consistency integrity content repository defined integrated CASE meta model
Thereafter information stored database interface provides data approach mean
FIG
show architecture integrated CASE repository system process methodology according present invention
The system includes user interface connected searching information integrated CASE meta model stored CASE repository integrated CASE meta model connected user interface representing directional relationship entity define consistent relationship tool instance generator connected user interface generating instance integrated CASE meta model table generator connected user interface generating table entity type relationship type integrated CASE meta model searcher connected user interface searching searcher connected user interface searching entity type relationship type CASE repository connected instance generator table generator searcher searcher storing information integrated CASE meta model using ER model
CASE repository store logical data structure FIGS
represent integrated CASE meta model FIG
conceptual data structure content table FIG

Using integrated CASE meta model detection consistency type meaning information used tool performed logical data structure FIGS
composed three table information generated tool stored physical data structure FIG
composed three table
The table structure FIGS
carrying consistency detection includes table storing information table storing information table storing information
The table structure FIG
repository includes table storing information attribute entity table storing information attribute group entity table storing information attribute relationship
A method describing ER model conceptual modeling technique integrated CASE model explained reference FIG

Entities relationship respectively represented tetragon hexagon cardinality represented minimum value maximum value M N many
The hexagon bisected represent directional call association two entity entity
The cardinality relationship represented j relationship following meaning
When cardinality represents existence occurrence one entity entirely depend occurrence entity relationship
When represents existence completely depend occurrence entity
That mean existent dependence relationship
When maximum cardinality represents number occurrence relationship occurrence one entity participate one occurrence related
In case cardinality N multiple occurrence related number occurrence relationship generation one entity participate
In FIG
example relationship FORMS entity DATA FLOW DIAGRAM DFD DIAGRAM mean DATA FLOW DIAGRAM must actively construct multiple entity DFD DIAGRAMs
On contrary relationship FORMED BY mean multiple entity DFD DIAGRAMs must passively constructed one entity DATA FLOW DIAGRAM
FIG
show integrated CASE meta model process using ER model conceptual modeling technique
The integrated CASE meta model defined entity directional relationship entity according type meaning information component DFD tool DFD group SC tool SC group entity PROJECT center
In FIG
entity PROJECT association entity DATA FLOW DIAGRAM STRUCTURE CHART relationship RUNS
Entity DATA FLOW DIAGRAM association multiple entity DFD DIAGRAMs relationship FORMS
Similarly entity STRUCTURE CHART association multiple entity SC DIAGRAMs relationship FORMS
By representing directional relationship possible automatically integratedly manage detection consistency entity standardization software development process
Information commonly used tool extracted define entity ATTRIBUTE allowing sharing information tool performed
Generating information referable modelled relationship entity tool relationship entity DATA FLOW DIAGRAM STRUCTURE CHART entity DFD DIAGRAM SC DIAGRAM entity DFD OBJECT SC OBJECT entity DATA FLOW SC DATA
This accomplishes full automation software development process
In integrated CASE meta model extracting entity type relationship type FIG
entity divided two child entity directional relationship subdivided according type meaning information
In FIG
entity divided child entity described
Entity DFD DIAGRAM composed child entity DFD CONTEXT DIAGRAM DFD OTHER DIAGRAM
Entity DFD OBJECT composed child entity EXTERNAL ENTITY PROCESS DATA STORE EXTERNAL ENTITY
Entity SCD DIAGRAM composed child entity SCD ROOT DIAGRAM SCD OTHER DIAGRAM
Entity SC OBJECT composed child entity ROOT MODULE STANDARD MODULE LIBRARY MODULE TRANSACTION MODULE
DATABASE CONNECTOR
Entity SC DATA composed child entity DATA COUPLE CONTROL FLAG
Entity ATTRIBUTE composed child entity COMPOSITE ATTRIBUTE SINGLE ATTRIBUTE
As shown FIGS
logical data structure store information meta entity CASE repository composed entity type relationship type attribute group type attribute type meta entity FIG

Characteristic number given meta entity according order definition information stored
Meta entity information FIG
logical data structure representing include
For example CASE repository store logical data structure PROJECT meta entity number ENTITY NAME AUTHOR NAME START NAME DESCRIPTION
Data structure FIG
represents includes data structure FIG
show format length defined data structure FIG
represents two include
As shown FIG
physical data structure store information meta data CASE repository information including table table table
Each table composed attribute meta data according definition meta entity
The integrated CASE meta model includes rule constraint information tool must
The meta model repository stored CASE repository performs detection consistency type meaning information using information generated integrated CASE meta model becomes storage structure information generated tool
The meta entity meta data repository define kind relational database schema stored relational database variously search inquire information meta entity meta data according user interface
FIGS
flow diagram process performed system present invention executed
First meta model integrated CASE repository process generated menu constructed command received process corresponding step
The first step creates information table repository using meta model command corresponds generation instance
The second step generates information table repository using meta model command corresponds generation instance
The third step creates information table repository using meta model command generation instance
The fourth step creates table repository using meta model command generation meta data attribute entity
The fifth step creates table repository using meta model command corresponds generation meta data attribute group entity sixth step creates table repository using meta model command generation meta data attribute relationship
The seventh step search meta entity meta relationship represent content searching command eighth step search entity relationship show content entity relationship searching command
Finally ninth step completes process completion command wait next command
The integrated CASE tool must include various tool DFD tool SC tool repository searcher repository generator
Especially repository essential component consistently storing sharing managing information generated DFD SC tool diagramming tool
The repository automatically integratedly manages information requirement analysis design structured technique supporting software development process previously control repeated information inconsistent information
Furthermore repository allows one tool use information generated tool bring systematic coupling tool supporting software development life cycle resulting standardization full automation software development process
As described present invention provides method storing sharing managing information dealt generated various tool
The present invention construct repository commonly storing sharing managing information generated CASE tool DFD SC process methodology automatically integratedly manage information thereby accomplishing standardization full automation software development process sharing information tool
It apparent skilled art various modification variation made integrated CASE repository meta model system process methodology integrated supporting method present invention without departing spirit scope invention
Thus intended present invention cover modification variation invention provided come within scope appended claim equivalent

