In mathematically based technique whose purpose help implementation system software
They used describe system analyze behavior aid design verifying key property interest rigorous effective reasoning tool
These specification sense syntax semantics fall within one domain able used infer useful information
In passing decade computer system become increasingly powerful result become impactful society
Because better technique needed assist design implementation reliable software
Established engineering discipline use mathematical analysis foundation creating validating product design
Formal specification one way achieve software engineering reliability predicted
Other method commonly used enhance code quality
Given possible use technique demonstrate system design correct respect specification
This allows incorrect system design revised major investment made actual implementation
Another approach use probably correct step transform specification design ultimately transformed implementation
It important note formal specification implementation rather may used develop
Formal specification describe system system
A good specification must following attribute adequate internally consistent unambiguous complete satisfied minimal A good specification One main reason interest formal specification provide ability perform proof software implementation
These proof may used validate specification verify correctness design prove program satisfies specification
A design implementation ever declared correct
It ever correct respect given specification
Whether formal specification correctly describes problem solved separate issue
It also difficult issue address since ultimately concern problem constructing abstracted formal representation informal concrete abstraction step amenable formal proof
However possible specification proving challenge concerning property specification expected exhibit
If correct theorem reinforce specifier understanding specification relationship underlying problem domain
If specification probably need changed better reflect domain understanding involved producing implementing specification
Formal method software development widely used industry
Most company consider apply software development process
This may variety reason Other limitation Formal specification technique existed various domain various scale quite time
Implementations formal specification differ depending kind system attempting model applied point software life cycle introduced
These type model categorized following specification paradigm In addition paradigm way apply certain heuristic help improve creation specification
The paper referenced best discus heuristic use designing specification
They applying approach
The example leading formal
Others include Specification Language AMN
In area formal specification often used describe property Web service
Some tool For implementation example refer link section

âãÏÓ obj endobj obj stream hÞbbd J endstream endobj startxref EOF obj stream hÞÌU E z æòµåQyÓ õ mB Û ù ê Yy økmµ À À

Perelman Leslie James Paradis Edward Barrett
Effective Technical Communication Characteristics

Web
Jun

Kowalski Dawn
Appendices

Colorado State University
Web
Jun

Buckley Robert
Writing Software Documentation Some Guidelines

California State University Sacramento Nov
Web
Jun

Perelman Leslie James Paradis Edward Barrett
Proposals

Web
Jun

Miller Brett
Project Proposal Software Development Sample

Custom Software Preston Nov
Web
Jun

Buckley Robert
Guide Preparing Project Overview Specification Document

California State University Sacramento Sep
Web
Jun

Buckley Robert
Guide Preparing Software Project Management Plan

California State University Sacramento Nov
Web
Jun

Buckley Robert
Guide Preparing Software Requirements Specification Document

California State University Sacramento Nov
Web
Jun

Buckley Robert
Guide Preparing Software Requirements Specification Document

California State University Sacramento Oct
Web
Jun

Buckley Robert
Guide Preparing System Test Specification

California State University Sacramento Oct
Web
Jun

Buckley Robert
Guide Preparing System Test Report

California State University Sacramento Mar
Web
Jun

Perelman Leslie James Paradis Edward Barrett
User Documentation

Web
Jun

Hinz Stefan Paul DuBois Jonathan Stephens Anthony Bedford John Russell
MySQL Reference Manual

Oracle Nov
Web
Jun
Top Best Practices Consider

Microsoft
Web
Jun


We studied big idea computing allows u perform amazing task information process
You might gotten impression quantify information design algorithm solve problem using computing
In chapter study theory limit computing
There theoretical practical limit computing u
When talk formal definition algorithm introduced mathematical model computation
With model study nature computing including possibly
Alan Turing contributed greatly computability theory model machine
He proved Turing machine powerful computer ever build
If find problem Turing machine solve proved solution computable
problem solvable computing computer
In Alan Turing proved general algorithm solve possible pair exist
halting problem unsolvable using computing
More specifically halting problem undecidable simplest type question answer yes decision question whether program eventually halt stop given input
Obviously infeasible actually run program input see whether halt may take forever infinite loop program
The idea analyze program given input determine whether halt
Alan Turing proved halting problem undecidable proof technique called
It would helpful review wikipedia
Another classic example proof number theory asserts infinitely many prime number
All proof contradiction start assumption proposition trying proof false follow logical sequence valid step arrive conclusion clearly false contradicts also false statement either true false never
If assume halting problem able design algorithm implement program solve problem u
The program take program input program input parameter return answer whether program halt input
Such program may sound strange take program input seen program
higher order function block Snap
take block program input date take source code program data run program
Programs data intrinsic difference tow
The following proof show program answer halting question exist
Here YouTube video illustrating proof Halting problem hard solvable algorithmically even principle
There hard problem solvable principle practice close impossible solve
As see categorize problem performance best known algorithm
If problem solved using fast algorithm problem easy use computer solve fast
On contrary best known algorithm know take long time solve problem hard computer solve fast
Using put algorithm particular category according algorithm complexity
If notation category contains polynomial term problem solvable using algorithm category called P problem Polynomial time solution exist
The P problem easy problem computer
Among problem without polynomial time solution problem guess solution verified polynomial time
For example prime decomposition problem known polynomial time solution given answer verify quickly simply multiplying factor comparing result integer
These type problem called NP Polynomial problem
Collectively call problem take long solve intractable problem include problem best algorithm exponential time polynomial time solution exponent larger

If problem best algorithmic solution computer operation per second would take year age universe solve problem computer
Obviously P subset NP NP defined polynomial answer verification time able solve problem polynomial time P certainly qualifies
Whether P proper subset NP word whether remains one open question computer science
Nobody know answer
You win million dollar solve one
To attack P
NP problem theoretical computer scientist defined another category called problem
The relationship among three category illustrated following figure
All problem category NP problem sharing one special property ALL problem problem polynomial time
Because nature solve ANY single problem category proved NP problem solvable polynomial time

We take NP problem translate solved problem solve problem polynomial time
The overall time still polynomial polynomial polynomial polynomial
Thousands discovered none solved
problem sense difficult known problem
Most computer scientist believe implication otherwise
The creative leap disappear solving problem easy able recognize right answer
Most encryption algorithm computationally secure breaking known efficient polynomial time solution
If encryption broken
There unsolved problem computer science
You find list problem

cover overlap field
The topic essentially divided three main area Logic play fundamental role computer science
Some key area logic particularly significant formerly called recursion theory
The based concept defined logician mathematician
Church first showed existence algorithmically unsolvable problem using notion
Turing gave first compelling analysis called mechanical procedure asserted found Turing analysis perfect
In addition major area theoretical overlap logic computer science One first application use term Logic Theorist system developed Shaw
One thing logician take set statement logic deduce conclusion additional statement must true law logic
For example If given logical system state All human mortal Socrates human valid conclusion Socrates mortal
Of course trivial example
In actual logical system statement numerous complex
It realized early kind analysis could significantly aided use computer
The Logic Theorist validated theoretical work influential work mathematical logic called
In addition subsequent system utilized logician validate discover new logical theorem proof
There always strong influence mathematical logic field
From beginning field realized technology automate logical inference could great potential solve problem draw conclusion fact
Ron Brachman described FOL metric AI knowledge representation formalism evaluated
There general powerful known method describing analyzing information FOL
The reason FOL simply used computer language actually expressive sense FOL easily express statement computer matter powerful could ever solve
For reason every form knowledge representation sense trade expressivity computability
The expressive language closer FOL likely slower prone infinite loop
For example IF THEN rule used limited subset FOL
Rather arbitrary formula full range logical operator starting point simply logician refer
As result computability quite good especially take advantage optimization algorithm compilation
Another major area research logical theory software engineering
Research project Programmer Apprentice program applied logical theory validate correctness software specification
They also used transform specification efficient code diverse platform prove equivalence implementation specification
This formal transformation driven approach often far effort traditional software development
However specific domain appropriate formalism reusable template approach proven viable commercial product
The appropriate domain usually weapon system security system real time financial system failure system excessively high human financial cost
An example domain process designing chip used CPU critical component digital device
An error chip catastrophic
Unlike software chip ca patched updated
As result commercial justification using formal method prove implementation corresponds specification
Another important application logic computer technology area automatic classifier
rigid semantics
Definitions directly mapped set theory predicate calculus
This allows specialized theorem provers called classifier analyze various declaration set subset relation given model
In way model validated inconsistent definition flagged
The classifier also infer new information example define new set based existing information change definition existing set based new data
The level flexibility ideal handling ever changing world Internet
Classifier technology built top language allow logical semantic level existing Internet
This layer called
used reasoning

âãÏÓ obj endobj obj stream hÞbbd Ò CA ß z endstream endobj startxref EOF obj stream Uá
TqË p b ÿün x ëöwdwã Ôâ AâöôØÓk û ª
G
eÏRÊ endstream endobj obj en endobj obj endobj obj stream À C r HÓ íWqe Jâ Çp Ràº ÆÎÉû ñ ô Ø Ûa òèé Zv úØèI Äw ä Ë endstream endobj obj stream Iü ù ðß sÂ YÌj

It almost sound like interested learning new hotness provide money rather one give pleasure learn
You list dozen thing plus whatever new
While may indeed interest I doubt equal
If really consider interesting I recommend first determining interest compare
Rank probably find fall natural interest level ranking
If decide focus number one
However probably find couple hard decide
In case look currently offered going decide
However really specialize one job hunting
If still student opportunity view see want go
Alternatively look job market one use help decide
Not field career outlook
Still question
Ask

use following search parameter narrow result
Welcome Computer Science researcher student professional enthusiast
We share discus content computer scientist find interesting
Q A thread welcome prefer high quality post focused directly graduate level CS material
We discourage post introductory material study CS career
For topic please consider one subreddits sidebar instead
Read original free see Other optic likely better suited Other online community If new Computer Science please read posting
A list book recommendation community various topic found
front page internet
subscribe one thousand community
This archived post
You wo able vote comment
submitted At least major
Post comment
It follows neatly discrete mathematics infinite sum difference equation differential equation calculus necessary statistic lot CS work modeling natural science basic understanding calculus helpful
That also application I far calculus work
Discrete mathematics somewhat useful generally least university emphasis
We one semester pure calculus one pure discrete mathematics requirement mad people take additional course semester solid understanding discrete math assumed various course learning security signalling calculus also come think algorithm crypto practice expanded upon
Signal processing end pulling quite bit calculus transforming
I remember studying I took concurrently Cal I Cal II requirement
The modeling physical phenomenon commonly involve equation solvable numerically many differential integral equation
This fall purview Computer Science way approach without calculus
Computer science math computer
The area probably use calculus run time analysis however barely scratching surface
Well time rethink major path
I hardly get college algebra
Its different kind math
And school math I Calc prerequisite probability stuff
No calc actually used CS class
Maybe one time
If enjoy programming let math discourage bad think Yeah
Most math enhances understanding programming concept thought process
Things like discrete math set theory really help look problem different way
I loved discrete Discrete really point I understood math useful
It point I wished I could go back get earlier math course
I agree
I surprised discrete math taught high school level
Or mix discrete intro CS instead pure CS course
It would helped immensely choosing path college
Linear bad yet
thing love Linear big matrix matrix chance screw problem know
Most teacher lenient messing one calculation complicated matrix computation
Any linear algebra teacher count problem completely mostly wrong messing way missing point
Even annoyed easy make mistake completely invalidate result invented new le prone miscaclulations
He recommended method doctorand letter Das indirecte Verfahren lässt sich halb im Schlafe ausführen oder man kann während desselben andere Dinge denken
Which mean something like You actually think thing calculation
In also known used solve
It named similar
Though applied matrix element diagonal convergence guaranteed matrix either
It mentioned private letter Gauss student
A publication delivered Seidel
Had exact thing happen I took Linear Algabra test
The problem use LA solve chemical reaction easy dropped negative sign setting equation
Took forever find problem
Do linear optimization problem linear programming offered That awesome learning powerful application matrix involve computer graphic
We probably room degree plan unless I want take second victory lap
Too bad really cool class people liked linear algebra
Linear discrete math
That jam yo
Math related lot build calculus
For example probability course CS use calculus define certain thing
Compare major memorize simple equation told scenario used
Are saying algorithm analysis
Complexity analysis would difficult without limit rule
The concept limit important Hardly used directly
I never touched Calc I
In algorithm course would ask complexity analysis given algorithm one written would answer big O notation kinda looking
I could tell damned thing mathematically analyzing algorithm
Placing algorithm complexity class typically counting argument many I performed
Showing two complexity class distinct however requires help calculus
requires help calculus
This help absolutely minimal In trivial case yeah get hairy fast check Flajolet Sedgewick Analytic Combinatorics example complete book discrete math combinatorics like Knuth Concrete Mathematics
I remember serious calculus Knuth book
Granted calculus real analysis play significant role theory area computer science
However symbolic logic play far greater role CS whole yet studied much rigor much zeal calculus
I speak proving complexity
Termination useful
I curious school year course
I year algorithm course professor love rigour
Boston University
It course
The professor kind eccentric
We focused algorithm worked proof correctness optimality
Obviously complexity also important viewed described many operation algorithm perform
I talked classmate took course another professor seemed lot math involved using complicated summation calc concept prove complexity
I lucky
But small part calculus There one class write program slicing stuff calc long form
Kinda using computer recursion manually calc limit
I felt pretty accomplished I got working
That definite integral Riemann Sums thinking
problem
I graduated highschool year ago went right college
Because math I finally got last year I wo graduate end next year
I kept failing math taking semester going back
Over time I learned programming found math taught along programming course would much easier
So learn side
But I never gave either He went concert deleted Weird Edinburgh Informatics CS
generally Norway
Information system though uh something else IT management shudder
And Computer Engineering class
There Computer Engineering major US
I exactly know I believe supposed mix CS EE
At Purdue went bit like Computer Science You know enough math prove theorem complexity computational geometry
Requires Calc
You know program embedded system supercomputer everything
You know distributed calculation get divvied right way
You formally instructed Java somehow learn Matlab Python leave
Computer Engineering Electrical engineering focus integrated circuit design digital system signal processing etc
You might able program well except VHDL design system program counter
Probably math intensive lot
Lots physic heart ache
Computer Technology The applied lot
Setting network
Learning build website
Lots Java
Little theory
At tOSU like CSE Computer Science Engineering It degree College Engineering
I completed education yet go Calc III along set theory class another discrete mathematics class later
CIS Computer Information Science It degree College Arts Sciences
I CSE I entirely sure true difference major
CIS student take engineering course though course really helped problem solving thinking process
I believe need Calc II take discrete class
Sorry I terribly sure go
Just thought interesting split two different college
deleted UW Washington
Wisconsin
Something else
Hey u web developer write real code
Sorry I always understood web developer mean developer
I never really around designer call web developer
True CS algorithm analysis coding
If want developer need CS degree
As someone said earlier CS math actual computer
Well want job degree sure hurt
But necessarily need degree
Some college make clear separation CS Software Engineering major
I wish
I agreement
If want grunt work need CS degree
If want work really cool project CS degree invaluable
Can confirm I use CS solve problem every day coding way expressing solution
I love job
coding way expressing solution
Well yeah exactly
I would even go far say theoretical CS simply math
We use slightly different formal notation slightly different concept real mathematiciants
But overlap actually pretty huge since math department nowadays tend utilize computer labor intensive work anyways
deleted But I offload heavy web application calculation backend front end using javascript
Basically constraint satisfaction problem take invalid state fix making minimum possible change
Only catch
almost instant possible state
There work web development solid algorithm background got ta know look
deleted Hah yea trust I get time I tell people I work web development
Usually followed blowing mind see stack
Now I like blow mind
I found hate UI work anything especially Web
What stack working
He designer
That page TERRIBLE
Ugh
The vast majority CS graduate either
I generally mean development I say web development
Does web development mean stuff
deleted In experience folk advertising work ask developer
Has anyone else seen
meeeeeeh necessarily
basic algebra time mostly school I finally reason math
After climb algebra past calculus I think fine
I beg differ
The problem seems teaching thing promise useful later something else
The promise lot people got high school often failed materialize
It taught way around
Here problem X let analyze ah woha dude sick
But course never happen within current system
See Dewey Montesori last decade education research
You would first graduate computer science struggle math component
That might mean going grad school professional scientist question mean ca scrape algebra calculus go world useful work
Not every computer scientist actually need calculus
In real world field end specializing
University try give broad overview possible thing lot web developer game play programmer network administrator network programmer etc
never touch complex math
Graphics programmer data modeller people serious performance constraint might graphic programmer might touched socket programming since university
The professor make big difference worth asking around good instructor teaching course require
No time start learning math
Go office hour
Talk ta professor
Get tutor
Not one c class I ever taken used sort calculus even mentioned
What run time analysis would need calculus
To op ask around see actually use c class school
Ask c department head upperclassmen making mind switch
I hated calc work aerospace software industry never see
anaylsis randomized algorithm also approximation algorithm Amortized Online algorithm
Calculus used instance My algorithm class cover
Did learn particular c class
I would guess algorithm used developer career
These come statistical work machine learning context
Anything relies heavily probability liable rooted integral calculus
It pretty unlikely developer would actually math understanding arguably useful
Personally I think solid understanding probability theory invaluable applied AI work really clarifies motivation behind concept algorithm
If think computer science program computer probably chosen wrong major
If goal developer likely wo use advanced math job computer science programming thing
But make class graduate computer science degree much easier time getting developer job
It depends university
I sucked math
I know college mine computer science option light math came minor business admin
All I took remedial algebra algebra people suck algebra statistic class
That
Some school mathy others
Some vocational learn actually programming le calculus
I think underestimate
That said CS program better preparing student grad school industry
Industry need developer programmer
Just calculus isnt something enjoy doesnt mean cant highly successful developer industry
It depends industry
Go work project interest dont solely rely curriculum prepare job market
You still give calculus try difficult also whole lot interesting algebra make lot le tedious get
This somewhat upsetting news
I struggle basic algebra well
Always struggled immensely math
I always struggled math I sure I never enjoyed I never particularly tried hard school I several bad teacher
One earlier math teacher somehow got job despite lying CV guy qualified
Now I terrible math
I forgotten thing absolute basic
It annoying conflict interest I stalling going university I need essentially relearn math scratch
Ugh
I similar problem I could pas calc I needed pas calc
I thought switching IT I knew I would hate professor recommended Information Systems aka Management Information Systems
Its focused programming business setting need math class
A CS minor also helpful
Check maybe like
While true runtime analysis us calculus concept practice hard intuitively
Hey I got set run array three level
That probably going take long time LONGER time every time I add something array
Maybe I like pretty easy conclusion come
And advantageous skip right This going scale cubically blow hard get
Also calculus teach strategy HAVE iterate array like despite sucking
Only CS experience
Linear algebra regular algebra
Get tutor live hallway outside professor office
You may also want look Software Engineering instead
The thing computer science undergraduate course typically theoretical computer science also software engineering field
Strictly speaking would seldom use calculus theoretical computer science useful generally
Let give example variant behind many multimedia compression format like JPEG
Ultimately understand need good background
You use calculus solve problem outside theoretical computer science
I find topic closer theoretical CS pretty hard like say graph theory harder calculus
Which mean would enjoy working IT whatever want CS degree
Was hoping go application development
You may need math much opinion would close path early dismissing math hard
IMO studying much better widen opportunity instead focusing single goal
I mean programming barely need math people develop software solve problem math make possible solve large number problem
Most time using library framework code written others
Sometimes hard math already implemented library need know little math understand use otherwise might slip bug know going
Sometimes bit need hard math yet need
An example
It computer vision library enabling process image video extract feature perform computation example count much people image
It lot heavy math underneath generally simple use
It implement example face object detection
You use label face image like Facebook track face video
It feature large number free parameter adjust make detect face full body apple etc
using algorithm
OpenCV come common classifier good

If interest computer vision lot neat stuff webcam patience follow tutorial
Now suppose developing product us OpenCV
Here knowing math could definitively help
I remembered struggling horribly college algebra
This made think I could finish program
This caused bullshit feeling Math Anxiety

I learned algebra calculus
You fine Well CS
But bear mind undergraduate math class put lot focus tricky problem
It probably good learning math discouraging seem irrelevant
And entirely relevant
You wo much hand computation higher level math class certainly wo computer science
You work equation confidently time time need figure something code probably lot better looking answer specific mathematical question need
But practice get calculus class problem tested honestly getting feel math really useful
Granted algebra really useful
Like abstract algebra using algebra arithmetic
But enjoy programming theoretical computer science learn appreciate math time
In simple way Calculus used figure information directly front
It help understand calculus write algorithm get information data acquire data
Ex You work company make window pane order many different size quantity
You many packaging size ship window want waste space
You need figure best combination window packaging maximize output using least amount box ship
You would write computer program take order calculate window shipped order program would able take future order input determine best solution
Calculus would main factor example
Just note Software Development CS major probably wo learn math
In normal software development almost never use
While others saying computer science broadly true really depends school balance would
I look whether school elocution offer software engineering degree offer concentration
Also interested project work vastly improve comfort tackling math take whack raytracer
Depending much implement cover everything basic vector matrix math dealing geometry full numerical integration light bouncing global illumination
I recommend book like
What shame
This fault
Those subject badly taught usually
Start something like say search algorithm
And go researching need logarithm limit etc
It easier study something curious need driving effort
I used teach failing student almost every case problem education addressing student unique personality
OP give
I take remedial algebra trig algebra Calc discrete math linear algebra
I actually took linear algebra three time dropping twice
If put effort eventually make
As someone else mentioned Calculus different type math
I think I used twice going stuff
Discrete math linear algebra stats proof based skill definitely transferred well upper division CS class like theory computation AI compiler
With Calculus much math developing ability solve problem wiring connection brain
Edit Replied wrong parent
Actually ashamed admit I remember integrate anymore Calculus minimally required core computer science course
However stuff like machine learning AI numerical optimization etc etc require strong foundation math
Linear algebra stats
Calculus nearly useful linear algebra combinatorics
You need good understanding understand many related concept algebra combinatorics though
Computer science professor
Here thought issue
I sure mean emphasized
I would say generally emphasized much
But course relative
Certainly emphasize calculus lot would say art major
In program require student prepared take Calculus I order declare
major
Our requirement

include semester calculus discrete math statistic math elective
I favor Ours professional degree like

would
Our program lead Bachelor Science includes expectation somewhat broad understanding
Certainly expectation include understanding mathematics
We full stack program
We expect graduate knowledge everything electron transistor circuit computer architecture operating system way application programming
Calculus certainly required physic behind lower end stack
More generally going call fully literate technologist I say need understand calculus I agree fully literate
Making calculus give good evidence mathematician call mathematical maturity handle mathematical reasoning
In experience similar mental skill required
class
If student trouble getting prerequisite calculus reasonable say Maybe
field
I think point way
Calc interesting straight memorization basic algorithm
If commit time effort pas class flying color never learned thing calculus really
I absolutely agree point number
It actually used directly thing like notation
You understand basic idea without science going theoretical work say reducing complexity algorithm tiny fraction exponent going need calculus
But aside discrete math much important
But able program us I think lot skill able discrete able get calculus
If trouble understanding derivative going trouble understanding harder comp sci problem I think
I one mind
Took physic I much need calculus I feel like I much better understanding world I live
Science literacy kind important
going theoretical work say reducing complexity algorithm tiny fraction exponent Do people actually
Every time I needed optimize I used bench marking tool find slow spot go
analysis barely play role
Mostly understanding technology using knowing part slow
For example method called often slow always hit database
If cache value could speed significantly
People work
If asking whether I likely industry probably fraction exponent probably le important suggesting likely reducing constant factor
I mean dataset fixed value n O n algorithm going take long time j kn fact j k constant
I might reduce bit getting O n real world going lot faster reduce k factor depending n maybe focusing j instead anyway
I mean better O nlogn sorting algorithm least general case insertion sort O n small enough n insertion sort faster much algorithm better characteristic like quicksort merge sort might drop insertion sort innermost level recursion
So real world shaving fraction exponent something likely
The theoretician may come back u better algorithm eventually might large enough constant matter working data might complex enough algorithm anyway willing take time simpler algorithm sure right
But answering part quoted
To answer part Every time I needed optimize I used bench marking tool find slow spot go
analysis barely play role
There certain amount could head design phase
You hopefully form anyway designing data structure program example hopefully least choose list hash table hopefully almost never use linked list
This minute design might save later suddenly need refactor huge chunk design
But least I done I rarely actually proved property
I mainly working fact I already know standard library tool I going use since I unlikely ever write sorting algorithm I help
Thank reply
It informative
There certain amount could head design phase
When I say barely play role exactly I mean
When picking data structure useful day day work
But picking data structure notation
You also care memory efficient long take resize structure
Do quick write link list
They good structure like queue
When picking data structure useful day day work
But picking data structure notation
You also care memory efficient long take resize structure
though I suspect different letter used measure play role
Resizing structure would go analysis actually unless chosen reason structure must manually resized
So concern though usually still talk lazily mean case case care might occasionally take time resize still minimal overall
Like ArrayList Java vector care much logn resizes might happen appending still dominated O
So right kind complexity analysis thing mentioned ca going find even harder find
Do quick write link list
They good structure like queue
I actually somewhat surprised find almost faster even queue structure like resizable make much efficient linked list queue operation
Linked list supposedly upper limit constant time resize practice true even use raw malloc often similar performance characteristic garbage collection anyway usually fast sometimes OS walk free list housekeeping give memory
And course Java even worse allocation range basically free GC maybe malloc
At point real advantage I think linked list might require le synchronization overhead least le contention queue used multiple thread
Even I bet still lose structure like problem made fit
That say I never use linked list
They simple enough write data structure C allowed use library like school assignment I see much use real world outside special case like free list garbage collector
Admit
You taking data structure course right
This sound like stuff I knew I school
Now important
It like I code monkey
I work R D large tech company
You use software I wrote everyday
Sorry I looked comment history
A lot time critical
If used resizable queue might miss window
Admit
You taking data structure course right
Actually couple year ago factor heavily hardest interview I ever lead offer I must something right
I matter month degree yeah data structure back
I also took break school ended working industry awhile though admittedly never anything suggesting
A lot time critical
If used resizable queue might miss window
Then I wonder deal issue I mentioned allocating new object GC language like Java avoid Java garbage collector making miss window
If calling malloc directly new deal fairly variable amount time take
If preallocate chunk memory allocate sound like much fundamentally different allocating large enough ring buffer begin
I also wonder much cache miss cost given linked list
I sure know situation I case linked list win maybe found one
But seem like entirely many people skip idea entirely go straight resizable array linked list
Generally language like Java wo work since hard predict GC kick
Resizing vector issue get large
I never worked project call malloc cause time window miss exist
Think LTE something tiny time window
They everything
For worth std implemented using linked list
Sanity already said yes people
However use theoretical research
The problem solved extremely general absolutely physical computer attached
The algorithm optimized use tool mentioned
They use tool mathematics
These proof reduction application usually
They solving open question
The whole concept P v NP example solved theory
Not application
That bound reduction come
Even formally break still important keep asymptotic complexity mind
After reading story I know person thinking
reducing complexity algorithm tiny fraction exponent going need calculus Really
In way would require usage calculus
At point prove done
By complexity I mean sort thing measured
And Calculus value But limit specific part calculus
Limits also crucial concept topology people say topology required understanding complexity analysis
Ah fair enough
I suppose key bit Calculus would Math class typically take learn limit
Also rule incredibly useful us derivative I recall
rule To honest I used statistic outside calculus class
But still probably learn go Depending level determination learn nearly anything go
But going apply directly opposed letting Wolfram Alpha work need least understand derivative
Which fair easiest part Calculus still
The main reason historical
Most CS program grew Math department
A good deal development work requires calculus analysis I get use basic calculus analyze sensor performance
Honestly I think program place emphasis calculus discrete mathematics
Instead taking Calc I Calc II compress one class require Discrete I Discrete II
Why compress calculus
Because underlying concept derivation integration may crucial field computer science student mastery trigonometric substitution
Focus differentiation integration give tool dig deeper need future
Instead teaching solve calculus problem teach
On hand discrete mathematics much core computer science many important topic master
Just Of course many point extremely broad yet essential mastery many higher level computer science class
Courses poor discrete background would handicap If I come across problem I solve calculus I may remember integrate part application like Mathematica
I understand significance resulting integral I I utterly lost
I absolutely love beauty calculus sometimes get bogged minutia technique lose sight big picture
Often computer science
Calc important class I took CS
It developed problem solving skill much else
The reason math taught school people ever actually need hone problem solving skill well
My Calc teacher told u You study algebra learn arithmetic study calculus learn algebra study differential equation learn calculus
get good course
I see
I really get calc Complex Analysis
Proving calculus also definable complex number made everything click oh yeah I actually understand whole calculus thing
PDEs constraint boundary condition help calc much I used occasional calc knowledge
Clearly talking abstract algebra Calculus class whipped algebra skill shape
Every great calculus teacher I constantly brought failing algebra common way fail calculus
This actual reason calculus required CS major
Thanks
No I say honestly real reason required university system designed make college professor
Calculus foundation much higher mathematics education would severely incomplete trying get PhD CS foundation
I know math school seems consist mostly Here rule learn heart Here problem
Apply rule learned rather coming solution
Though changed university
Right
calculus class often teach right way though
Anyone thread say need calc categorically understand computer science
Computer science time pure math computer
Programming Computer Science two different area confuse thing
CS degree used lot math almost calculus
Calculus show fair bit Machine Learning though much linear algebra
This true people Machine Learning
It also show graphic computer vision robotics And signal processing
And proof even equation lead new innovation
And calculus linear algebra real fun start
Please confused calculus pure math
Sure mathematician work area analysis calculus even research area name class wrong equating calculus
He
He said CS often time deal pure math
That response someone asking CS student must take calculus
In fact depressing number comment thread answering Why math
instead Why calculus
Well Calc kind gateway class higher math
Sure version statistic physic class assume know Calc suck wo convinced many claim make derived using Calc
So OP asks Calc important CS everyone answer math important CS Calc viewed many necessary prerequisite real application math anything
It like someone asking walking important gymnastics everyone answering balance important gymnastics
All higher math
That rather extreme position take
In entire math major class really relied differential equation real analysis better statistic class I would required
In one linear algebra class differentiation come example linear operator exactly critical class material
In semester half graph theory semester half combinatorics two linear algebra two abstract algebra one cryptography one code use calculus
I think common misconception computer science I mean well advertised
I remember applying university trying pick computer science software engineering could figure difference
I got lucky picked computer science ended loving theory side way programming side got lucky haha
I struggled theory side still benefited
Now I work job theory I struggled applied familiar context end goal coming back
They different conceptually job market
Computer Science remains preferred degree large software company reason student enter program
I assure position compaines benefit let alone require Calculus
If Computer Science purist want get PhD research new algorithm yup need calc
If like u wanting make six figure making new tech computer need
I disagree six figure tech job tend require benefit advanced math
The way I see two reason pay someone lot money tech They managing large team leading project big impact bottom line otherwise shouldering lot responsibility
This may require much math job likely get right undergraduate school right graduate school matter
It take experience going get
They extremely productive individual immediately recognizing get past important technical hurdle get stuff implemented
Here advanced math super important
Programmers follow instruction Go make widget website dime dozen
You need pay nose get someone week
Much better pay big buck programmer go implement widget day come back tell Oh I noticed backend really dumb O n scan python could done one join database
And earth tail latency crappy
Is problem caching strategy
What I saying end game employee want make lot money key part work
No one going give responsibility good bit work experience demonstrable skill
Until best bet productivity machine mean math skill understand improve system mention ability demonstrate engineer interviewing overcome technical problem face
I think familiar programmer salary
You mock dime dozen folk starting salary silicon valley high cost living area
Add matching bonus well
You definitely need expert anything make six figure
Calculus hardly advanced math This need constantly define programming different computer science getting tired
It seems I read type comment every post whenever anyone say I want programmer major Computer Science people always go nut thing
Programming big part beginning theory later course
If someone interested programming living else would major
Programming tool
CS finding efficiently use tool tool might come across
Software engineering
Are software engineering degree place CS course class side
legitimate question Many university offer CS degree
Mine software engineering option
In school software engineering focus within Computer Science degree
So AI Web Development Data Management Computer Graphics Animation Game Development etc
They grouped Computer Science
Each subject specific study become known focus within Computer Science degree
Within field graphic calculus integral hah performing convolution filter base image
In addition necessary calculate reflection refraction Ray tracer
Within field algorithm design calculus necessary calculating run time well many many optimization algorithm gradient descent example
Compression algorithm require understanding Fourier cosine transforms well matrix operation
Source major
calculus necessary calculating run time Is
Can please elaborate point
I saw argument couple time thread I fail see calculus actually applicable area complexity analysis
In general case calculus useful applying Master Theorem
However many specific delightful us calculus proving runtimes specific algorithm
One favorite example proving reshuffling algorithm heap linear time
The proof involves construction Taylor polynomial requiring least second semester calculus
Master Theorem Are talking theorem
I reckon requires calculus
One favorite example proving reshuffling algorithm heap linear time
The proof involves construction Taylor polynomial requiring least second semester calculus
Hm got
But said specific case
Perhaps directly master theorem familiarity math certainly help
As example consider bound established Shannon entropy Huffman encoding
I know much information theory really need advanced calculus deriving shannon entropy
Also topology used specifying lower bound class problem described algebraic computational tree
Yet CS student forced take topology class Shannon derivation become realized large value That require limit fundamental building block calculus
If looking justification need calculus I sure find
But trust want computer scientist code monkey need calculus
As I said limit calculus
Surely calculus class people make use special case limit
But limit important teach people general topology
want computer scientist code monkey need calculus What need way calculus combinatorics logic
Bad math determined CS
So I went local community college took class semester starting studied like demon
Made algebra precalc trig A
Calculus brain mush first I invested tutor visited uni math resource center almost daily clicked next semester calc pretty easy
It took long time doable
You use later education various analysis discipline curriculum Operational Research similar part need
Depending field go Calc big part scientific endeavor
But honest key Calc learning manipulate equation symbol symbolic manipulation key programming activity
I found school like use Calculus mean limiting number people seeking CS degree difficulty
While Calculus highly useful necessary CS Linear Algebra opinion
Calculus hard enough weeding class
Yes objectively
It difficult grasp first people might wrestle bit OK cover concept basic advanced math CS largely math degree
Derivation operation like addition subtraction
Calculus required psychology class people crammed hall listening teacher refusing explain thing foundational information three book assigned
It depends institution
My Calculus Science Engineering course pas rate many take twice even three time
The material might difficult grasp exam lab might
Labs
In calculus
Your psychology class sound like calculus class I take
It similar school I feel like discrete math tends fill role
I find whole We going teach essential skill want weed people major gon na make fight like pit dog meat tossed
unethical I paying teach
If going I like refund
People starting different level experience
It fair race half people head start
You may developmental biology class Rutgers person competing TA sorority sister roommate lab essentially becomes personal tutoring session
No I bitter
deleted Calculus pretty much required science
With computer science computing math
Higher level math different lower level math use
As get higher level involving proof might even look like math
This understanding computer thing issue involving direct job training
You probably use math workforce capacity job related automating task using computer hand
I remember I part committee help redesign university Computer Science curriculum student complaining take many math class
Then I brought point I never known great programmer struggled math
Are know anyone could pas calc ended successful programmer
If want machine analysis going need solid bit calculus
Not everyone computer science go route quite helpful many area CS
Well really depends course work going take
We different concentration university eventually turning major
Software Engineering Computer Engineering Graphics
Computer Engineering definitely need calculus huge part physic
One larger scale project design create circuit board understanding magnetism electricity help
Calculus prerequisite physic
The highest level math course I really needed software engineering statistic really managerial position
We learned way use number help determine good code v bad code course number alone
But statistic experience definitely helped although Excel work lol
For graphic Linear Algebra huge
Mostly taught lot matrix operation operation transforms translation done matrix operation
In math course help understand machine work general
You get without knowing intricacy going write code ever else kind point comp sci
Edit I even feel comfortable saying point comp sci XD
We always taught look code tool problem solving using computing theory actual thing
You wo directly use lot calculus upper lever computer science class could probably take CS core class without ever computing integral
However lot theoretical concept require level mathematical sophistication unlikely without strong foundation calculus
For example This thread linked elsewhere reddit
Most university I loved requires Calc We actually go Calc also take physic
I really miss
I would say emphasized required sure emphasized
I never really saw come outside physic image processing
You use certain algorithm implement
For example gradient descent
Most upper div c course like machine learning big data computer vision use LOT math
There also good chance run lot linear algebra dealing graphic image processing etc
Calculus necessary stochastic turn integral pursuit basically anything science
I ca believe made take way Multi
Seems unnecessary
It
There really much calc needed
I ca remember last integral I actual CS
Because similar major science engineering mathematics require calculus
Most branch science require significant use statistical analysis
If know least calculus really understand statistic
Engineering program require calculus traditional branch heavy physic component
If know least calculus truly understand physic
Plus I went school every engineering major take field course kind generally electromagnetic theory fluid mechanic
These fundamentally require calculus
Calculus fundamental mathematics I ca even imagine could construct math major without
I always wondered question I taking analysis algorithm course I go back review basic Calc stuff
I think emphasized one course much
CS discrete math calculus
Minimization easier think thing shape try reduce nothing
CS mostly math computer
It science computing thing
The concept taught calculus fundamental addition multiplication
You going get far without
I struggled math I wanted software work computer
I know exactly meant long run I succeeded mostly I worked hard
I barely squeaking calc I got calc beyond I started working hard figured
Now I got C calc I failing start succeeding end
That I learned grade matter
talk math class important
Not keep suspense I got BS CS MS Controls robotics
Aside struggling algebra might general struggle math may traced back far elementary school
Working hard simple stuff like multiply divide two number hand help
It teach follow series step algorithm order solve problem
Algebra much larger subject imagine
I kept learning I done taking math class MS degree
I often time algebra I programming
You keep learning practicing time
So worry struggling long keep
The calculus important mathematical maturity
Discrete math used heavily computer science
Technically need high school algebra learn discrete math
That said exposure math higher level may seen high school better preparation course
You need somewhat familiar proof completely rock solid algebra simply stated practice help
Also school giving
degree probably implied seen calculus
Tradition
Calculus matter lot discrete math algebra combinatorics fractal geometry chaos
But historically calculus strong hold science engineering
It might matter also Calculus overlap well many major
Use site constitutes acceptance
reddit All right reserved
REDDIT ALIEN Logo registered trademark reddit inc

ÐÄÆ obj R stream xÚÍ UþÌ µ íxÕF ýÿÛíùf psLFõÙ Ie ú kû âDB C ý U k
x ÇàöÑ Å aDíd hÑü I ii Yé Õ g K k S YoÜå Ò r ÔYjç K iÜt ä àOB h ú mÞg
Á CeeÝ J ê ûo
Ú CVgÈ Ù è ÁÀ ÜÕ Wa À PÎêÈOà ìÜvÄ endstream endobj obj endobj obj R R R endobj obj R R R R R R R R R endobj obj R R stream endstream endobj obj endobj obj R R endobj obj R R true stream xÚµ B âBL øð Èüæó ÃL áÎÒæË

