In computer science computer program take one generated combine one program
Computer program usually made multiple span separate object file compiled computer program
The program whole refers object file using symbol
The linker combine separate file single unified program resolving symbolic reference go along
similar process available many operating system postpones resolution symbol program executed
When program run loaded well
Dynamic linking require linker
The linker bundled system called ld see information


In computer science computer program take one generated combine one program
Computer program usually made multiple span separate object file compiled computer program
The program whole refers object file using symbol
The linker combine separate file single unified program resolving symbolic reference go along
similar process available many operating system postpones resolution symbol program executed
When program run loaded well
Dynamic linking require linker
The linker bundled system called ld see information


In computing take one generated combine single file file another file
A simpler version writes output directly memory called though typically considered separate process
Computer program typically composed several part module need contained within single case refer mean
Typically object file contain three kind symbol For compiler object file result compiling one input source code file
When program comprises multiple object file linker combine file unified executable program resolving symbol go along
Linkers take object collection called
Some linkers include whole library output include symbol referenced object file library
Libraries exist diverse purpose one system library usually linked default
The linker also take care arranging object program
This may involve code assumes specific another base
Since compiler seldom know object reside often assumes fixed base location example zero
Relocating machine code may involve absolute jump load store
The executable output linker may need another relocation pas finally loaded memory execution
This pas usually omitted offering every program put address space conflict even program load base address
This pas may also omitted executable executable
On variant process performed linker assembling object file program called loading executable code onto file
Additionally operating system program handle job linking loading program
Many environment allow dynamic linking postponing resolving undefined symbol program run
That mean executable code still contains undefined symbol plus list object library provide definition
Loading program load well perform final linking
Dynamic linking need linker
This approach offer two advantage There also disadvantage Static linking result linker copying library routine used program executable image
This may require disk space memory dynamic linking portable since require presence library system run
Static linking also prevents DLL Hell since program includes exactly version library routine requires conflict program
In addition program using routine library require entire library installed
As compiler information layout object final output take advantage shorter efficient instruction place requirement address another object
For example jump instruction reference absolute address offset current location offset could expressed different length depending distance target
By generating conservative instruction usually largest relative absolute variant depending platform adding possible substitute shorter efficient instruction final link
This step performed input object read assigned temporary address pas subsequently reassigns address may turn allow relaxation occur
In general substituted sequence shorter allows process always converge best solution given fixed order object case relaxation conflict linker need weigh advantage either option
While instruction relaxation typically occurs relaxation already take place part optimising process
In case relaxation also occur part relocation process combined technique
In environment including mainframe type program known
However linkage name implies additional capability allowing addition replacement deletion individual program section
Operating system different format executable contain supplementary data component section program individual program section replaced part program updated relocatable address reference corrected linkage editor part process
One advantage allows program maintained without keep intermediate object file without program section changed
It also permit program update distributed form small file originally card deck containing object module replaced
In system object code form format image update introduced system using medium
In later release subsequent system contain additional data version component module create traceable record update
Note term linkage editor construed implying program operates mode like example text editor
It strictly intended execution editing command supplied user sequentially organized record unit record medium card deck example DASD medium disk file example tape also supported tape often used initial installation OS

Also called linker combine object form executable program
Many allow write different piece called separately
This simplifies programming task break large program small manageable piece
Eventually though need put module together
This job linker
In addition combining module linker also replaces symbolic real address
Therefore may need program even contains one module
Stay date latest development Internet terminology free weekly newsletter Webopedia
Join subscribe
The following fact statistic capture changing landscape cloud computing service provider customer keeping
The following computer science fact statistic provide quick introduction changing trend education related career
From ZZZ guide list text message online chat abbreviation help translate understand today texting lingo
Learn five generation computer major technology development led computing device use Computer architecture provides introduction system design basic computer science student
Networking fundamental teach building block modern network design
Learn different type network concept architecture

learn share knowledge build career
I wanted know depth meaning working compiler linker loader
With reference language preferably
C preprocessing first step compilation
It handle The purpose unit convert C source file Pure C code file
There Six step unit It combine character source file form TOKEN
A token set character line
Therefore unit compilation also called TOKENIZER
It also remove comment generates symbol table relocation table entry
This unit check syntax code
For ex The code generate parse error equation balanced
This unit check internally generating parser tree follows Therefore unit also called PARSER
This unit check meaning statement
For ex The code generates error Assignment incompatible type
This unit independent CPU two type optimization This unit optimizes code following form For ex Here compiler know value compile time therefore also know condition always true
Hence eliminates else part code
For ex optimized follows For ex In code local used loop optimized follows Code generation Here compiler generates assembly code frequently used variable stored register
Here optimization CPU dependent
Suppose one jump code converted one The control jump directly
Then last phase Linking creates executable library
When executable run library requires Loaded
ASCII representation Hope help little
First go diagram You make piece code save file Source code As name suggests part compilation
They instruct compiler required actual compilation
You call phase Text Substitution interpreting special preprocessor directive denoted
Compilation process program written one language get translated another targeted language
If error compiler detect report
Assemble code get translated machine code
You call assembler special type complier
If piece code need source file linked linker link make executable file
There many process happens
Yes guessed right come role loader It load executable code memory program data stack created register get initialized
Little Extra info see memory layout
Compiler It program translates high level language program machine language program
A compiler intelligent assembler
It check kind limit range error etc
But program run time occupies larger part memory
It slow speed
Because compiler go entire program translates entire program machine code
If compiler run computer produce machine code computer known self compiler resident compiler
On hand compiler run computer produce machine code computer known cross compiler
Linker In high level language built header file library stored
These library predefined contain basic function essential executing program
These function linked library program called Linker
If linker find library function informs compiler compiler generates error
The compiler automatically invokes linker last step compiling program
Not built library also link user defined function user defined library
Usually longer program divided smaller subprogram called module
And module must combined execute program
The process combining module done linker
Loader Loader program load machine code program system memory
In Computing loader part Operating System responsible loading program
It one essential stage process starting program
Because place program memory prepares execution
Loading program involves reading content executable file memory
Once loading complete operating system start program passing control loaded program code
All operating system support program loading loader
In many operating system loader permanently resident memory
Wikipedia ought good answer thought It read source file may type etc translates file called object file
It combine several file may generated multiple source file executable file ELF format GCC
There two type linking A program load executable file primary memory machine
For study three stage program execution Linux please
LinuxJournal explains concept clarity
It also explains classic name came
assembler output A quick summary got executable give file friend customer need software run software say typing command line Once program loaded memory control transferred program making PC program counter pointing first instruction Operating System An operating system OS system software manages computer hardware software resource provides common service computer program
The operating system component system software computer system
Application program usually require operating system function
Compiler A compiler computer program set program transforms source code written programming language source language another computer language target language latter often binary form known object code
Interpreter interpreter computer program directly executes
performs instruction written programming scripting language without previously compiling machine language program
Assembler An assembler program take basic computer instruction convert pattern bit computer processor use perform basic operation
Loader loader part operating system responsible loading program library
It one essential stage process starting program place program memory prepares execution
Linker linker program combine object module form executable program
Preproccesor Preproccesor text substitution tool instructs compiler required actual compilation
compiler change check source code error change object code operating system run
You often write whole program single file linker link object code file
program wont get executed unless main memory A compiler software program compiles program source code file executable program
It included part integrated development environment IDE programming software package
The compiler take source code file written language C BASIC Java compiles code language machine code assembly code
This code created specific processor type Intel Pentium PowerPC
The program recognized processor run operating system
Loader An operating system utility copy program storage device main memory executed
In addition copying program main memory loader also replace virtual address physical address
Most loader transparent directly execute operating system us necessary
Linker Is program adjusts two program segment may simultaneously loaded executed unit Also called link editor binder linker program combine object module form executable program
Many programming language allow write different piece code called module separately
This simplifies programming task break large program small manageable piece
Eventually though need put module together
This job linker
A compiler special program process statement written particular programming language turn machine language code computer processor us translates line code programming language machine language
creates link two program
load program memory main database program etc
Compiler system software correct error program object file message etc Linker system software combine One objectfiles possible library code either exicutable library list error Loader A program load executable file primary memory machine By posting answer agree
asked viewed active Get In get see By subscribing agree
site design logo Stack Exchange Inc user contribution licensed

In computer science linker link editor computer program take one object file generated compiler combine single executable file object file
A simpler version writes output directly memory called loader though loading typically considered separate process
This video targeted blind user
Attribution Article text available Creative Commons image source video

learn share knowledge build career
What difference compiler linker C
The compiler convert code written programming language machine code representation understood processor
This step creates file
Once step done compiler another step needed create working executable invoked run associate function call example compiled code need invoke order work
For example code could call routine C standard library
Your code nothing actual service provided report must called actual code resides somewhere common C library
To perform many others linkage must invoked
After linking obtain actual executable run
A compiler generates object code file machine language source code
A combine object code file executable
Many IDEs invoke succession never actually see linker work
Some distinct linker linking done compiler part work
By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

A compiler software program transforms source code written developer programming language low level object code binary code machine language understood processor
The process converting programming machine language known compilation
The processor executes object code indicates binary high low signal required arithmetic logic unit processor
An assembler type computer program interprets software program written assembly language machine language code instruction executed computer
An assembler enables software application developer access operate manage computer hardware architecture component
An assembler sometimes referred compiler assembly language
It also provides service interpreter
An assembler primarily serf bridge symbolically coded instruction written assembly language computer processor memory computational component
An assembler work assembling converting source code assembly language object code object file constitutes stream zero one machine code directly executable processor
Assemblers classified based number time take read source code translating assembler
Moreover assembler provide enhanced functionality enabling use control statement data abstraction service providing support programming structure
In computer science computer program take one generated combine one program
Computer program usually made multiple span separate object file compiled computer program
The program whole refers object file using symbol
The linker combine separate file single unified program resolving symbolic reference go along
similar process available many operating system postpones resolution symbol program executed
When program run loaded well
Dynamic linking require linker
Comments closed
The Western Design Center

In collection used often
These may include configuration data documentation help data message template specification
In referred
A also collection implementation behavior written term language interface behavior invoked
For instance people want write higher level program use library make instead implementing system call
In addition behavior provided reuse multiple independent program
A program invokes behavior via mechanism language
For example simple C behavior library invoked using C normal
What distinguishes call library function versus another function program way code organized system
Library code organized way used multiple program connection code part program organized used within one program
This distinction gain hierarchical notion program grows large program
In case may internal library reused independent large program
The distinguishing feature library organized purpose reused independent program user need know interface internal detail library
The value library lie reuse behavior
When program invokes library gain behavior implemented inside library without implement behavior
Libraries encourage sharing code fashion ease distribution code
The behavior implemented library connected invoking program different
If code library accessed build invoking program library called
An alternative build executable invoking program distribute independently library implementation
The library behavior connected executable invoked executed either part process starting execution middle execution
In case library called loaded
A dynamic library loaded linked preparing program execution
Alternatively middle execution application may explicitly request module
Most although programmer also create custom library
Most modern provide library implement majority system service
Such library service modern application requires
As code used modern application provided system library
The earliest programming concept analogous library intended separate definition program
brought COMPOOL Communication Pool concept popular attention although adopted idea software
Following computer science principle Comm Pool purpose permit sharing System Data among many program providing centralized data description
also included primitive capability library system described inadequate library facility retrospect
Another major contributor modern library concept came form innovation
FORTRAN subprogram compiled independently compiler lacked
So prior introduction module FORTRAN subprogram impossible
Finally historian concept remember influential
Simula first language nearly identical modern concept used
The concept Simula also progenitor
Even developed originally Simula class could included library file added compile time
Libraries important program process resolve reference known library module
The linking process usually automatically done program search set library module given order
Usually considered error link target found multiple time given set library
Linking may done executable file created whenever program used
The reference resolved may address jump routine call
They may main program one module depending upon another
They resolved fixed relocatable address common base allocating runtime memory module referenced
Some programming language may use feature called whereby linker aware integrated compiler linker know external reference used code library never actually even though internally referenced discarded compiled application
For example program us integer arithmetic arithmetic operation exclude library routine
This feature lead smaller application file size reduced memory usage
Some reference program library module stored relative symbolic form resolved code library assigned final static address
process adjusting reference done either linker
In general relocation done individual library address memory may vary depending program using library combined
avoids reference absolute address therefore require relocation
When linking performed creation executable another object file known
In case linking usually done may also done
A also known one intended statically linked
Originally static library existed
Static linking must performed module recompiled
All module required program sometimes statically linked copied executable file
This process resulting file known program
A static build may need used desired
A file intended shared shared object file
Modules used program loaded individual shared object memory rather copied linker creates single monolithic executable file program
Shared library statically linked meaning reference library module resolved module allocated memory executable file created
But often linking shared library postponed loaded
Most modern shared library file format executable file
This offer two main advantage first requires making one loader rather two single loader considered well worth added complexity
Secondly allows executables also used shared library
Typical combined executable shared library format Unix Windows
In older environment stack based data local allowed shared library code significant restriction placed shared library code
Library code may shared memory multiple well disk
If virtual memory used process would execute physical page RAM mapped different address space process
This advantage
For instance system application often hundred kilobyte size loaded quickly majority code located library already loaded purpose operating system
Programs accomplish RAM sharing using lead complex flexible architecture using common virtual address Windows
These system make sure various trick like address space reserving slot shared library code great probability shared
A third alternative used successor
This allows code place significant restriction code placed shared
In case different version shared library cause problem especially library different version file name different application installed system require specific version
Such scenario known named Windows
Most modern operating system method eliminate situation use application specific private library
Dynamic linking linking performed program loaded executed rather executable file created
A dynamically linked library DLL dynamic shared object DSO system library intended dynamic linking
Only minimum amount work done executable file created record library routine program need index name number routine library
The majority work linking done time application loaded load time execution run time
Usually necessary linking program called dynamic linker linking loader actually part underlying
However possible exceedingly difficult write program us dynamic linking includes dynamic linker even operating system provides support dynamic linking
Programmers originally developed dynamic linking operating system starting MTS built late
Since shared library system change often system compute likely load address shared library system needed store information library executables
If every shared library loaded undergone process load predetermined address speed process dynamic linking
This optimization known macOS Linux
Disadvantages technique include time required precompute address every time shared library change inability use requirement sufficient virtual address space use problem alleviated adoption architecture least time
Loaders shared library vary widely functionality
Some depend executable storing explicit path library
Any change library naming layout file system cause system fail
More commonly name library path stored executable operating system supplying method find library based algorithm
If shared library executable depends deleted moved renamed incompatible version library copied place earlier search executable would fail load
This called existing many platform
The infamous Windows variant commonly known
This problem occur version library uniquely identified program reference library full unique identifier
The DLL hell problem earlier Windows version arose using name library guaranteed unique resolve dynamic link program
To avoid DLL hell later version Windows rely largely option program install private partial retreat use shared mechanism prevent replacement shared system DLLs earlier version
check determine proper place load DLLs implement DLLs check directory defined order
First Windows check directory loaded program directory set calling function System Windows directory current working directory finally directory specified PATH
Applications written framework since also check primary store shared dll file remove issue
used flexible system collecting list library number known location similar PATH concept system first start
Moving library around cause problem although user incur time cost first starting system
Most system search path specifying file system look dynamic library
Some system specify default path others dynamic loader
Some format specify additional directory search library particular program
This usually overridden although disabled setgid program user ca force program run arbitrary code root permission
Developers library encouraged place dynamic library place default search path
On downside make installation new library problematic known location quickly become home increasing number library file making management complex
Dynamic loading subset dynamic linking involves dynamically linked library loading unloading request
Such request may made implicitly explicitly run time
Implicit request made compile time linker add library reference include file path simply file name
Explicit request made application make direct call operating system API run time
Most operating system support dynamically linked library also support dynamically loading library via linker
For instance us API function based system including UNIX system use
Some development system automate process
Although originally pioneered dynamic linking reach used consumer late
It generally available form operating system early
During period OOP becoming significant part programming landscape
OOP runtime binding requires additional information traditional library supply
In addition name entry point code located within also require list object depend
This one OOP main advantage inheritance mean part complete definition method may different place
This simply listing one library requires service another true OOP system library may known vary system system
At time many developer worked idea program display running desktop computer would use service data storage processing
For instance program computer would send message minicomputer return small sample huge dataset display
RPC already handled task standard RPC system
Soon majority minicomputer mainframe vendor instigated project combine two producing OOP library format could used anywhere
Such system known supported remote access
Microsoft COM example system local use DCOM modified version support remote access
For time object library held status next big thing programming world
There number effort create system would run across platform company competed try get developer locked system
Examples include DOE PDO Microsoft number system
After inevitable cooling marketing hype object library continue used programming distributed information system
rough OOP equivalent older type code library
They contain describe characteristic define action involve object
Class library used create object characteristic set specific value
In OOP language like distinction clear class often contained library file like Java instantiated object residing memory although potentially able made separate file
In others like class library merely starting point includes entire state environment class instantiated object
Another solution library issue come using completely separate executables often lightweight form calling using RPC network another computer
This approach maximizes operating system code needed support library code used provide application support security every program
Additionally system require library exist machine forward request network
However approach mean every library call requires considerable amount overhead
RPC call much expensive calling shared library already loaded machine
This approach commonly used make heavy use remote call notably system
Code generation library generate transform
They used data access framework testing generate dynamic proxy object
They also used intercept field access
The system store file directory
The filename always start end suffix static library shared object dynamically linked library
Some system might multiple name dynamically linked library name name remaining name name might include major version library full version number example system would filename second major interface revision dynamically linked library
The file sometimes found library directory archive usable system
The system inherits static library convention library stored file use dynamically linked library suffix instead
Most library macOS however consist framework placed inside special directory called wrap library required file metadata
For example framework called would implemented bundle called either dynamically linked library file symlink dynamically linked library file
usually suffix although file name extension may identify dynamically linked library
library
The interface revision either encoded file name abstracted away using interface
Depending compiled file either static library representation dynamically linkable library needed compilation known
Unlike world us different file extension linking file one must first know regular static library import library
In latter case file must present run time

Sunshine cloud mixed
Very cold
High
Winds NNE A cloud
Low
Winds light variable
At Nedderman Hall Room Microsoft Computer Science Trivia Night event pit team team contest testing technological skill computer science field
Being expert computer science UTA requires dedication passion hour work
Here top thing needed computer science wiz UTA
Be logical When computer science professor James asked important basic master computer science first thing said good foundation logic
really go long way said
discreet logic work well developing skill needed algorithm coding come computer Be mathematic Math also important factor computer science said
every way computer science based around mathematical foundation said
programming function command computer need understand basis Challenge One thing help aspiring computer specialist testing technical situation said Matthew Wright Â computer science associate professor
He said people seek opportunity Internet
really recommend people try TopCoder Wright said
online website hold weekly competition see skilled computer programming
many like Internet Wright said
Get involved group Nothing develops skill hanging around group friend share interest Wright involved group caliber really develops skill Wright said
much better learn group friend learning technical skill teacher lecturing Be calm stressful environment One thing computer engineering seniorÂ Sean Pierce recommends able process large amount technical information quickly
Â computer toy tool Pierce said
choose field one natural passion tinkeringÂ computer probably comfortable working professionally
Be creative Being computer expert really mean restricted one single method practice
Being computer expert mean branching always striving impossible
computer ever really isolated Pierce said
important general breadth computer knowledge computer scientist often develop interesting solution interesting Branch Computer science alumnus Patrick Baggett said succeed computer genius person need diverse
need learn software engineering computer work operating system work well countless programming language Baggett said
Â Pierce agreed Baggett followed example
Â famous misquote Edsger Dijkstra science computer astronomy telescope meaning computer tool expert using tool define field whole Pierce said
Read write lot codeÂ While sound fun going countless stream code data Pierce said necessity order stay computer science workforce
career require said
technology becoming exponentially complex one must continuously update skill stay competitive within field
Understand tool need understand tool work Baggett said
need know compiler linker assembler interpreter web browser Learn failure quickly move need business mindset Pierce said
though business major natural enemy typically difference ethic business perspective incredibly Baggett one last thing add comment
give easily something work said laughed
Â Â David Dunn aspiring filmmaker critic analyst currently attending University Texas Arlington writes newspaper The Shorthorn
Whenever David Dunn post new content get email delivered inbox link
Email notification sent day new matching item
thanks welcoming I want know write scrip code computer Hello Sir Being Computer Science Student I really agree article
A Computer Science Student multiple quality Skills like Coding Creativity knowledge Languages like C JAVA etc
I also pursuing tech Computer Science Preparing exam become Lecturer
I also learn Coding many different language
These basic requirement Computer Science Students everyone know
Thanks
whatsapp would like chat somethings self confidence Have personality
Please avoid obscene vulgar lewd racist language
Threats harming another person tolerated
Do knowingly lie anyone anything
No racism sexism sort degrading another person
Use link comment let u know abusive post
We love hear eyewitness account history behind article
Sorry recent result popular image
Sorry recent result popular audio clip

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
I trying understand thing like linkers loader better
What area computer science belong
Compiler Operating System Computer Architecture
Where linkers loader come play development
The relationship varies somewhat
To start I consider nearly simplest possible model used something like executable always statically linked
For sake example let consider canonical Hello World
program assume written The compiler compile couple piece
It take string literal Hello World
put one section marked constant data synthesize name particular string
It compile call another section marked code
In case say name frequently
It also something say chunk code N byte long importantly contains call offset M code
Once compiler done producing linker run
It normally considered part development tool chain though exception used include linker though rarely ever used
Although normally externally visible normally passed argument one specifying object file containing startup code another specifying whatever file contains C standard library
The linker look object file containing startup code find say byte long call offset
Based start build symbol table
It one entry saying whatever name byte long far nothing refers name
It another entry saying printf current unknown length referred
It scan specified library library try find definition name symbol table currently defined case
It find object file printf saying byte long reference routine thing like converting int string well thing like maybe write resulting string output file
The linker try find definition symbol recursively reach one two conclusion either found definition symbol else symbol ca find definition
If found reference definition stop give error message typically saying something undefined external XXX figure library object file need link
If find definition symbol move next phase walk list place refer symbol fill address symbol got put memory example startup code call fill address address main
Once done write code data executable file
There minor detail probably bear mentioning typically keep code data separate complete put together le consecutive address piece code piece data
There typically also rule combine definition example different object file code segment arrange piece code one another
If two identical string literal constant defined typically merge together refer place
There also rule find duplicate definition symbol
In typical case simply error
In case thing like weak external symbol basically say I providing definition symbol somebody else also defines consider error use definition instead one
Once entry symbol linker arrange piece assign address
The order arranges piece vary somewhat typically flag type different piece example constant data end next piece code next
In simple system wo matter whole lot though
That brings u next phase loader
loader typically part operating system load executable
It pick base address executable based entry put linker fix absolute reference executable refer correct address
For example startup code referred address executable loaded base address say fix address refer
In simple system however loader pretty simple piece code basically walking list relocation adding base address
Now let consider bit modern OS support something like shared object file DLLs
This basically shift work linker loader
In particular symbol defined linker attempt assign address
Instead create symbol table entry basically say defined file XXX
When linker writes executable symbol table entry basically get copied executable saying symbol XXX defined file YYY
It loader find file YYY address symbol XXX file fill correct address wherever used executable
Much like linker recursive DLL A may refer symbol DLL B may refer DLL C
Although chain executable definition may long basic idea process fairly simple scan list external reference find definition
Also note case able share single executable across many process OS normally list loaded module get module already loaded fill entry done rather beginning
Again miscellaneous bit piece consider
For example sharing normally happen basis
If file code data example process share code section get copy data
To find linkers I think generally discussed combination compiler
They knitting various module together cohesive unit finalizing address within code
Some may even try perform optimization
To find loader I think generally discussed combination writing compiler particular architecture unless mean loader synonym linker
I thinking loader part executable file header tell operating system open execute compiled software
I agree reading Wikipedia article probably impart information looking
As come development generally beyond control project part selection operating system development package choose use
It rare would use example MSVC want run GCC based linker might even possible
The ONLY place I ever used linker IBM using development copy
If particular specific question topic I think find much better response
Linkers loader two related separate concept
Linkers part compiler theory
When compile project made one module source code file common compiler output single intermediary file source module
This several benefit one make change one file recompile rebuild entire project made one local change
But mean code one module call function different module compiler ca generate instruction location function
It different intermediary file exact location function change make local change intermediary source file recompile
So instead insert external reference token exactly look like matter think abstract concept say I need function whose exact address I know moment
Once everything compiled intermediary file linker finish job
It go intermediary file link together final binary
Since putting thing together know actual address function replace external reference token actual instruction correct location binary
The loader hand belongs operating system compiler
Its job load binary memory execute finish linking process since linker resolve code know
If program using DLLs external even compiled binary linker know address
It leaf external reference token final binary format OS loader know loader go match token actual function address DLLs everything loaded memory
Computers basicly work binary number
People speak native language
Do programming language communication people computer
If say Add substract I doubt computer would understand anything maybe programming language would
So need translate source code format computer understands need compiler translates programming language co called object code
But object code yet language computer understands executes directly
So need linker make executable file containts instruction called machine language machine language set operation coded binary number processor understands
All binary instruction structure published processor manufacturer
You look say Intel site see look like
Thank interest question
Because attracted spam answer removed posting answer requires site
Would like answer one instead
asked viewed active site design logo Stack Exchange Inc user contribution licensed

