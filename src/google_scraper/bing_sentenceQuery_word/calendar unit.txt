What Computer Science
Despite name Computer Science really science computer
Computers quite remarkable electronic device even remarkable made simulate flow air wing manage communication Internet control action robot synthesize realistic image play chess
Indeed application computer activity like affected area modern life
What task common little physic electronics computer matter formulated sort computation
This real subject matter Computer Science computation done computationally
In trying make sense get computer wide variety topic come
There however two recurring theme
The first issue scale big system specify without getting lost design big task computer handle within reasonable bound time memory accuracy
A large part Computer Science deal question one form another
In area programming language methodology example look notation describing computation programming methodology facilitate production manageable efficient software
In theory computation area study resource requirement time memory many basic computational task
The second theme concern scope computation
Computers originally conceived purely numerical calculator today tend view much broadly
Part Computer Science concerned understanding far computational idea applied
In area artificial intelligence example ask much intelligent behaviour people expressed computational term
In area interaction ask sort normal activity people might supported augmented using computer
Some Computer Science course offered evening allow student pursue program
Introductory course course offered summer
The Professional Experience Year Program PEY offer student opportunity gain valuable work experience industry twelve period
It available eligible student
Students may also take advantage International Exchange Program offered CIE
Please refer chapter Calendar
Associate Chair Undergraduate Studies Associate Professor Teaching Stream Francois PItt Student Counsellors Undergraduate Office Bahen Building George Street Rooms email
Web site Tuition fee student enrolled Computer Science Specialist Major program higher Arts Science program
For information visit
This limited enrolment program Type accommodate certain number student
Eligibility based following criterion A
Completion least FCEs including minimum grade minimum grade AND B
An average grade meet department annual cutoff
When one course completed list alternative higher grade used
Also grade adjusted account course greater difficulty
Finally note depending current capacity program pool applicant
For information including historical data please visit
Note student admitted program second third year required pay retroactive program fee
full course equivalent FCEs including least FCEs First year FCEs
Second year FCEs Notes
Students strong background language Python Java may omit proceed directly
There need replace missing program completion however please base course choice ready take saving
accelerated enriched version plus intended student strong mathematical background develop interest taking
If take without need replace missing program completion please see Note

Consult Undergraduate Office advice choosing among
Later year FCEs
FCEs following FCEs MAT STA course least FCEs CSC BCB ECE course
No FCE may used fulfill program requirement The choice must satisfy requirement integrative activity including one following
This requirement may also met participating PEY Professional Experience Year program
Strong student consider option study graduate school degree offered typically

If find frequently receiving mark range better consult faculty member learn graduate school whether would good option
You want ask advice particular find faculty member happy talk also course choice considered student thinking graduate study Computer Science
The focus help refine area interest take course exclusively one area
You benefit taken advanced course requiring considerable software development theory course
It especially beneficial done project course capstone course summer research project
It good individual work area eventually decide like research essential need experience work mentorship experienced researcher
This program offer considerable freedom choose course free make choice
We eager offer guidance however Undergraduate Office individual faculty member rich source advice
You option completing one focus defined
Focuses set course direct toward expertise particular area Computer Science game design theory computation interaction
These focus meant guide course selection constrain
Each focus least one faculty member would happy discus focus
More information focus found web site Each focus set required course must completed satisfy focus
Most focus also additional list related course student focus may find interesting
In case course offered different department faculty
Note must petition take Engineering course course
In many case course required focus also satisfy Specialist program requirement
Focuses require course addition Specialist requirement note description
To enrol one focus student must first enrolled Computer Science Specialist program
Enrolment instruction found
Focuses chosen ACORN admission program
Scientific computing study world around u
Known unknown quantity related certain rule
physical law formulating mathematical problem
These problem solved numerical method implemented algorithm run computer
The numerical method analyzed performance
accuracy efficiency studied
Problems choosing optimal shape airplane achieve example minimal fuel consumption finding fair price derivative product market regulating amount radiation medical scan modelled mathematical expression solved numerical technique
Students wishing study scientific computing strong background particular calculus several variable linear algebra fluent programming good understanding data structure algorithm design
Required Courses

FCEs following
FCE following Suggested Related Courses It also recommended student focus consider taking two basic science physic chemistry biology science source many problem solved numerical technique
Artificial Intelligence AI aimed understanding replicating computational process underlying intelligent behaviour
These behaviour include perception one environment learning environment structured communicating agent reasoning guide one action
This focus designed provide student introduction key scientific technical idea developed AI
There four different AI represented department Computer Vision Computational Linguistics Machine Learning Knowledge Representation Reasoning
These area cover wide variety idea technique
Students wanting achieve focus required take course least two point
Required Courses
FCE following
FCEs following course least two four area b c Suggested Related Courses How build analyze system enable user communicate computer using human language also called natural language automatically process vast amount data web available form text
The focus cover appropriate material natural language interface well tool document summarization intelligent search web
Students considering focus encouraged consider second Major Linguistics
Note FCE LIN addition FCEs required complete Specialist program Required Courses


FCEs following
FCE following Suggested Related Courses Other relevant Computer Science course depending student interest include course artificial intelligence
Linguistics Psychology Cognitive Science directly relevant focus recommend interested student take additional course discipline
Computer vision science technology machine see
As science goal computer vision understand computational process required machine come understanding content set image
The data may single snapshot video sequence set image different viewpoint provided medical scanner
The computer vision focus introduces student study vision computational point view
That attempt clearly define computational problem various step overall process show problem tackled appropriate algorithm
Students wish pursue computer vision understanding linear algebra calculus several variable
Moreover solid programmer good understanding data structure algorithm design
These basic tool required order first pose computational vision problem develop test algorithm solution problem
Required Courses

FCE following Note student must petition take graduate course
Suggested Related Courses The following example topic course fit naturally study computational vision
The list meant illustrative range cognate topic necessarily complete
The ordering alphabetical indicative importance
Note prerequisite many course list
Software system complex interesting
Poorly done system incredibly expensive cost society billion dollar sometimes make difference life death
Rapid change technology application mean underlying system must continually adapt
This focus take cover software system laying bare layer introducing concurrency issue scalability multiprocessor system distributed computing
Required Courses
FCE following Suggested Related Courses
Relevant course offered UTM
Relevant course offered Engineering Video game design combine several discipline within computer science including software engineering graphic artificial intelligence interaction
It also incorporates element economics psychology music creative writing requiring video game researcher diverse multidisciplinary set skill
Students wish pursue video game design understanding linear algebra computer graphic modelling computer hardware operating system console architecture data structure algorithm design
Students gain general knowledge advanced topic listed course
Required course Suggested Related Courses Interaction HCI scientific study use computer people design discipline informs creation system software useful usable enjoyable people use
HCI student exciting opportunity research graduate school HCI professional often job title user interface architect user interface specialist interaction designer usability engineer
Note FCEs SOC PSY addition FCEs required complete Specialist program Required Courses To enrol restricted SOC course please contact CS Undergraduate Office July preceeding academic year plan take course
FCE following Suggested Related Courses
At least one Human Factors Ergonomics offered Department Mechanical Industrial Engineering
Human factor sister discipline interaction approach problem slightly different way

Why easy sort list number hard break Internet encryption scheme
Is finding solution problem harder checking solution correct
Can find good approximate solution even exact solution seem reach
Theory Computation study inherent complexity fundamental algorithmic problem
On one hand develop efficient data structure algorithm
On yet develop good algorithm many problem despite decade effort problem strive prove algorithm ever solve
While field seen successful impossibility result still many underlying modern cryptography know either efficient algorithm strong lower bound
This focus take rigorous mathematical approach computational student gain deep understanding algorithm paradigm measure problem complexity develop skill necessary convey abstract idea precision clarity
Many student go graduate study sophisticated algorithmic work industry
This focus natural tie many branch mathematics foundation many computer science field
Consequently student often apply theoretical knowledge field interest
We strongly encourage taking enriched theory course well version MAT requirement focus
Depending course selected point student may need complete FCE addition FCEs required complete Specialist program
Required Courses
Note If used counted part FCEs point



FCEs following At UTM project supervised faculty member Theory group relevant introductory graduate course Theory
Note student must petition take graduate course

FCEs following MAT course except Recommended Courses
Students strongly encouraged take enriched theory course rather regular counterpart respectively
Suggested Related Courses

The Web Internet Technologies focus introduces student system algorithm power today web Internet application search engine social networking application web data mining application content distribution network
The focus cover algorithm foundation web internet technology well implementation system architecture
Students wish pursue Focus Web Internet Technologies solid understanding statistic good programmer good understanding data structure algorithm design
To get practical experience student pursuing web Internet technology focus encouraged either term project summer USRA project web internet technology
Required course
FCE following Suggested Related Courses
Courses offered UTM
This limited enrolment program Type accommodate certain number student
Eligibility based following criterion A
Completion least FCEs including minimum grade minimum grade AND B
An average grade meet department annual cutoff
When one course completed list alternative higher grade used
Also grade adjusted account course greater difficulty
Finally note cutoff change year year depending current capacity program pool applicant
For information including historical data please visit http
Note student admitted program second third year required pay retroactive program fee
full course equivalent FCEs including least FCE First year FCEs
Second year FCEs Notes
Students strong background language Python Java may omit proceed directly
There need replace missing program completion however please base course choice ready take saving
accelerated enriched version plus intended student strong mathematical background develop interest taking
If take without need replace missing program completion please see Note

Consult Undergraduate Office advice choosing among
Later year FCEs
No FCE may used fulfill program requirement
The choice must satisfy requirement integrative activity including one following
This requirement may also met participating PEY Professional Experience Year program
A Major program discipline may form part whole degree requirement
The Major program Computer Science designed include solid grounding essential Computer Science followed option let explore one topic deeply
You also realize area studied ready explore interest change completing Major
To give freedom choose path Computer Science designed Major include minimal set required course
There course think ought consider carefully make choice
fundamental many advanced Computer Science topic designing appropriate algorithm central
prerequisite effective work many application area
We designed package related course intended accompany Specialist program Computer Science may find helpful completing Major
Please see web site A significant role Major allow integrate study Computer Science another discipline
For example many Computer Science student also interested statistic economics physic mathematics
In case make sense enrol Major one discipline either Major Specialist
If interest evenly balanced obvious choice two Majors assume
A Major program generally enough prepare graduate study Computer Science though complete Specialist required
Please consult advice graduate study included description Specialist program Computer Science
The theoretical foundation Computer Science essentially branch mathematics numerical analysis area CS study efficient reliable accurate algorithm numerical solution continuous mathematical problem also topic applied mathematics
If interested Computer Science Mathematics double major good choice
In double major choose theoretical course first three year
If enriched version available alternative prefer place place
You also take least one
You also make sure take course numerical analysis possibly
In Major Mathematics prefer course also Specialist program Mathematics
Ask advisor Department Mathematics course would recommend planning career mathematics
Do afraid admit interest CS
Bioinformatics field came existence become extremely fruitful interaction biological scientist computer scientist
Deciphering genome requires extremely clever biology also extremely clever computer science drawing study algorithm data structure data mining
To study bioinformatics enrol Specialist program Bioinformatics Computational Biology sponsored Department Biochemistry also Major Computer Science
Your Computer Science Major include selection course something like Some You seek advice Department Biochemistry Department Computer Science distribute course across two program
Here Computer Science course choice somewhat similar Computer Science Mathematics take theoretical Computer Science course prefer MAT STA course
For example take rather
Within Computer Science take course numerical analysis
Choose also among information theory machine learning natural language processing
There considerable opportunity mutually supporting interest Computer Science economics area economic modelling econometrics numerical analysis
In Computer Science might choose course database network operating system acquire technical background working large system data set numerical analysis understand difficulty large numerical model
If interested financial modelling also want take learn handle partial differential equation would want taken necessary mathematical course
Applying idea economics Computer Science little harder certainly economic principle apply database network
discus model process involved computer network system
Algorithmic Game Theory Mechanism Design Business Software would also complement background economics
If interested Computer Science Linguistics consider Major
Your Major Computer Science focus computational linguistics CL AI concerned human language natural language researcher area interested developing program understand generate natural language
You take Computational Linguistics course
They taken either order
As preparation also take programming language
Other course might find valuable AI database theoretical course
If want study Computer Science physic physicist interested natural process human design take u material law nature useful computational machinery want study computer way device combined build machine repeatedly executes instruction operating large software system organize program people write run present appearance machine
As computer scientist wonder accurately compute result calculation needed simulating predicting physical process
introduce numerical analysis applies partial differential equation used model many physical system
Both computer scientist physicist wonder write effective program
teach choose appropriate data structure algorithm help understand whether problem computable whether computation take reasonable amount time
In fourth year may choose depends also simulates behaviour light mechanical system
deal computing kind used scientific computing
might also good choice though preparation artificial intelligence would helpful course
This limited enrolment program Type accommodate certain number student
Eligibility based following criterion A
Completion least FCEs including minimum grade minimum grade AND B
An average grade meet department annual cutoff
When one course completed list alternative higher grade used
Also grade adjusted account course greater difficulty
Finally note cutoff change year year depending current capacity program pool applicant
For information including historical data please visit http
full course equivalent FCEs
Notes
Students strong background Java may omit proceed directly
accelerated enriched version plus intended student strong mathematical background develop interest taking

Consult Undergraduate Office advice choosing among
Total requirement FCEs
If take fewer FCEs must take FCEs next list total FCEs

FCEs following list least FCE must CSC Note
Computer Science Minors limited three
The University Toronto Mississauga University Toronto Scarborough Computer Science Minor subject POSts recognized restricted Computer Science program George course enrolment

No late registration permitted Computer Science course first two week class
Enrolment Computer Science course MAY restricted
Consult Calendar detail
Prerequisites exclusion course strictly enforced
Prerequisite waiver granted instructor student demonstrates background covering material prerequisite course
Please refer prerequisite waiver deadline
Students may go college drop enriched course regular course
The course follows already passed least
Students may drop space course moving
Fall session October Winter session February If transfer credit Computer Science similar subject course done another university college contact Undergraduate Office advice choosing course
Also ask advice even transfer credit yet considering degree study University Toronto
Without advice risk poor course choice adverse consequence
The seminar designed provide opportunity work closely instructor class student
These interactive seminar intended stimulate student curiosity provide opportunity get know member professorial staff seminar environment first year study
Details found Humans solved problem millennium computing device representing data diverse number text image sound genome transforming data
A gentle introduction designing program recipe systematically solving problem crop diverse domain science literature graphic
Social intellectual issue raised computing
Algorithms hardware software operating system limit computation
Note may take course concurrently Computer Science course may take
To help select programming course right see Programming language Python
Elementary data type list map
Program structure control flow function class object method
Algorithms problem solving
Searching sorting complexity
Unit testing
No prior programming experience required
NOTE You may take course concurrently may take
An introduction computer science student science emphasis gaining practical skill
Introduction programming example exercise appropriate science web programming software tool
Topics database design consideration numerical calculation using system
At end course able develop computer tool scientific application structuring analysis experimental data
With additional preparation also ready go
Practical P section consist supervised work computer laboratory
No programming experience necessary
An introduction computer science student planning use computer statistical analysis research
Using statistical programming environment fundamental programming concept computational topic relevant statistic issue numerical calculation random number generation management data
Practicals consist supervised work computer laboratory reinforce concept develop programming skill
No previous programming experience necessary
Please consult CS Undergraduate office intend continue
Abstract data type data structure implementing
Linked data structure
Encapsulation
programming
Specifications
Analyzing efficiency program
Recursion
This course assumes programming experience provided
Students already background may consult Computer Science Undergraduate Office advice skipping
Practical P section consist supervised work computing laboratory
These section offered facility available attendance required
NOTE Students may go college drop
See drop deadline
Introduction abstraction rigour
Informal introduction logical notation reasoning
Understanding using developing precise expression mathematical idea including definition theorem
Structuring proof improve presentation comprehension
General technique
Running time analysis iterative program
Formal definition
Diagonalization Halting Problem reduction
Unified approach programming theoretical problem
This course teach language culture communication mechanism necessary effective collaboration software project involving computer scientist scientist
This course intended student little computer science background
An introduction software design development concept method tool using programming language Java
Topics version control unit testing refactoring design development design pattern advanced IDE usage regular expression reflection
Representation number introduction numerical computation
Software technique environment using scripting language programming language typically C
What go operating system program executed
Core topic creating using software tool pipe filter file processing shell programming process system call signal basic network programming
The application logic proof technique Computer Science
Mathematical induction correctness proof iterative recursive algorithm recurrence equation solution introduction automaton formal language
This course assumes experience proof technique algorithmic complexity provided
Very strong student already experience
successful completion may consult undergraduate office proceeding directly
The rigorous application logic proof technique Computer Science
Propositional predicate logic mathematical induction basic proof technique correctness proof iterative recursive algorithm recurrence equation solution including Master Theorem introduction automaton formal language
This course cover topic together selected material faster pace greater depth rigour challenging assignment
Greater emphasis placed proof theoretical analysis
Certain topic briefly mentioned may covered detail course additional topic may also covered
NOTE Students may go college drop already passed
See drop deadline
Computer structure machine language instruction execution addressing technique digital representation data
Computer system organization memory storage device microprogramming
Block diagram circuit realization memory control arithmetic function
There number laboratory period student conduct experiment digital logic circuit
Algorithm analysis amortized complexity
Expected complexity randomized quicksort selection
Standard abstract data type graph dictionary priority queue disjoint set
A variety data structure implementing abstract data type balanced search tree hashing heap disjoint forest
Design comparison data structure
Introduction lower bound
This course cover topic faster pace greater depth rigour challenging assignment
Greater emphasis placed proof theoretical analysis creative
Certain topic briefly mentioned may covered detail course additional topic may also covered
Students without exact course prerequisite strong mathematical background encouraged consult Department possibility taking course
NOTE Students may go college drop
See drop deadline
If Major Specialist program limited three
Privacy Freedom Information recent Canadian legislation report
Computers work employment level quality working life
Electronic fund transfer system transborder data flow
Computers bureaucratization
Computers home public awareness computer
Robotics
Professionalism ethic computer
The course designed science student also social science humanity
An introduction agile development method appropriate team project
Basic software development infrastructure requirement elicitation tracking estimation prioritization teamwork skill basic UML design pattern refactoring security discussion ethical issue professional responsibility
An introduction theory practice software system design development deployment
Project management advanced UML reverse engineering requirement inspection verification validation software architecture performance modelling analysis
A mathematical computational introduction game theory mechanism design
Topics include game matrix extensive form equilibrium price anarchy matching market auction network externality tipping point voting theory
This course intended economics mathematics computer science student
An introduction software development web
Concepts underlying development program operate web survey technological alternative greater depth technology
Operational concept internet web static client content dynamic client content dynamically served content architecture web development process security web
Assignments involve increasingly complex program
Guest lecturer leading firm describe architecture operation web site
Measuring information
The source coding theorem
Data compression using ad hoc method method
Probabilistic source model use via Huffman arithmetic coding
Noisy channel channel coding theorem
Error correcting code decoding algebraic probabilistic method
design interactive system methodology principle metaphor task analysis
Interdisciplinary design role graphic design industrial design behavioural science
Interactive hardware software concept computer graphic
Typography layout colour sound video gesture usability enhancement
Classes interactive graphical medium direct manipulation system extensible system rapid prototyping tool
Students work project interdisciplinary team
Image synthesis image analysis aimed student interest computer graphic computer vision visual art
Focus three major topic visual computing mathematical method creating capturing analyzing manipulating digital photograph image acquisition basic image processing image warping digital special principle create special effect found movie commercial visual OpenGL create graphical user interface synthesizing manipulating photograph
The course requires ability use differential calculus several variable linear algebra
The first half course supervised learning regression classification problem include perceptron learning procedure backpropagation method ensuring good generalisation new data
The second half course unsupervised learning method discover hidden cause include EM algorithm Boltzmann machine deep belief net
Programming principle common modern language detail commonly used paradigm
The structure meaning code
Scope control flow datatypes parameter passing
Two programming paradigm functional programming illustrated language ML Haskell logic programming typically illustrated Prolog
The study computational method solving problem linear algebra equation approximation
The aim give student basic understanding arithmetic implementation algorithm used solve numerical problem well familiarity current numerical computing environment
Introduction database management system
The relational data model
Relational algebra
Querying updating database query language SQL
Application programming SQL
Integrity constraint normal form database design
Elements database system technology query processing transaction management
Introduction computer network emphasis fundamental principle
Basic understanding computer network network protocol
Topics include network hardware software routing addressing congestion control reliable data transfer performance analysis local area network
Principles operating system
The operating system control program resource allocator
The concept process concurrency problem synchronization mutual exclusion deadlock
Additional topic include memory management file system process scheduling thread protection
Standard algorithm design technique greedy strategy dynamic programming linear programming randomization network flow approximation algorithm
Brief introduction polynomial time reduction example various problem
Additional topic may include approximation randomized algorithm
Students expected show good design principle adequate skill reasoning correctness complexity algorithm
Theories algorithm capture approximate core element computational intelligence
Topics include search logical representation reasoning classical automated planning representing reasoning uncertainty learning decision making planning uncertainty
Assignments provide practical experience theory programming core topic
Microprocessor embedded system Software technique task creation management
Connected device charachteristics hardware software ramification
System construction management
An examination issue unique particulaly important embedded computing
Laboratory experiment provide hand experience
An open team project done last laboratory session
This Summer Abroad special offering provides student opportunity explore new environment improves ability see world increased sensitivity germinates new design idea
In course student identify real problem world work group project addressing problem
Students explore problem space people within space identify need constraint requirement ultimately design solution
Their design iterated gathering feedback conducting usability testing early prototype
The course project culminate development technological solution address identified problem
Final project presentation take place end course
This course counted FCE Computer Science program completion
If Major Specialist program limited three
Introduction technique involving natural language speech application information retrieval extraction filtering intelligent Web searching spelling grammar checking speech recognition synthesis system including machine translation
semantic distance metric indexing lexicon thesaurus markup language collection document corpus analysis
PERL software
Concepts technique design development electronic game
History social issue story element
The business game development game promotion
Software engineering artificial intelligence graphic element
Level model design
Audio element
Practical assignment leading team implementation complete game
Concepts technique quality assessment software engineering quality attribute formal specification analysis testing verification validation
An introduction method automated learning relationship basis empirical data
Classification regression using nearest neighbour method decision tree linear model neural network
Clustering algorithm
Problems overfitting assessing accuracy
Problems handling large database
Emphasis statistical approach
An introduction probability mean representing reasoning uncertain knowledge
Qualitative quantitative specification probability distribution using probabilistic graphical model
Algorithms inference probabilistic reasoning graphical model
Statistical approach algorithm learning probability model empirical data
Applications model artificial intelligence machine learning
Identification characterization object manipulated computer graphic operation possible object efficient algorithm perform operation interface transform one type object another
Display device display data structure procedure graphical input object modelling transformation illumination model primary secondary light effect graphic package system
Students individually team implement graphical algorithm entire graphic system
Introduction basic concept computer vision
Extraction image feature multiple scale
Robust estimation model parameter
Multiview geometry reconstruction
Image motion estimation tracking
Object recognition
Topics scene understanding time permit
Understanding human behaviour applies user interface work activity analysis observational technique questionnaire administration unobtrusive measure
Operating parameter human cognitive system task analysis cognitive modelling technique application designing interface
Interface representation prototyping tool
Cognitive walkthroughs usability study verbal protocol analysis
Case study specific user interface
Numerical algorithm algebraic eigenvalue problem approximation integration solution ordinary differential equation
Emphasis convergence stability efficiency property algorithm
Computable function Church thesis unsolvable problem recursively enumerable set
Predicate calculus including completeness compactness theorem
Formal theory G del Incompleteness Theorem
Ordinarily offered year alternating
Implementation database management system
Storage management indexing query processing concurrency control transaction management
Database system parallel distributed architecture
Modern database application data mining data warehousing OLAP data web
database
Finite difference method hyperbolic parabolic equation consistency convergence stability
Finite element method boundary value problem elliptic equation
Special problem interest
Ordinarily offered year alternating
Regular deterministic context free context sensitive recursively enumerable language via generative grammar corresponding automaton finite state machine push machine Turing machine
Topics include complexity bound recognition language decision problem operation language
Ordinarily offered year alternating
The software internet industry principle operation successful software enterprise innovation entrepreneurship software business definition planning business model market product planning product development marketing sale support financial management financing venture management leadership partnership
Students write business plan team
application science engineering implemented fastest computer available today composed many processor operating parallel
Parallel computer architecture implementation numerical algorithm parallel architecture performance evaluation
Topics product solution linear system sparse matrix iterative method domain decomposition Fourier solver
For student computer science applied mathematics science engineering
Ordinarily offered year alternating
Computer network emphasis network programming application
An overview networking basic layering naming addressing packet switching fundamental socket programming protocol congestion control routing network security wireless network multimedia web networking online social network
Introduction theory computability Turing machine model computation Church thesis computable noncomputable function recursive recursively enumerable set reduction
Introduction complexity theory P NP polynomial time reducibility space complexity L NL PSPACE completeness class hierarchy theorem provably intractable problem
Using mathematics write program
Proving refinement identifying error made
Program development meet specification modification preserve correctness
Useful programming essential program life depend
Basic logic formal specification refinement
Conditional sequential parallel interaction probabilistic programming functional programming
Numerical method unconstrained optimization problem particular line search method trust region method
Topics include steepest descent Newton method method conjugate gradient method technique large problem
This course normally offered every year
An exploration major component operating system emphasis technique algorithm structure used implement component modern system
study process management scheduling memory management file system networking used build insight intricacy large concurrent system
Computational linguistics processing language computer
Topics include grammar chart parsing statistical parsing semantics semantic interpretation ambiguity resolution technique reference resolution
Emphasis statistical learning method lexical syntactic semantic knowledge
Representing knowledge symbolically form suitable automated reasoning associated reasoning method
Topics logic entailment resolution method Horn clause procedural representation production system description logic inheritance network default probability tractable reasoning abductive explanation representation action planning
The structure compiler Programming language processing
Scanning based regular expression Parsing using context free grammar Semantic analysis type usage checking Compiler dictionary table
Runtime organization storage allocation code generation optimization
Use modern compiler building tool
Course project involves building complete compiler
Theoretical practical aspect building modern optimizing compiler
Topics intermediate representation basic block flow graph data flow analysis partial evaluation redundancy elimination loop optimization register allocation instruction scheduling interprocedural analysis memory hierarchy optimization
Students implement significant optimization within framework modern research compiler
This course Faculty Applied Science Engineering
This give student experience solving substantial problem may span several area Computer Science
Students define scope problem develop solution plan produce working implementation present work using written oral suitable video report
Class time focus project may include lecture
The class small highly interactive
Project theme change year
Contact Computer Science Undergraduate Office information year topic theme required preparation course enrolment procedure
Not eligible option
This give student experience solving substantial problem may span several area Computer Science
Students define scope problem develop solution plan produce working implementation present work using written oral suitable video report
Class time focus project may include lecture
The class small highly interactive
Project theme change year
Contact Computer Science Undergraduate Office information year topic theme required preparation course enrolment procedure
Not eligible option
This involves significant project area Computer Science
The project may undertaken individually small group
The course offered arrangement Computer Science faculty member
Not eligible option
This involves significant project area Computer Science
The project may undertaken individually small group
The course offered arrangement Computer Science faculty member
Not eligible option

The offer opportunity study leading bachelor master doctoral degree
For information Bachelor Arts Computer Science see Computer Science entry Arts section
For information advanced degree see graduate
All student intend take honour Computer Science must consult head Department
Students entering second year wish pursue Computer Science Major Honours Combined Majors Combined Honours specialization including student applied enter Faculty Science expect standing upon admission must apply using online process administered
Students receive email communication regarding process late May early June
Due similarity second year Major Combined Major specialization corresponding Honours Combined Honours specialization Faculty Science admits student directly either Major Combined Major
Qualified student wishing transfer Honours Combined Honours another Computer Science specialization third year contact undergraduate Computer Science advisor advice
The Department Computer Science accepts application April December current UBC Science student standing higher student standing ineligible central specialization application
For application form information regarding admission continuation requirement student advised review Computer Science
The progress continuing student reviewed end academic year
Students making satisfactory progress require annual specialization approval
education process education integrates academic study related supervised work experience employer organization
A Education Option available student Computer Science
The option intended help prepare interested qualified student career computing industry minimum work placement supervised practicing professional
advisor also visit student place work provide advice technical report required student Option
To eligible student must admitted second year Computer Science specialization Bachelor Science program
Selection student based academic performance general suitability work environment determined resumé interview
The total enrolment subject availability appropriate work placement faculty advisor
The work placement arranged mutual agreement student employing organization
Participating student register CPSC appropriate pay Education Option fee course see
Graduation Option requires student complete least four CPSC addition normal academic requirement
Students complete le five course satisfactorily completed course noted academic record
Detailed information Option may obtained Department Computer Science
Students wish register Honours Combined Honours specialization Computer Science must seek approval Department Honours advisor prior registering second year
To admitted Honours Combined Honours specialization Computer Science student must To permitted continue Honours Combined Honours specialization Computer Science student must The following course great overlap first Computer Science course used elective degree combined degree specialization Computer Science See Biology
See
See
Admission specialization must approved Departments
Contact Computer Science information
See
See Biology
See
Admission Software Engineering option limited based academic performance
Students wish enter option apply Department Computer Science end second year
More information may obtained
The option lead Bachelor Science degree
It CEAB accredited engineering degree program leading designation Professional Engineer
See Bachelor Science
For specialization information admission requirement see
Student Services Vancouver Campus East Mall Vancouver BC Canada

The UBC Okanagan campus also offer
This program provides student comprehensive overview computer science including data structure database mobile web development software engineering numerical method security
Computer Science graduate impact society developing system used million user high demand
Students must take COSC COSC year since COSC
COSC must taken year
Through coursework research Honours Computer Science intensive program study
Students complete program ability work independently high level competency
The course requirement Major Computer Science program except student must maintain high grade level minimum student must complete COSC Honours Thesis credit
In exceptional case transferee another institution student may admitted Honours program notwithstanding criterion listed
A Minor Computer Science allows student combine extensive knowledge one field major necessary supporting computer science knowledge
A Minor Computer Science taken Science major requires credit Computer Science course along prerequisite
A Minor Computer Science taken Arts major requires credit Computer Science course along prerequisite
Enrolment Services University Centre Room University Way Kelowna BC Canada

It easy become overwhelmed school year
Some teacher start first unit continue year end attitude complete unit way life
Others try plan unit advance run event cause lose time
A calendar help teacher giving realistic overview expect term instructional time
Following instruction help create personal lesson plan calendar
Get blank calendar pencil
You want use pen probably need add erase item time
Mark vacation day calendar
I generally draw big X right day
Mark known testing date
If know specific date know month testing occur write note top month along approximate number instructional day lose
Mark scheduled event interfere class
Again unsure specific date know month make note top number day expect lose
For example know Homecoming occurs October lose three day write three day top October page
Count number day left subtracting day noted top month
Subtract one day month unexpected event
At time want choose subtract day vacation begin typically day lose
What left maximum number instructional day expect year
You using next step
Go necessary cover standard subject decide number day think needed cover topic
You use text supplementary material idea come
As go unit subtract number day required maximum number determined step
Adjust lesson unit result Step equal maximum number day
Pencil start completion date unit calendar
If notice unit would split long vacation need go back readjust unit
Throughout year soon find specific date new event remove instructional time go back calendar readjust
Do afraid readjust plan throughout year
It pay rigid teacher add stress
Remember use pencil
Publish calendar student desire see heading
There error
Please try
Thank signing

Years Up year CSP International Trimester Off Campus Trimester On Campus Trimester Off Campus Trimester On Campus Trimester Off Campus You find instant answer many question contact UNE directly via A candidate shall qualified admission see
Candidates referred University Policy
Advanced standing shall granted Special Topics Computing Information Technology Project
The period candidature shall three year candidate b ten year candidate
To qualify award candidate must pas unit value credit point comprising credit point either least credit point COSC unit plus least credit point COSC unit
Candidates shall complete approved program study comprising Candidates meet course requirement shall awarded Bachelor Computer Science
Subject Advanced Standing rule candidate discontinue study course may eligible exit Diploma Science completion credit point Advanced Diploma Science completion credit point
Candidates apply discontinue study exit either Diploma Science Advanced Diploma Science must apply subject current course requirement Bachelor Computer Science
This may mean receive full recognition previous study course structure changed response University external accreditation body requirement
Candidates referred
Candidates referred
Graduates coherent knowledge principle concept technique skill fundamental computer science information technology
They able apply knowledge create technology solves real world problem
They global perspective impact computing daily life future
Knowledge skill computer science information technology taught assessed practised core unit within course
The foundation algorithm programming taught unit advanced specialised knowledge skill taught second third unit
Graduates able communicate idea information clearly coherently technical audience using range medium
Communication skill taught practised assessed many unit within course
Students experience working distributed team presenting work critiquing work student group
In final year student required complete group project requires student demonstrate professional level communication skill project client well group member
Graduates able identify formulate problem design create analyse solution individually part collaborative team
They able apply critical thinking cognitive skill creative skill judgement intellectual independence
All unit teach ass skill
These include skill design thinking algorithm design system design software engineering debugging project management
Graduates demonstrate capacity critically evaluate source value validity information use information critical creative thinking
All unit course require student find critically evaluate information variety source
This practised assessed throughout course
Graduates demonstrate understanding practice highest standard ethical behaviour associated discipline profession including appreciation ethical responsibility towards colleague research subject wider community environment
Reflection social responsibility professional practice software development embedded course content
Units require student reflect social implication information technology social networking malicious software identity theft security measure
Graduates demonstrate creative analytical skill learn adapt new technique concept technology situation field continues evolve develop
They able generate new technology solution analyse appraise development made others
They take responsibility accountability learning professional practice
Students provided fundamental skill enable supplement knowledge adapt use new software development environment technology tool
This taught practised providing core skill exposing student variety programming language tool process environment specialised system
Graduates able apply skill knowledge individually part collaborative team
They able work intellectual independence collaborate technical colleague customer
Working group environment essential component course professional practice software development
A number core unit course require student work group provide guidance assessment group work
The final year project involves planning design implementation large software system team student provides graduate capstone experience
Please select whether current student future student Please contact via As current student need send enquiry AskUNE
University New England The University New England respect acknowledges people program facility built land surrounded sense belonging ancient contemporary world oldest living culture
In UNE value respect Indigenous knowledge system vital part knowledge capital Australia

University Victoria Finnerty Road Victoria BC Canada Phone Fax

This course introduce field computer science fundamental computer programming
Introduction Computer Science I specifically designed student prior programming experience taking course require background Computer Science
This course touch upon variety fundamental topic within field Computer Science use Java portable computer programming language developed Sun Microsystems Oracle demonstrate principle
We begin overview course topic well brief history software development
We cover basic programming terminology concept object class inheritance polymorphism well fundamental Java primitive data type relational operator control statement exception handling file input
By end course strong understanding fundamental Computer Science Java programming language
This course lay groundwork strong educational Computer Science successful career devoted implementing principle learn progress CS discipline
We begin course identifying motivation learning fundamental programming concept learning history programming language general
We discus hardware physical device make computer software Operating Systems application run computer computer
We conclude brief discussion Java programming language use throughout rest course
By end unit strong understanding history programming well prepared learn programming concept greater detail
Java programming language
Since programming OO currently one popular programming paradigm need learn fundamental concept order build career Computer Science
This unit begin discussion make OO programming unique advantage made paradigm newly designed program
We discus fundamental concept OO relate back Java
By end unit strong understanding programming relates Java employed
Now basic understanding OO programming move fundamental concept programming language studying semester Java
The concept learn unit many case directly transferable number language
We begin learning Hello World basic software application simply print Hello World In unit discus relational logical operator Java provide foundation topic like control structure discus Unit
In unit start taking look operator notation
We discus relational operator apply numeric operand object operand concluding unit introduction logical operator
By end unit able perform comparison logic function Java fundamental understanding employed
Control structure dictate behavior program circumstance
Control structure belong one two family test value determine code executed based value loop performing identical operation multiple time
Control structure like switch program behave differently based data fed
The loop allow repeat block code often needed
As see functionality useful designing complex program
This unit introduce control structure way used moving discus switch loop
We also discus advanced topic nesting scope
By end unit able draw information learned previous unit create control structure allow create complex useful program
In addition method predefined Java write method
In unit discus name method declare parameter list specify return type
This unit introduces scope variable well
By end unit strong understanding define call method
This unit discus Arrays
An Array data structure allows element data type stored
Each array element unique index associated value store
Arrays commonly used loop structure loop
In addition unit introduces array application
In unit discus two important programming concept Java input output well exception handling
Input output technique allow programmer design complex useful program
For reason must fully understand use programming language functionality
In unit discus function Java moving file writing reading data file
Each unit contain discussion applicable Java class part standard programming language FileWriter PrintWriter FileReader BufferedReader IOException
We identify common pitfall design concept keep mind programmer
By end unit strong understanding write read file write Java program performs function
Exception handling mechanism allows program continue executing even error occurs program instead terminating abruptly
Saylor Academy except otherwise noted
Excluding course final exam content authored Saylor Academy available license
material copyright respective owner shared various license
See
Saylor Academy trade name Constitution Foundation c organization educational activity conducted


Unit We start semester discussing difference imperative knowledge definitional knowledge fixed program stored program computer finally definition syntax static semantics semantics
We cover straight line branching looping program
Other topic include binary representation number order growth debugging program
Python concept covered unit include value type int float boolean string str tuples dictionary dict list
We also learn expression statement especially effectively use print statement program
Other topic include assignment conditionals loop assert function scope object model mutation mutability
By end Unit familiar following algorithmic technique guess check linear search bisection search successive approximation Newton method
You also learn recursive definition problem solving technique structure program using decomposition abstraction including specification parameter
Unit end quiz covering material lecture recitation problem set
This one course OCW
Find material course page linked along left
free open publication material thousand MIT course covering entire MIT curriculum
Freely browse use OCW material pace
There signup start end date
Use OCW guide learning teach others
We offer credit certification using OCW

Download file later
Send friend colleague
Modify remix reuse remember cite OCW source
Learn MIT OpenCourseWare make material used teaching almost MIT subject available Web free charge
With course available OCW delivering promise open sharing knowledge
Massachusetts Institute Technology Your use MIT OpenCourseWare site material subject

A system organizing day social religious commercial administrative purpose
This done giving name period typically
A designation single specific day within system
A calendar also physical record often paper system
A calendar also mean list planned event partly fully chronological list document calendar will
Periods calendar year month usually though necessarily synchronised cycle
The common type calendar lunar calendar occasionally add one remain synchronised long term
The term taken term first day month Roman calendar related verb call referring calling new moon first seen
Latin meant account book register account settled debt collected calends month
The Latin term adopted century spelling early modern
The course Sun Moon evident form commonly used society worldwide time unit
Nevertheless Roman calendar contained ancient remnant solar year
The first recorded calendar date dependent development calendar
A large number calendar system based found Ancient Near East date
Amongst calendar system calendar system Persian Empire turn gave rise well
A great number developed also influenced calendar outside immediate sphere Greek influence giving rise various well ancient
Calendars antiquity depending introduction align solar lunar year
This mostly based observation may early attempt model pattern intercalation algorithmically evidenced fragmentary
The reformed BC
The Julian calendar longer dependent observation new moon simply followed algorithm introducing leap day every four year
This created dissociation calendar
The based prohibition intercalation Islamic tradition dated sermon held AH Julian date March
This resulted lunar calendar shift relative season solar year
The first calendar reform early modern era introduced based observation shift Julian calendar solar year
There number modern proposal reform calendar recently
Such idea mooted time time failed gain traction loss continuity massive upheaval implementation religious objection
A full calendar system different calendar date every day
Thus week cycle full calendar system neither system name day within year without system identifying year
The simplest calendar system count time period reference date
This applies
Virtually possible variation using different reference date particular one le distant past make number smaller
Computations system matter addition subtraction
Other calendar one multiple larger unit time
Calendars contain one level cycle Calendars two level cycle Cycles synchronized periodic phenomenon Very commonly calendar includes one type cycle cyclic element
Most calendar incorporate complex cycle
For example vast majority track year month week day
The week practically universal though use varies
It run uninterrupted millennium
Solar calendar assign
A day may consist period following period may period successive event two sunset
The length interval two successive event may allowed vary slightly year may averaged
Other type calendar may also use solar day
Not calendar use solar year unit
A lunar calendar one day numbered within cycle
Because length even fraction length purely lunar calendar quickly drift season vary much near equator
It however stay constant respect phenomenon notably
An example
Alexander Marshack controversial reading believed mark bone baton BC represented lunar calendar
Other marked bone may also represent lunar calendar
Similarly Michael Rappenglueck belief mark cave painting represent lunar calendar
A lunar calendar compensates adding extra month needed realign month season
An example Hebrew calendar us
Nearly calendar system group consecutive day month also year
In approximates Earth tropical year time take complete cycle traditionally used facilitate planning activity
In approximates cycle moon phase
Consecutive day may grouped period week
Because number day whole number solar calendar must different number day different year
This may handled example adding extra day
The applies month lunar calendar also number month year lunisolar calendar
This generally known
Even calendar solar lunar year divided entirely month never vary length
Cultures may define unit time week purpose scheduling regular activity easily coincide month year
Many culture use different baseline calendar starting year
For example year based reign current emperor Year
An based ongoing observation example religious Islamic calendar old religious Jewish calendar time
Such calendar also referred calendar
The advantage calendar perfectly perpetually accurate
The disadvantage working particular date would occur difficult
An one based strict set rule example current Jewish calendar
Such calendar also referred calendar
The advantage calendar ease calculating particular date occurs
The disadvantage imperfect accuracy
Furthermore even calendar accurate accuracy diminishes slowly time owing change Earth rotation
This limit lifetime accurate arithmetic calendar thousand year
After rule would need modified observation made since invention calendar
Calendars may either complete incomplete
Complete calendar provide way naming consecutive day incomplete calendar
The early way designating day winter month lump together winter example incomplete calendar Gregorian calendar example complete calendar
The primary practical use calendar identify day informed agree future event record event happened
Days may significant agricultural civil religious social reason
For example calendar provides way determine start planting harvesting day day mark beginning end business accounting period day legal significance day tax due contract expires
Also calendar may identifying day provide useful information day season
Calendars also used help people manage personal schedule time activity particularly individual numerous work school family commitment
People frequently use multiple system may keep calendar help prevent overcommitting time
Calendars also used part complete system date time day together specify moment
In modern world timekeeper show time date weekday
The international standard used almost everywhere world civil purpose
It purely solar calendar cycle leap day cycle designed keep duration year aligned
Each Gregorian year either day leap day inserted February amounting average Gregorian year day compared solar year day
It introduced refinement use throughout European Middle Ages amounting correction length year
During Early Modern period however nation century became widely adopted worldwide sake convenience international trade
The last European country adopt reform Greece
The used Gregorian calendar inherited medieval convention established associated Julian calendar
The year number variously given AD CE indeed
The important use calendar keeping track observation religious feast day
While Gregorian calendar historically motivated relation calculation worldwide secular use standard
Alongside use Gregorian calendar secular matter remain number calendar use religious purpose
including use
The Hijri calendar consisting lunar month year day
It used date event Muslim country concurrently Gregorian calendar used Muslims everywhere determine proper day celebrate Islamic holy day festival
Its epoch corresponding AD With annual drift day seasonal relation repeated approximately Islamic year
Various remain use Indian subcontinent including used Northern India calendar state
The traditional lunisolar calendar also based older version Hindu calendar
Most Hindu calendar inherited system first enunciated Lagadha standardized subsequently reformed astronomer AD century century
The used worldwide religious cultural affair also influence civil matter Israel used business dealing dating
worldwide use
The calendar widely used religious social purpose
The used part
The Ethiopic calendar principal calendar used also use area
In neighboring alongside Gregorian Islamic calendar
In used month day adopted western standard although year still based traditional
A fiscal calendar generally mean accounting year government business
It used budgeting keeping account taxation
It set month may start date year
The US government fiscal year start October end September
The government India fiscal year start April end March
Small traditional business India start fiscal year festival end day next year Diwali festival
In accounting particularly accounting software fiscal calendar fix month specific number week facilitate comparison month month year year
January always exactly week Sunday Saturday February week March week etc
Note calendar normally need add week every year might added December might depending organization us date
There exists international standard way
The ISO week start Monday end Sunday
Week always week contains January Gregorian calendar
The term applies given scheme timekeeping also specific record device displaying scheme example form pocket calendar desktop calendar etc
In paper calendar one two sheet show single day week month year
If sheet single day easily show date weekday
If sheet multiple day show conversion table convert weekday date back
With special pointing device crossing past day may indicate current date weekday
This common usage word
In USA Sunday considered first day week appears far left Saturday last day week appearing far right
In Britain weekend may appear end week first day Monday last day Sunday
The US calendar display also used Britain
It common display Gregorian calendar separate monthly grid seven column Monday Sunday Sunday Saturday depending day considered start week varies according country five six row rarely four row month February contains day beginning first day week day month numbered cell beginning
The sixth row sometimes eliminated marking together necessary
When working week rather month continuous format sometimes convenient blank cell inserted ensure first day new month begin fresh row
Calendaring software provides user electronic version calendar may additionally provide appointment book address book contact list
Calendaring standard feature many
The software may local package designed individual use extension without Exchange Server may networked package allows sharing information user Exchange Server

Do also want Logout Facebook
keep logged Facebook browser
Do also want Logout Amazon
keep logged Amazon browser
National Parks Wall Calendar Dogs Desk Calendar Cats Desk Calendar You Beyonce Mug Tropical Beaches Wall Calendar

