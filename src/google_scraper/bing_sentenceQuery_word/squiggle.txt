Unauthorized duplication whole part content website strictly prohibited

This post part series produced HuffPost Mentorship Program
discus issue affecting woman science technology engineering math
Transitioning sophomore year summer given lot time think reflect upon experience towards majoring Computer Science
I feel extremely different way commonly portrayed medium even I expected
So six reality computer science major Personally brother one encouraged take computer science class
I tried learn code unsuccessful I could even set development environment
Even though dropped intro CS class told I could field needed woman engineer like
Through faith I took web development course jumped intro CS track Stanford stuck CS train ever since
The number one thing attracts CS major fact I build stuff stay around forever said internet written ink bad deal
b accessible many people c like teaching really stupid baby something
Mehran Sahami really famous one awesome CS professor told u first day class computer really dumb really good following instruction
Almost good point everything letter
If talk computer language make want golden
My problem solving skill become immensely better becoming computer science major
In fact everything I think problem
Running late morning
I break problem going take time I effectively cut corner avoid wasting time
My parent often rely fix anything technologically related television phone name
I approach every issue software problem could wrong
Look symptom problem see show
Understand system could causing
And usually I get solution
It easy give say oh care someone else code
Another one awesome CS Professors Eric Roberts showed u first day second introductory class even Stanford graduated student CS major Valley hired still need people fill job
It surprising software job even working eBay talent one thing company aggressively looking
You give could
Maybe could code next app Learning CS involves experimentation
You mess around code really get
Sometimes mean break something already working
But great thing return get learn something new sometimes something even documented fixed
This definitely happens work everyday
Sometimes I feel like taking lazy approach going back old way thing trust definitely lot better play around
Being CS major hard probably many people
You doubt everyday whether meant want give
You see kid since two year old think Damn I even bother trying
You fail programming ponder question personal experience
The truth one talk hard want think
Even year later I still doubting decision major CS software engineering
I doubt day I set foot first second third CS class every exam I took first day internship day I push code Github
But truth OK doubt long hold back
You think best
Of course
Do afraid wo get anywhere unless try
So someone contemplating computer science someone afraid stop
Forget boy tell ca forget hater jealous zeal
Code
If broken get segmentation fault Java exception go fix
Chances assume meant never able feel thrill getting something work even Hello World stopping
Sometimes one stopping answer let go

However informally referred squiggly twiddle
On keyboard layout usually found near top left corner Tab key
The tilde used language diacritical mark
For example Portuguese indicates nasalization
The character also used informally English symbol approximately similar
The squiggly also find use computer
In system tilde used return user home directory navigating via terminal
Moreover different programming language use character serve various purpose
For example C tilde bitwise NOT operator

âãÏÓ obj endobj xref n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n trailer R R startxref EOF obj R R R R null null null R R R true endobj obj R endobj obj R endobj obj R R R R endobj obj R stream B F wg Ë ÒÌ endstream endobj obj endobj obj R R R R R R R R R R R R R R R R R R R endobj obj Bold R endobj obj Bold R endobj obj endobj obj R endobj obj R endobj obj endobj obj endobj obj R stream V µ þìXµ Åßÿ Á Ò q Xo F wB tÇ hþ On j R rnfl ìÀí zÐøåK Üó ñþÄg ã endstream endobj obj R endobj obj R endobj obj endobj obj R stream Ïèå jæÌ W ÚÛ LÔ p Ó ïVVU ã
ã oä äuéuPTè är endstream endobj obj BoldItalic R endobj obj BoldItalic R endobj obj endobj obj R stream ßÌp Þ wË ËÆÄ Oª
ú â Eíýº vÕî O KkÚ endstream endobj obj endobj obj R stream xK ùmAF n S î uØ ë D í ö TOßzÕÔóa ÙýP pEû Aä Fé Ëpë
ò ï endstream endobj obj endobj obj R stream Ó shÕ Ö Â í NàºØ Aû ñ Ñ wäçBb Ð n ÅyCÑ K à âûð endstream endobj obj endobj obj R stream öÊ õ ëuÊ ÆÊím VË Ñ
ËÂQçR gÈ ÕÈþ Úæ º ý ýz aqæÐ µö yz endstream endobj obj endobj obj R stream Ò pYüf L öBÇË áÉvI ñ ÚY Ê Gí J Ûâ mÈóTÎóÌ Ú

Computer science also strong connection discipline
Many problem science engineering health care business area solved effectively computer finding solution requires computer science expertise knowledge particular application domain
Thus computer scientist often become proficient subject
Finally computer science wide range specialty
These include computer architecture software system graphic artifical intelligence computational science software engineering
Drawing common core computer science knowledge specialty area focus particular challenge
Finally importantly computer scientist computer scientist fun
Not mention lucrative career opportunity
Computer Science The Profession Computer science discipline involves understanding design computer computational process
In general form concerned understanding information transfer transformation
Particular interest placed making process efficient endowing form intelligence
The discipline range theoretical study algorithm practical problem implementation term computational hardware software
A central focus process handling manipulating information
Thus discipline span advancing fundamental understanding algorithm information process general well practical design efficient reliable software hardware meet given specification
Computer science young discipline evolving rapidly beginning
As includes theoretical study experimental method engineering design one discipline
This differs radically physical science separate understanding advancement science application science field engineering design implementation
In computer science inherent intermingling theoretical concept computability algorithmic efficiency modern practical advancement electronics continue stimulate advance discipline
It close interaction theoretical design aspect field bind together single discipline
Because rapid evolution difficult provide complete list computer science area
Yet clear crucial area theory algorithm data structure programming methodology language computer element architecture
Other area include software engineering artificial intelligence computer networking communication database system parallel computation distributed computation interaction computer graphic operating system numerical symbolic computation
A professional computer scientist must firm foundation crucial area field likely knowledge one area discipline depending upon person particular area practice
Thus well educated computer scientist able apply fundamental concept technique computation algorithm computer design specific design problem
The work includes detailing specification analysis problem provides design function desired satisfactory performance reliable maintainable meet desired cost criterion
Clearly computer scientist must sufficient training computer science area able accomplish task must also firm understanding area mathematics science well broad education liberal study provide basis understanding societal implication work performed
Computer Science study principle application technology computing computer
It involves study data data structure algorithm process structure principle computer hardware software design methodology topic numerical analysis operation research artificial intelligence language design structure translation technique
Computer Science provides foundation knowledge student career objective wide range computing profession
The study efficient effective software development technique
Team work communication skill
An interest applying technology problem wide variety discipline
Computer Science concerned information much sense physic concerned energy devoted representation storage manipulation presentation information
Computer Science concerned study machine communication man machine application machine
Major area Computer Science include
Operating Systems concerned development structure complex program facilitate communication

Computational Science analysis numerical method solving mathematical problem computer

Programming Languages study design property language human communicate computer

Architecture study use mathematical logic design electronic circuit

Intelligent Systems concerned mean computer may perform task might characterized intelligent performed human

Automata Theory abstract study computer capability

Information Storage Retrieval study method storing vast amount data computer method searching retrieving data

Software Engineering study tool technique software design development testing maintenance

A question I gotten lot lately difference similarity Computer Science Computer Engineering
At risk difference I written guide explain Computer Science Computer Engineering alike differ
Computer Engineering marriage Computer Science Electrical Engineering
It focus computing form microprocessor embedded computing device laptop desktop system supercomputer
As concern electrical engineering consideration microprocessor function designed optimized data communicated among electronic component integrated system electronic component designed operate process instruction expressed software software written compiled optimized specific hardware platform
Therefore computer engineer electrical engineer specialize software design hardware design system design integrates
Computer Science study data instruction processed stored communicated computing device
A modern descendant Applied Mathematics Electrical Engineering Computer Science deal algorithm processing data symbolic representation data instruction design instruction language processing data technique writing software process data variety computing platform protocol communicating data reliably securely across network organization data database various type scale emulation human intelligence learning computer algorithm statistical modeling data large database support inference trend technique protecting content authenticity data
Therefore computer scientist scientist mathematician develop way process interpret store communicate secure data
Because Computer Engineers Computer Scientists ultimately work data attempt ultimately harness meaning significant overlap coursework student two field take well career pursue
This minimize distinctive nature two discipline
It simply acknowledges fact type computer professional find context purpose similar kind project different aspect kind project
Both Computer Engineers Computer Scientists advance computing technology solve problem using computing technology
If consider computing technology term scale Computer Engineers operate often microscopic macroscopic end spectrum whereas Computer Scientists work middle part spectrum
More specifically Computer Engineers deal physic semiconductor electronics may design hardware integrated circuit level small well integration hardware software optimized run realize complete computing system large
Computer Scientists write software design database devise algorithm format communication secure data processed hardware make integrated system function
Consider iPhone
Apple employ Computer Scientists Computer Engineers design new version iPhone
Computer Engineers Electrical Engineers designed chip house integrated circuit make iPhone various component cell radio screen control memory microprocessor function figured get various component work
That involves looking device microscopic level integrated system level
Computer Scientists wrote operating system manages memory concurrently running application apps app store run top operating system packing unpacking data packet network communication encrypting data prying eye see
The computer scientist provide glue piece bring turn computer engineer beginning product component design computer engineer end product device people text browse web play Angry Birds
From example easy imagine much dependence function realizing finished product significant overlap coursework Computer Engineers Computer Scientists take career opportunity pursue
I found website provides particularly helpful description Computer Engineering identifies kind job Computer Engineers work company hire salary earn
That page begin helpful list specialization area Computer Engineering
I copied list specialization I marked asterisk Computer Scientists also specialize
In case overlap Computer Scientists focus software development aspect specialization Computer Engineers study hardware design integration hardware software needed implement specialization
That website present number interesting data Computer Engineering
For example table express relationship among Electrical Engineering Computer Engineering Computer Science term class major take percentage class fall category hardware software
You see computer science software computer engineering hardware theme play table
That easiest way distinguish two field
And yet enough overlap ensure kind student find plenty opportunity wide range career computer field
Professor chair Mathematics Computer Science Director Master Science Information Security Lewis University
You find
Please also I would like ask difference Sc
Computer Science Sc
Mathematics Computer Science
I computer science social science natural science
That good question
There consensus kind science Computer Science
A good book subject The Science Computing Shaping Discipline Matti Tedre
Personally I see Computer Science engineering discipline
Like Electrical Engineering applies law Physics Math solve problem
Computer Engineering Computer Science mean different thing different people
I think article may explaining American view
In Spain degree time I called Computer Science Engineering literally translated lasted year
Actually amount work year degree number Credits standardized EU
They teach math quite bit database software hardware
I think equivalent Degree Master US
Now education Spain changed programme I date I know issued kind lightweight degree year
Later go buy master without knowing nearly much knew degree fundamental
What business built top education
I find bit shame actually
But give older engineer competitive advantage opinion
Greetings everyone I Computer Engineering Computer Science
The simplest way I think explain difference BSCE BSCS considering two degree following A BSCE degree include coursework also required BSEE electrical engineering degree
This prepare graduate work company develop product consisting software directly control hardware
Some example Motorola Nokia texas instrument
A BSCE degree include little hardware electrical engineering course required BSCE degree
Instead computer science coursework operating system design compiler theory advanced algorithm design taken instead
This best degree working company google amazon Citrix
Which best depends interest want work
In experience many company need kind
While engineer Citrix never need interface hardware develop window kernel mode device driver
good luck
Required field marked Kathrynne Skonicki Director Media Relations Office Marketing Communications

study theory experimentation engineering form basic design use computer
It scientific practical approach application systematic study feasibility structure expression mechanization methodical underlie acquisition representation processing storage communication access information
An alternate succinct definition computer science study automating algorithmic process scale
A specializes theory computation design computational system
Its field divided variety theoretical
Some field explores fundamental property intractable problem highly abstract field emphasize visual application
Other field still focus challenge implementing computation
For example considers various approach description computation study investigates various aspect use
considers challenge making computer computation useful usable human
The earliest foundation would become computer science predate invention modern
Machines calculating fixed numerical task existed since antiquity aiding computation multiplication division
Further performing computation existed since antiquity even development sophisticated computing equipment
designed constructed first working
In demonstrated digital mechanical calculator called
He may considered first computer scientist information theorist among reason documenting binary number system
In launched industry released simplified first calculating machine strong enough reliable enough used daily office environment
started design first eventually gave idea first
He started developing machine le two year sketched many salient feature modern computer
A crucial step adoption punched card system derived making infinitely programmable
In translation French article Analytical Engine wrote one many note included algorithm compute considered first computer program
Around invented used process statistical information eventually company became part
In one hundred year Babbage impossible dream convinced IBM making kind punched card equipment also calculator business develop giant programmable calculator based Babbage Analytical Engine used card central computing unit
When machine finished hailed Babbage dream come true
During new powerful machine developed term came refer machine rather human predecessor
As became clear computer could used mathematical calculation field computer science broadened study general
Computer science began established distinct academic discipline early
The world first computer science degree program began
The first computer science degree program United States formed
Since practical computer became available many application computing become distinct area study right
Although many initially believed impossible computer could actually scientific field study late fifty gradually became accepted among greater academic population
It brand formed part computer science revolution time
IBM short International Business Machines released IBM later IBM computer widely used exploration period device
Still working IBM computer frustrating misplaced much one letter one instruction program would crash would start whole process
During late computer science discipline much developmental stage issue commonplace
Time seen significant improvement usability effectiveness
Modern society seen significant shift user computer technology usage expert professional user base
Initially computer quite costly degree human aid needed efficient part professional computer operator
As computer adoption became widespread affordable le human assistance needed common usage
Despite short history formal academic discipline computer science made number fundamental contribution science fact along founding science current epoch human history called driver seen third major leap human technological progress CE BC
These contribution include Although first proposed term computer science appears article Louis Fein argues creation analogous creation justifying name arguing like subject applied interdisciplinary nature characteristic typical academic discipline
His effort others rewarded university went create program starting Purdue
Despite name significant amount computer science involve study computer
Because several alternative name proposed
Certain department major university prefer term emphasize precisely difference
Danish scientist suggested term reflect fact scientific discipline revolves around data data treatment necessarily involving computer
The first scientific institution use term Department Datalogy University Copenhagen founded Peter Naur first professor datalogy
The term used mainly Scandinavian country
An alternative term also proposed Naur used distinct field data analysis including statistic database
Also early day computing number term practitioner field computing suggested
Three month later journal suggested followed next year
The term also suggested
In Europe term derived contracted translation expression automatic information
informazione automatica Italian information mathematics often used
French German Italian Dutch Spanish Portuguese mean informatics
Similar word also adopted UK
In however linked applied computing computing context another domain
A folkloric quotation often attributed almost certainly first formulated state computer science computer astronomy telescope
The design deployment computer computer system generally considered province discipline computer science
For example study computer hardware usually considered part study commercial deployment often called information technology
However much idea various discipline
Computer science research also often intersects discipline philosophy
Computer science considered much closer relationship mathematics many scientific discipline observer saying computing mathematical science
Early computer science strongly influenced work mathematician continues useful interchange idea two field area
The relationship computer science software engineering contentious issue muddied term software engineering mean computer science defined
taking cue relationship engineering science discipline claimed principal focus computer science studying property computation general principal focus software engineering design specific computation achieve practical goal making two separate complementary discipline
The academic political funding aspect computer science tend depend whether department formed mathematical emphasis engineering emphasis
Computer science department mathematics emphasis numerical orientation consider alignment
Both type department tend make effort bridge field educationally across research
A number computer scientist argued distinction three separate paradigm computer science
argued paradigm science technology mathematics
working group argued theory abstraction modeling design
Amnon Eden described rationalist paradigm treat computer science branch mathematics prevalent theoretical computer science mainly employ technocratic paradigm might found engineering approach prominently software engineering scientific paradigm approach artifact empirical perspective identifiable branch
As discipline computer science span range topic theoretical study algorithm limit computation practical issue implementing computing system hardware software
formerly called Computing Sciences Accreditation made representative ACM IEEE CS four area considers crucial discipline computer science
In addition four area CSAB also identifies field software engineering artificial intelligence computer networking communication database system parallel computation distributed computation interaction computer graphic operating system numerical symbolic computation important area computer science
mathematical abstract spirit derives motivation practical everyday computation
Its aim understand nature consequence understanding provide efficient methodology
All study related mathematical logic formal concept method could considered theoretical computer science provided motivation clearly drawn field
Data structure algorithm study commonly used computational method computational efficiency
According fundamental question underlying computer science What efficiently automated
Theory computation focused answering fundamental question computed amount resource required perform computation
In effort answer first question examines computational problem solvable various theoretical
The second question addressed study time space cost associated different approach solving multitude computational problem
The famous problem one open problem theory computation
Information theory related quantification information
This developed find fundamental limit operation compressing data reliably storing communicating data
Coding theory study property system converting information one form another fitness specific application
Codes used recently also
Codes studied purpose designing efficient reliable method
Programming language theory branch computer science deal design implementation analysis characterization classification individual
It fall within discipline computer science depending affecting software engineering
It active research area numerous dedicated academic journal
Formal method particular kind based technique development software system
The use formal method software hardware design motivated expectation engineering discipline performing appropriate mathematical analysis contribute reliability robustness design
They form important theoretical underpinning software engineering especially safety security involved
Formal method useful adjunct software testing since help avoid error also give framework testing
For industrial use tool support required
However high cost using formal method mean usually used development safety utmost importance
Formal method best described application fairly broad variety fundamental particular calculus also problem software hardware specification verification
Computer architecture digital computer organization conceptual design fundamental operational structure computer system
It focus largely way central processing unit performs internally access address memory
The field often involves discipline computer engineering electrical engineering selecting interconnecting hardware component create computer meet functional performance cost goal
Computer performance analysis study work flowing computer general goal improving controlling using resource efficiently eliminating predicting performance anticipated peak load
Concurrency property system several computation executing simultaneously potentially interacting
A number mathematical model developed general concurrent computation including model
A distributed system extends idea concurrency onto multiple computer connected network
Computers within distributed system private memory information often exchanged among achieve common goal
This branch computer science aim manage network computer worldwide
Computer security branch computer technology whose objective includes protection information unauthorized access disruption modification maintaining accessibility usability system intended user
Cryptography practice study hiding encryption therefore deciphering decryption information
Modern cryptography largely related computer science many encryption decryption algorithm based computational complexity
A database intended organize store retrieve large amount data easily
Digital database managed using database management system store create maintain search data
Computer graphic study digital visual content involves synthesis manipulation image data
The study connected many field computer science including heavily applied field special effect
Research develops theory principle guideline user interface designer create satisfactory user experience desktop laptop mobile device
field study concerned constructing technique using computer analyze solve problem
In practical use typically application form problem various scientific discipline
Artificial intelligence AI aim required synthesize process environmental adaptation learning communication found human animal
From origin artificial intelligence research necessarily drawing area expertise
AI associated popular mind main field practical application embedded component area require computational understanding
The late question Can computer think
question remains effectively unanswered although still used ass computer output scale human intelligence
But automation evaluative predictive task increasingly successful substitute human monitoring intervention domain computer application involving complex data
Software engineering study designing implementing modifying software order ensure high quality affordable maintainable fast build
It systematic approach software design involving application engineering practice software
Software engineering deal organizing analyzing deal creation manufacture new software internal maintenance arrangement
Both computer application software engineer computer system software engineer projected among fastest growing occupation
The philosopher computing noted three Conferences important event computer science research
During conference researcher public private sector present recent work meet
Unlike academic field computer science prestige greater journal publication
One proposed explanation quick development relatively new field requires rapid review distribution result task better handled conference journal
Since computer science relatively new field widely taught school university academic subject
For example estimated percent high school United States offered computer science education
A report Association Computing Machinery ACM Computer Science Teachers Association CSTA revealed state adopted significant education standard high school computer science
However computer science education growing
Some country Israel New Zealand South Korea already included computer science respective national secondary education curriculum
Several country following suit
In country significant gender gap computer science education
For example US computer science degree conferred woman
This gender gap also exists Western country
However part world gap small nonexistent
In approximately half computer science degree conferred woman
In woman made computer science graduate


A computer science education sure ticket job today tech economy right
Hardly say one startup CEO lambasts school failing teach practical computer skill suggesting developer skip degree path first place
In weekend Daniel Gelernter explains hire CS graduate work app company
Here gist argument emphasis mine The thing I look developer degree computer science
Computer science department prepare student academic research career spurn job actually pay money

Harvard one make good developer one term
So college graduate coding skill tech startup need likely learned problem set
As one developer told The people good school part computer good My experience hiring show exactly
But
I one developer degree electrical engineering learn development skill college I ask
No
Taking shot computer science hardly new course
I recall college experience decade ago friend physic math department sneered intellectual confines subject meanwhile others told serious tech occurred electrical engineering department
I say sure friend right background law liberal art I add Gelernter comment jibe experience tech reporter
In course talking hundred startup founder developer year I recall meeting many computer science I certainly met successful dropout
Interestingly Gelernter also skeptical coding school bootcamps sprouting
He say program typically last around week cost thousand dollar unlikely land student plum job Facebook
The simple reason argues enroll coding bootcamp unlikely natural chop good developer first place want job
He prefers people innate passion talent coding first place
So mean one get CS degree attend boot camp
Not necessarily
There plenty good job computer field employer looking credential even position lack cachet Pinterest engineer Silicon Valley app It also worth noting Gelernter proposed path limit renegade coder ideal fine certain cultural young wealthy unattached practical option people
More seriously Gelernter dismissive view academic approach computer science risk glorifying minor technical talent expense understanding computer relation science humanity
An Android developer authority computer copy editor Shakespeare Keats
Instead larger lesson may developer realistic career opportunity school upfront program lead
As startup CEOs keep mind distinction coding vocational training knowledge

Logo best known language introduced tool computer graphic
In fact many people Logo turtle graphic synonymous
Some computer company gotten away selling product called Logo provided nothing turtle graphic bought Logo provided list processing primitive used far probably feel cheated
Historically idea Logo mainly turtle graphic mistake
As I mentioned beginning Chapter Logo name come Greek word Logo first designed language manipulate language word sentence
Still turtle graphic turned powerful addition Logo
One reason form computer graphic
But programming language allowed graphic programming Logo
In chapter look reason graphic specifically major advance programming technology
This chapter ca long enough treat possibility computer graphic fully
My goal merely show idea using word list also fruitful different problem domain
Ideas like locality modularity recursion appear although sometimes different guise
I assuming already introduced Logo turtle graphic either school reading Logo tutorial book
If perhaps read one book
But case brief overview primitive procedure turtle graphic
Although version Logo allow one turtle allow turtle programmable shape speed I consider traditional single static turtle
Type command short input
The effect command initiate Logo graphic capability
A turtle appear center graphic window
Depending version Logo turtle may look like actual animal head four leg Berkeley Logo may represented triangle
The turtle facing toward top screen
Any previous graphic drawing erased screen computer memory
The crucial thing turtle distinguishes metaphor computer graphic turtle pointing particular direction move direction
It move forward back like car reverse gear sideways
In order draw direction turtle must turn facing new direction
In respect unlike car must turn move time
The primary mean moving turtle command abbreviated
take one input must number
The effect move turtle direction facing distance specified input
The unit distance turtle step small distance depends resolution computer screen
Generally one turtle step smallest line computer draw
This slightly oversimplified though smallest distance may different different direction
But size turtle step depend direction always distance given computer
Try typing command Since turtle facing toward top screen way moved
The turtle higher screen line behind indicating path followed
The first turtle actual robot rolled along floor
They got name turtle hard shell surrounding delicate electronic innards
A robot turtle pen belly push floor pull inside
When pen turtle draw trace motion along floor
When talking screen turtle customary think screen kind map representing horizontal floor
Therefore instead referring screen direction left right talk compass heading North South West East
Your turtle facing North
Besides fitting better turtle metaphor terminology avoids possible confusion word left could mean either left left
They direction right wo turn turtle
To avoid problem use West left edge screen reserve word left direction left whichever way turtle facing
Logo provides primitive command raise lower turtle pen
The command abbreviated take input effect raise pen
In word use command turtle motion wo draw line
Try Similarly command take input lower pen
Here procedure try The command take one input must number
The effect move turtle backward distance used input
What think give noninteger input
Zero input
Negative input
Try possibility
Then look command reference manual version Logo see manual describes command fully
To turn turtle two command provided
abbreviated take one input must number
Its effect turn turtle toward left
The angle turtle turn input angle measured degree turn turtle way around
In word instruction real effect
Another way saying turtle turn toward left turn The command like except turn turtle clockwise toward right
Clear screen try classic beginning point Logo turtle graphic This instruction tell Logo draw four line turtle step long turn degree line
In word draw square
There many turtle procedure provided Logo fundamental one go quite far generating interesting computer graphic
If much experience turtle graphic might enjoy spending time exploring possibility
There many introductory Logo turtle graphic book help
Because part Logo programming thoroughly covered elsewhere I going suggest graphic project
Instead I want go consider deeper issue computer programming illuminated turtle metaphor
Earlier considered difference variable available within particular procedure variable used throughout entire project
I tried convince use local variable much powerful programming style one relies global variable everything
For one thing local variable essential make recursion possible order single procedure solve large problem smaller subproblem simultaneously invocation procedure must independent variable
But even recursion issue complex program much easier read understand procedure understood without thinking context used
The turtle approach computer graphic embodies principle locality different way
The fact turtle motion command turtle turning command mean graphic procedure need think larger picture
To understand mean compare turtle metaphor metaphor commonly used computer graphic This metaphor come analytic geometry invented Rene Descartes
The word Cartesian derived name
Descartes goal use technique algebra solving geometry problem using describe In plane like computer screen need two number identify point
These number work like longitude latitude geography One tell far point left right tell high
This diagram show computer screen grid horizontal vertical line drawn
The point two heavy line meet called represented number
For point first number horizontal distance origin point second number vertical distance origin point
A positive mean point right origin negative mean point left origin
Similarly positive mean point origin negative put origin
Logo allow refer point Cartesian coordinate using list two number
The origin point turtle start clear screen
The primary tool graphic Logo command ition
requires one input must list two number
Its effect move turtle point screen coordinate
If pen turtle draw line move
Here might draw square using Cartesian graphic instead turtle graphic Do see I said Cartesian metaphor global like use global variable
Each instruction square take account turtle position within screen whole
The point view draw picture observer standing plane looking
This observer see turtle also edge center screen part relevant drawing line
By contrast turtle geometry metaphor adopts point view turtle line drawn without regard turtle global term
Using turtle metaphor draw square figure program anywhere screen orientation
First I write command Now example used different position orientation The head eye upright square nose square angle diamond
To write program using Cartesian graphic know absolute coordinate corner square
To draw square unusual angle need trigonometry calculate coordinate
Here another demonstration point
Clear screen type instruction You see square drawn several different orientation
This would program tried using Cartesian metaphor
From point view drawing upright square drawing diamond
It global point view taking border screen account difference
From global point view think difference
How describe make procedure sometimes draw one thing upright square sometimes another diamond
The answer general term result command depends past turtle twist turn got wherever may
That turtle sort memory past event
But matter actually turtle entire past history
All count turtle current current matter got
Those two thing position heading called turtle It little like trying solve Rubik Cube may turned part cube time already count current pattern color got
I mentioned command set position
There also command abbreviated set heading
take one input number
The effect turn turtle face toward compass heading specified number
Zero represents North heading measured degree clockwise North
For example East West
The compass heading different system angle measurement used analytic geometry angle measured counterclockwise East instead clockwise North
In addition command set turtle state Logo provides operation find state
po operation input
Its output list two number representing turtle current position
heading also operation input
Its output number representing current heading
Remember use state command operation thinking global Cartesian style local turtle style
Global state sometimes important global variable sometimes useful
If want draw picture containing three widget might use get turtle position widget
But procedure draw widget probably use
You might also use extensively situation Cartesian metaphor generally appropriate turtle metaphor like graphing mathematical function
As case global variable likely overuse global graphic style accustomed BASIC computer graphic
A good rule thumb something turtleish graphing function use pen
Do see
Very young child often begin playing Logo simply moving turtle around random
The resulting picture usually look interesting
You recapture day youth alternating command arbitrary input
Here sample I embodied procedure This beautiful picture
But something interesting happens keep squiggling repeatedly Instead filling screen hash turtle draw symmetrical shape repeat path
try another example turn sort fancy square repeat turn pinwheel
Does every possible squiggle produce repeating pattern way
Yes
Sometimes procedure many time essentially combination command eventually retrace step
There one exception talk shortly
To see repetition brings order chaos think simpler Logo graphic procedure probably familiar Since recursive procedure without stop rule keep running forever
You stop pressing BREAK key whatever particular computer requires
The procedure draw regular polygon example try A little thought experimentation show input make picture larger smaller change shape
The shape entirely controlled input
What angle would pick draw triangle
A pentagon
How know
The trick think turtle state
When finish drawing polygon turtle must return original position order ready retrace path
To return original heading turtle must turn complete circle degree
To draw square example turtle must turn degree four turn turn must degree
To draw triangle turn must degree
Now explain input draw star
Okay back squiggle
Earlier I said thing remember turtle past history change state
It matter change came
When draw turtle move certain distance turn certain angle
The fact took roundabout path matter
As happens turn right degree total
This equivalent turning left degree
That repeating draw something shaped like square
What
If repeating draw figure symmetry total turning degree
Is
Here another bizarre shape
See predict kind symmetry show actually repeat computer
Suppose like shape want draw completed picture look triangular symmetry instead square
Can
Of course simply change last instruction procedure total turning degree instead
Go ahead try
Be careful left right
But rather ugly process edit order change squiggle look like squiggle fit larger picture
For one thing violates idea modularity
job drawing squiggle another procedure something like combine squiggle symmetrical pattern
For another people arithmetic computer arithmetic
To clean act I going start writing procedure draw arbitrary squiggle without changing heading
It called protects heading change squiggle procedure
This procedure demonstrates use
We remember turtle initial heading local variable
Then carry whatever squiggle procedure specify input
The command take Logo instruction list input evaluates
Here use Notice drawn screen would invoked directly difference turtle final heading initial heading
Now use write procedure let u specify kind symmetry want Try instruction like Is better
I mentioned exception rule every squiggle eventually retrace step repeat
Here Try repeating time
You find instead turning around original position heading turtle go straight distance
Why
symmetry total turning degree
What total turning
Of course use second input perform like others control turtle heading case
I using random squiggle silly name make point paying attention symmetry Logo make silk purse sow ear
But course reason apply carefully designed piece
Here one I like I like write procedure draw picture tree The trick identify recursive problem
Do see subproblems
The tree consists trunk two smaller tree attached
So first approximation solution might look like If try running procedure see still work
But let remind unfinished procedure like feel every detail worked first touch keyboard
The first obvious problem stop rule procedure keep trying draw smaller smaller subtrees
What limiting condition
In case obvious end like word becoming empty
There two approach could take limiting number branch tree
One approach would choose explicitly deep want get recursive invocation
We could adding another input called number level recursion allow The approach would keep letting branch get smaller go reasonable minimum Either approach reasonable
I choose second one seems little simpler
The cost choice somewhat le control final picture I sure exactly number branch I originally planned
The modified procedure come halt still draw tree I mind
The problem version leave turtle position heading originally
important say assumption end first smaller tree turtle back top main trunk position draw second subtree
We fix problem making turtle climb back trunk subtree Voila
If try see something like picture I mind
You probably thinking tree look
There several thing wrong It symmetrical enough branch branch grow partway trunk well top
But problem solved adding step procedure We embellish tree much want
The requirement procedure The turtle final position heading must beginning position heading
Because I chose use minimum length stopping condition shape tree depends size trunk
That slightly unusual turtle graphic program usually draw shape regardless size
A shape one contains smaller version called Until hardly anybody explored fractal except kid learning Logo recreational mathematician
Today however fractal become important becase movie producer using computer graphic alternative expensive set model fancy special effect
It turn program like secret drawing realistic cloud mountain natural background computer
If want another challenging fractal project try writing program produce fractal snowflake If interested intellectually rigorous exploration turtle geometry continuing along line I started read Abelson diSessa MIT Press
I learned many thing chapter
hard book worth effort
The standard reference book fractal Benoit Mandelbrot Freeman
Mandelbrot gave fractal name first see serious us
chapter thread

Sign early access exclusive holiday deal event
valid new subscriber
Brand exclusion apply
Thank You You subscribed Dermstore Emails
Be sure check inbox special saving code
Hello Again
Thanks resubscribing
Welcome back
Sorry valid email address
Please enter email address format name Sign earn point towards discount favorite brand product
Meet Our Top Premium Skin Care Brands Products That Are Always Selling Out On Dermstore Our Most Popular Makeup Brands Why We Love Them Trending Hair Ingredients That Live Up Hype Benefits Sea Salt Soak Our Top Pick Vegan Skin Care Products We Ca Get Enough Of Drunk Elephant Dermstore Exclusive Happy Hour Kit Gift Guides Every List Shop Fave Makeup Devices More
Squigle Enamel Saver toothpaste pleasant way avoid wide variety mouth problem including canker sore gum disease plaque tartar cavity
Squigle whitens polish gently without harsh abrasive
In fact time le abrasive regular toothpaste
Tooth abrasion lead gum recession tooth sensitivity
Company Customer Service My Account New Subscribers Receive Off Follow Us On Company Customer Service My Account New Subscribers Receive Off Follow Us On You subscribed
Check inbox special saving code
Our Records indicate already subscribed
Oops error occurred
Please try adding email address

