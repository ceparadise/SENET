In single operation defined processor
The size length instruction varies widely little many multiple VLIW system
Most modern processor used instruction size bit
In architecture especially instruction fixed length typically corresponding architecture
On traditional architecture instruction includes specifying operation performed add content memory register zero specifier may specify memory location literal data
The operand specifier may determining meaning may fixed field
In architecture include many architecture multiple simultaneous operation operand specified single instruction
Instructions rarely specified using form may specified programmer using commonly may generated
There another general definition instruction related processor An instruction may representation element executable

An error occurred trying load video
Try refreshing page contact customer support
As member also get unlimited access lesson math English science history
Plus get practice test quiz personalized coaching help succeed
Want watch later
Maria Doctorate Education year experience teaching psychology math related course university level
Once find front classroom staring glazed eye student passively receiving lecture
You think Are actually getting
There must better way reach
learning process lesson come directly teacher
Instead
The key student actively engaged learning process making inquiry using critical thinking skill resolve problem testing hypothesis validation
This high level active student involvement strengthens connection learned concept
How facilitate indirect instruction
What role make sure instruction taking place
Let look four main strategy problem solving case study concept mapping reading meaning
There old adage state man fish feed day teach man fish feed lifetime
We could adjust say student answer solve single problem teach student solve problem solve rest
Helping student learn navigate problem solving give skill use future problem
deal identifying step taken order solve problem
Student group use problem solving indirect instruction science following scientific method art given set material idea produce artistic piece math technology subject
consist intense analysis singular event scenario
These best older student adjusted middle level education well
Students assigned one event
For example psychology course student might review Genie feral child criminology course may choose mob member middle school literature course might choose author Great Depression like Steinbeck
Get FREE access day create account
After assigning topic teacher take backseat role allow student discover learn together
Student group come together discus case study
This give student exposure intense review many example topic hand
Case study require high level critical thinking specific topic hope able generalize lesson learned larger population
drawn diagram line connecting idea together like map town connected street
The student start topic idea writes middle page circle
Any idea connect idea written around original circle
These new idea circled connected original line
This pattern continues thought exhausted
Concept map great younger student adjusted older one exercise student writing research paper
Any activity requires categorizing grouping idea section done concept mapping
Students use concept map classify animal group map outline English group historical event trait war social injustice terrorism
This activity qualifies indirect instruction student given task create map alone group
They leading answer investigating idea deeply
student practice reading analytical way
This goal get word right truly understand meaning behind word
After reading time student form group discus book
Depending academic level student compare contrast similar work simply share plot answer question group member
As student read form group discussion teacher passively involved merely facilitating group formation reading assignment
instruction come directly teacher
It
Four popular strategy incorporating indirect instruction classroom Did notice indirect instruction technique also employed student working group sharing idea discussing thought
Indirect instruction allows student guide learning process
To unlock lesson must Member
Already member
Did We college course prepare earn credit exam accepted college university
You test first two year college save thousand degree
Anyone earn regardless age education level
To learn visit Not sure college want attend yet
thousand article every imaginable degree area study career path help find school right
Get unbiased info need find right school
Browse area study degree level
Back To Course chapter lesson Next Lesson copyright
All trademark copyright property respective owner
All right reserved
Your Cart Empty
Please Choose Product
video lesson helped student
I learned month chemistry class Ashlee I aced CLEP exam earned Clair video lesson helped engage student
The video changed way I teach
The video accomplish would take entire class
Chris Students condition performed better receiving instruction
Department Education

An error occurred trying load video
Try refreshing page contact customer support
As member also get unlimited access lesson math English science history
Plus get practice test quiz personalized coaching help succeed
Want watch later
Bryan freelance writer specializes literature
He worked English instructor editor writer past year
Teaching hard work teacher ever deny
One biggest challenge teaching deciding approach material
One way divide teaching style separate direct instruction indirect instruction
In lesson take look one follow two different teacher incorporate classroom
With teacher usually give information explicit manner
Direct instruction usually started teacher telling student expectation performance
For example Garcia tell student beginning English class expects student able write simile end lesson
For teaching aspect direct instruction teacher may stand front class lecture student specific topic
Garcia writes important information literary device ask student copy information notebook
After student complete task may given worksheet quiz test understanding topic
The benefit direct instruction goal expectation extremely
Students know need order perform satisfactorily
This type lesson work well information need broken smaller part
It also work well introducing new information
If Garcia giving lesson personification student never encountered topic likely use direct instruction explain personification
The direct instruction may simply teacher verbally informing student definition include note example worksheet
The downfall direct instruction student may find engaging interesting passively listen teacher
Disinterest affect retention student struggle remember learned bored learning
teacher work like facilitator instructor
This type instruction relies heavily student involvement
For example Nora teaching personification might provide student sentence contains personification
Rather tell student definition even mention word Nora might ask notice sentence looking
She try elicit definition student without telling first
She might also encourage student talk group making round check assure group working toward understanding personification
Get FREE access day create account
The benefit indirect instruction student actively involved learning process
Motivated learner well get bored easily tend respond well
This type instruction also useful pattern new idea student may curious
Indirect instruction might best choice topic student idea may feel completely overwhelmed
Arguably might best shy student
teacher make expectation perfectly clear give definition explanation usually form lecture
Direct instruction work well unfamiliar topic well student might willing speak class
The downside method may engaging student affect retention
teacher put responsibility learning onto student
A teacher may ask student figure problem function facilitator rather instructor
Indirect instruction work well student active engaged wish
However may best choice topic student idea student shy
To unlock lesson must Member
Already member
Did We college course prepare earn credit exam accepted college university
You test first two year college save thousand degree
Anyone earn regardless age education level
To learn visit Not sure college want attend yet
thousand article every imaginable degree area study career path help find school right
Get unbiased info need find right school
Browse area study degree level
Back To Course chapter lesson Next Lesson copyright
All trademark copyright property respective owner
All right reserved
Your Cart Empty
Please Choose Product
video lesson helped student
I learned month chemistry class Ashlee I aced CLEP exam earned Clair video lesson helped engage student
The video changed way I teach
The video accomplish would take entire class
Chris Students condition performed better receiving instruction
Department Education

âãÏÓ obj Difference Between Direct And Indirect Instruction In Computer Architecture Softplicity endobj obj true false endobj obj endobj obj endobj obj endobj obj http Between Direct And Indirect Instruction In Computer Architecture endobj obj R R R R R endobj obj R R R R endobj obj R endobj obj stream üðnó æÉÃöçÝoÿ cåæqu J íþt
ÙÃâZ W äúä øç Ã ôïà á áAë n q ÇD ÐÜëJvà ÈòSÔ A WP Ùh ÎÙK ä çòµÏ j öóbjÒ Àúpp ÏX Ñ ÊÀ ëõÕ Ýÿ ã í æd ÈX q W Ô ég ïâp rÐoà ÿ Ûên endstream endobj obj endobj obj endobj obj R R R R endobj obj R R R R endobj obj endobj obj stream úPìÃ üÕùýãþøüûî ÿê ÿg çÇW Ið Ú è Å V È Ï Ëé Øn w ÁZ S Á DÌm Z ß Jª qM Hþòts
r
V åy cÍö ì J XÉ PD çHà
jqVZMÞLîJ b VÞN å ÑS ño n pú Î GÄ
ü ÿîJÌÿÈ ù ºóýg Iqê à tô JÜ ÅÀ
D ÌêÑB Z RøVËs ØÖ r ü endstream endobj obj endobj obj R R R endobj obj þÿ f f e r e n c e b e w e e n r e c n n r e c r e n g e n r u c n n r u c n e
R R endobj obj þÿ S u b j e c C e N e B C A C p u e r O r g n z n

Hi I need input opinion question

Under circumstance use instruction rather indirect instruction
Under circumstance use indirect instruction rather direct instruction

How facilitator use multiple instructional benefit learner
Hello welcome BrainMass today

Under circumstance use direct instruction rather indirect instruction
Under circumstance use indirect instruction rather direct instruction
I would use direct instruction teaching knowledge involves learner comprehending fact rule action sequence
This includes providing good lecture plenty explanation example opportunity student ask question work problem solution together understand
Direct Indirect Instruction

When would use instruction versus indirect instruction
Indirect instruction demanding yet one satisfying
What insight statement
Hi Interesting question
Let take closer look discussion example
RESPONSE
When would use direct instruction versus indirect instruction
It depends number factor
For example regarding instructional strategy direct versus indirect requires teacher taken consideration curriculum prior experience knowledge student learner interest student learning style developmental level learner
Such relies ongoing student assessment linked learning objective process
Although instructional strategy categorized distinction always
For example teacher may provide information lecture method direct instruction strategy using interpretive method ask student determine significance information presented indirect instruction strategy http strategy
However general guideline use direct indirect instruction
WHEN TO USE DIRECT INSTRUCTION The Direct instruction strategy highly among commonly used
This strategy includes method lecture didactic questioning explicit teaching practice drill demonstration
The direct instruction strategy effective providing detailed information encouraging skill acquisition promoting content memorization immediate recall introducing teaching method actively involving student knowledge construction practice drill
Direct instruction usually word teach present generalization class
lecture format illustrated example
It often considered
This solution examines use direct instruction versus indirect instruction well explores statement Indirect instruction demanding teacher yet one satisfying teaching strategy

In enables program indirectly access particular value
The reference said datum accessing datum called reference
A reference distinct datum
Typically reference data stored memory given system reference implemented data stored memory storage device
For reason reference often erroneously confused said point data
However reference may also implemented way offset difference datum address fixed base address abstractly
More broadly networking reference may address
The concept reference must confused value uniquely identify data item give access operation
References widely used especially efficiently pas large mutable data share data among various us
In particular reference may point variable record contains reference data
This idea basis many
References cause significant complexity program partially due possibility partially data reference whose analysis quite complicated
References increase flexibility object stored allocated passed area code
As long one access reference data one access data data need moved
They also make sharing data different code area easier keep reference
The mechanism reference varying implementation fundamental programming language feature common nearly modern programming language
Even language support direct use reference internal implicit use
For example calling convention implemented either explicit implicit use reference
primitive
Due intimate relationship underlying hardware one powerful efficient type reference
However also due relationship pointer require strong understanding programmer detail memory architecture
Because pointer store memory location address instead value directly inappropriate use pointer lead program particularly due
act like pointer accessed particular method
A abstract reference may represented various way
A common example FILE data structure used abstract file content
It usually represents file requesting file specific position within file content reading file
In reference may contain address identifier may also include embedded specification network protocol used locate access referenced object way information encoded serialized
Thus example description remote web service viewed form reference includes complete specification locate bind particular
A reference another example complete specification construct small software component called subsequently engage interaction local machine may gain access data replicated exists weakly consistent message stream
In case reference includes full set instruction recipe access data sense serf purpose identifier address memory
More generally reference considered piece data allows unique retrieval another piece data
This includes key
If set key set data object function defines type reference image key referring anything meaningful
An alternative representation function directed graph called
Here datum represented vertex edge datum refers datum
The maximum one
These graph valuable used separate accessible
In many data structure large complex object composed smaller object
These object typically stored one two way Internal storage usually efficient space cost reference metadata time cost associated dereferencing reference allocating memory smaller object
Internal storage also enhances keeping different part large object close together memory
However variety situation external storage preferred Some language support internal storage
In language object uniformly accessed reference
In first language used typical express reference using either raw memory address index table
These work somewhat tricky use address tell nothing value point even large interpret information encoded program logic
The result misinterpretation occur incorrect program causing bewildering error
One earliest opaque reference language simply containing two reference Lisp object including possibly con cell
This simple structure commonly used build singly also used build simple dotted list terminate null reference value
Another early language Fortran explicit representation reference use implicitly calling semantics
The still one popular type reference today
It similar assembly representation raw address except carry static used ensure data refers misinterpreted
However C violated using explicit conversion various pointer type pointer type integer misinterpretation still possible difficult
Its successor tried increase pointer new cast operator smart pointer still retained ability circumvent safety mechanism compatibility
A number popular mainstream language today adopted much opaque type reference usually referred simply
These reference type like C pointer indicating interpret data reference typesafe interpreted raw address unsafe conversion permitted
A reference best thought another object scalar variable row column array
There syntax dereference reference manipulate content referent directly
Fortran reference null
As language reference facilitate processing dynamic structure linked list queue tree
In setting concept data modified often make implicit use reference
In many functional language value persistent modified assignment
Assignable reference cell serve unavoidable purpose mutable reference imperative language make capability modified explicit
Such reference cell hold value given type replaced type value pointed
These mutable reference pointed different object lifetime
For example permit building circular data structure
The reference cell functionally equivalent array length
To preserve safety efficient implementation reference ML pointer arithmetic performed
It important note functional paradigm many structure would represented using pointer language like C represented using facility powerful mechanism
The programmer able enjoy certain property guarantee immutability programming even though compiler often us machine pointer hood
Some language like support string value contain name variable
When value regular reference dereferenced Perl considers symbolic reference give variable name given value
similar feature form syntax
Many object oriented language make extensive use reference
They may use reference access object
References also used call message passing frequently used perform unused object

An abstract model
It also referred
A realization ISA called
An ISA permit multiple implementation may vary physical size monetary cost among thing ISA serf
Software written ISA run different implementation ISA
This enabled different generation computer easily achieved development computer family
Both development helped lower cost computer increase applicability
For reason ISA one important abstraction today
An ISA defines everything need know order program computer
What ISA defines differs ISAs general ISAs define supported state semantics set comprises computer machine language model
An instruction set architecture distinguished set technique used particular processor implement instruction set
Processors different microarchitectures share common instruction set
For example implement nearly identical version radically different internal design
The concept distinct design specific machine developed IBM design phase
Prior NPL company computer designer free honor cost objective selecting technology also fashioning functional architectural refinement
The SPREAD compatibility objective contrast postulated single architecture series five processor spanning wide range cost performance
None five engineering design team could count able bring adjustment architectural specification way easing difficulty achieving cost performance objective
Some support ISA Microsoft implement translating bytecode commonly used code path native machine code
In addition virtual machine execute le frequently used code path interpretation see
implemented instruction set atop processor fashion
An ISA may classified number different way
A common classification architectural
A CISC many specialized instruction may rarely used practical program
A RISC simplifies processor efficiently implementing instruction frequently used program le common operation implemented subroutine resulting additional processor execution time offset infrequent use
Other type include VLIW architecture closely related LIW EPIC architecture
These architecture seek exploit le hardware RISC CISC making responsible instruction issue scheduling
Architectures even le complexity studied MISC OISC
These theoretically important type commercialized
built discrete
On processing architecture given instruction may specify More complex operation built combining simple instruction executed sequentially otherwise directed instruction
Examples operation common many instruction set include Processors may include complex instruction instruction set
A single complex instruction something may take many instruction computer
Such instruction instruction take multiple step control multiple functional unit otherwise appear larger scale bulk simple instruction implemented given processor
Some example complex instruction include Complex instruction common CISC instruction set RISC instruction set RISC instruction set may include well
RISC instruction set generally include ALU operation memory operand instruction move large block memory RISC instruction set include instruction perform arithmetic operation multiple piece data time
SIMD instruction ability manipulating large vector matrix minimal time
SIMD instruction allow easy algorithm commonly involved sound image video processing
Various SIMD implementation brought market trade name
On traditional architecture instruction includes specifies operation perform zero specifier may specify memory location literal data
The operand specifier may determining meaning may fixed field
In VLIW architecture include many architecture multiple simultaneous opcodes operand specified single instruction
Some exotic instruction set opcode field TTA operand
The instruction set lack operand specifier field including NOSC
Conditional instruction often predicate bit encode specific condition cause operation performed rather performed
For example conditional branch instruction executed branch taken condition true execution proceeds different part program executed branch taken condition false execution continues sequentially
Some instruction set also conditional move move executed data stored target location condition true executed target location modified condition false
Similarly IBM conditional store instruction
A instruction set include predicate field every instruction called
The size length instruction varies widely little four bit many hundred bit VLIW system
Processors used instruction size bit
The longest possible instruction byte bit
Within instruction set different instruction may different length
In architecture notably RISC typically corresponding architecture
In architecture instruction variable length typically integral multiple
Some variable encoding two fixed usually encoding instruction mixed freely must switched branch exception boundary
A RISC instruction set normally fixed instruction length often byte bit whereas typical CISC instruction set may instruction widely varying length byte
instruction le complicated handle instruction several reason check whether instruction straddle cache line virtual memory page boundary instance therefore somewhat easier optimize speed
The instruction constituting program rarely specified using internal numeric form may specified programmer using commonly may generated
The design instruction set complex issue
There two stage history microprocessor
The first CISC Complex Instruction Set Computer many different instruction
In however place like IBM research found many instruction set could eliminated
The result RISC Reduced Instruction Set Computer architecture us smaller set instruction
A simpler instruction set may offer potential higher speed reduced processor size reduced power consumption
However complex set may optimize common operation improve memory efficiency simplify programming
Some instruction set designer reserve one opcodes kind
For example us us eight code CF DF EF FF use code range
Fast virtual machine much easier implement instruction set meet
The used much easier implement unprogrammed state memory interpreted
On system multiple processor algorithm much easier implement instruction set includes support something atomic
Any given instruction set implemented variety way
All way implementing particular instruction set provide implementation instruction set able run executables
The various way implementing instruction set give different tradeoff cost performance power consumption size etc
When designing processor engineer use block electronic circuitry often designed separately adder multiplexer counter register ALUs etc
Some kind often used describe decoding sequencing instruction ISA using physical microarchitecture
There two basic way build implement description although many design use middle way compromise Some design use combination hardwired design microcode control unit
Some CPU design use compile instruction set writable inside CPU processor FPGA
An ISA also software
Naturally due interpretation overhead slower directly running program emulated hardware unless hardware running emulator order magnitude faster
Today common practice vendor new ISAs microarchitectures make software emulator available software developer hardware implementation ready
Often detail implementation strong influence particular instruction selected instruction set
For example many implementation allow single memory load memory store per instruction leading RISC
For another example early way implementing led
The demand digital signal processing pushed opposite instruction implemented particular way
For example perform digital filter fast enough MAC instruction typical DSP must use kind fetch instruction two data word simultaneously requires
In early computer memory expensive minimizing size program make sure would fit limited memory often central
Thus combined size instruction needed perform particular task important characteristic instruction set
Computers high code density often complex instruction procedure entry parameterized return loop etc
therefore retroactively named
However typical frequent CISC instruction merely combine basic ALU operation add access one operand memory using direct indirect indexed etc
Certain architecture may allow two three operand including result directly memory may able perform function automatic pointer increment etc
instruction set may even complex powerful instruction
first widely implemented period rapidly growing memory subsystem
They sacrifice code density simplify implementation circuitry try increase performance via higher clock frequency register
A single RISC instruction typically performs single operation add register load memory location register
A RISC instruction set normally fixed whereas typical CISC instruction set instruction widely varying length
However RISC computer normally require often longer instruction implement given task inherently make le optimal use bus bandwidth cache memory
Certain embedded RISC ISAs like typically exhibit high density owing technique called code compression
This technique pack two instruction one instruction unpacked decode stage executed two instruction
MISC form separate instruction multiple instruction fit single machine word
These type core often take little silicon implement easily realized form
The code density MISC similar code density RISC increased instruction density offset requiring primitive instruction task
There research mechanism improving code density
The mathematics describes challenge limit
Instruction set may categorized maximum number operand specified instruction
In example follow direct calculated address referring memory cell refer machine register
Due large number bit needed encode three register instruction RISC architecture instruction invariably design Atmel AVR version
RISC architecture instruction usually design architecture
Each instruction specifies number operand register memory location immediate value
Some instruction give one operand implicitly stored top implicit register
If operand given implicitly fewer operand need specified instruction
When destination operand explicitly specifies destination additional operand must supplied
Consequently number operand encoded instruction may differ mathematically necessary number argument logical arithmetic operation
Operands either encoded opcode representation instruction else given value address following instruction
measure availability free register point time program execution
Register pressure high large number available register use thus higher register pressure often register content must memory
Increasing number register architecture decrease register pressure increase cost
While embedded instruction set suffer extremely high register pressure small register set RISC ISAs like enjoy low register pressure
CISC ISAs like offer low register pressure despite smaller register set
This due many addressing mode optimization addressing memory operand ALU instruction absolute addressing addressing spill CISC ISAs offer

A instruction cause computer begin executing different instruction sequence thus deviate default behavior executing instruction order
may also refer act switching execution different instruction sequence result executing branch instruction
A branch instruction either always result branching may may cause branching depending condition
Branch instruction used implement program loop conditionals executing particular sequence instruction certain condition satisfied
Mechanically branch instruction change PC
The program counter memory address next instruction
Therefore branch cause CPU begin fetching instruction different sequence memory cell
When branch CPU program counter set jump instruction
So next instruction becomes instruction address
Therefore flow control change
When branch CPU program counter unchanged
Therefore next instruction executed instruction branch instruction
Therefore flow control unchanged
The term used referring program high level language well program written
In branch usually take form various form encapsulate instruction sequence executed condition satisfied
Unconditional branch instruction used unconditionally jump begin execution different instruction sequence
Machine level branch instruction sometimes called instruction
Machine level jump instruction typically form latter may depending condition
Usually distinct form jump often called subroutine invokations known automatically save originating address return address stack allowing single subroutine invoked multiple location code
In CPUs earlier instruction set condition flag register
The earlier instruction may instruction
It often close branch though necessarily instruction branch
The stored condition used branch
This temporary information often stored flag register may also located elsewhere
A flag register design simple slower simple computer
In fast computer flag register place bottleneck speed instruction could otherwise operate parallel several need set flag bit particular sequence
There also machine particular instruction condition may checked jump instruction
In simple computer design comparison branch execute arithmetic use power flag register branch
In fast computer design comparison branch run faster flag register branch comparison branch access register parallelism using CPU mechanism calculation
Some early simple CPU architecture still found microcontrollers may implement conditional jump rather conditional skip next instruction operation
A conditional jump call thus implemented conditional skip unconditional jump call instruction
Depending jump instruction typically shortened form word word often along informative letter extra parameter representing condition
Sometimes detail included well range jump offset size special addressing mode used locate actual effective offset
This table list machine level branch jump instruction found several architecture VAX others set signal clear signal
ARM PIC others opposite subtractive operation
This inverted function carry flag certain instruction marked part table otherwise noted
However carry additive operation handled way architecture
To achieve high performance modern processor
They consist multiple part partially process instruction feed result next stage pipeline start working next instruction program
This design expects instruction execute particular unchanging sequence
Conditional branch instruction make impossible know sequence
So conditional branch cause stall pipeline restarted different part program
Several technique improve speed reducing stall conditional branch
Historically branch prediction took statistic used result optimize code
A programmer would compile test version program run test data
The test code counted branch actually taken
The statistic test code used compiler optimize branch released code
The optimization would arrange fastest branch direction taken would always frequently taken control flow path
To permit CPUs must designed least predictable branch timing
Some CPUs even instruction set designed branch hint compiler tell CPU branch taken
The problem software branch prediction requires complex software development process
To run software hardware moved statistic electronics
Branch predictor part processor guess outcome conditional branch
Then processor logic gamble guess beginning execute expected instruction flow
An example simple hardware branch prediction scheme assume backward branch
smaller program counter taken part loop forward branch larger program counter taken leave loop
Better branch predictor developed validated statistically running simulation variety test program
Good predictor usually count outcome previous execution branch
Faster expensive computer run faster investing better branch prediction electronics
In CPU hardware branch prediction branch hint let compiler presumably superior branch prediction override hardware simplistic branch prediction
Some logic written without branch fewer branch
It often possible use instead branch
Another technique
In approach one instruction branch always executed
Therefore computer use instruction useful work whether pipeline stall
This approach historically popular computer
In family compatible CPUs complicates multicycle CPUs pipeline faster CPUs pipeline superscalar CPUs execute instruction order

