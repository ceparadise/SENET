
The Principle Least Astonishment sound Monty Python
But key concept software interface design
Which button web page
Most people would say B button
However A also could button
We used B button text colored rectangle page web browser signal button way submit information view page perform action
If A button people realize A work
If create button web page choose A button style likely surprise astonish people use page
If use B button style almost every person understand
The difference button style A B example Principle Least Astonishment
People design build software computer interface create work way people expect
Their work astonish surprise people
People fill form example expect see text colored rectangle bottom need clicked submit data
The full article subscriber
read rest article PLUS often numerous link story
The cost
month annual subscription
This magazine reader supported reader like
Subscribers support independent research writing well daily operation
Subscribers also help keep magazine free annoying ad
Did learn something new computer science coding article link
If please subscribe today
This magazine reader supported people like
Subscribers support independent research writing well daily operation
Subscribers also help keep magazine free annoying ad
Tim writer technologist enjoys teaching tech people
He many year experience web site application business technical creative role
He wife two kid teenager mad video game
Here enthusiastic teacher using technology help student discover world awesome place explore
It hard create simple object building SketchUp software
Here simple introduction lot link learn
Resources learn national standard computer science implement classroom
The Principle Least Astonishment sound Monty Python
But key concept software interface design
People amazing thing technology case creating music tossed computer hard drive circuit board electronic garbage
All programming language way find Elvis difficult learn
software fun way engage people interested computing necessarily coding computer science
Many language created younger kid help teacher classroom setting
Links bottom August article collected one place print share bookmark
Interesting story computer science software programming technology August
This language developed exists solely introduce child basic programming concept teach programming
Not funny phrase math computer science problem help solve real world problem
A magazine published time year magazine explores computer science software programming
It kid parent teacher adult want learn fun technology
Online access website content
A print subscription available US includes full online access value
Subscribers support independent research writing computer science programming
Subscribe price includes online access price includes online access price includes online access You past print issue magazine based availability
Community school library
Or
Arrives every two month new issue published
Owl Hill Media LLC ISSN online ISSN print

Stack Exchange network consists Q A community including largest trusted online community developer learn share knowledge build career
In programming called Principle Least Astonishment
How concept related designing good APIs
Is something applicable object oriented programming permeate programming technique well
Is related principle single thing method well
The Principle Least Astonishment applicable wide range design activity computing though often astonishing thing happen
Consider elevator button next say call
When press button payphone phone ring rather calling elevator floor
This would considered astonishing
The correct design would put call button next phone rather elevator
Next think web page pop window show window style error button
People click button thinking operating system instead go another web page
This astonishes user
When come API Having method one distinct thing contributes reduction astonishment however seperate principle API design
The four principle often touted good API design one instance presentation
The link end particular one make good reading It potentially astonishing someone class try everything needing two class single thing
It likewise potentially astonishing someone mess internals odd way cover I find open class ruby source astonishment
It also likewise astonishing find two method apparently thing
As principle least astonishment underlies API design sufficient simply say astonishing API
Further reading UI perspective IBM developer blog titled Principle least astonishment API designer prevent user saying
Some example astonishment varying language
And many example various language APIs
Your job API writer prevent
Things named typed way blatantly obvious call API
Include ample documentation possible
Basically people read documentation thoroughly figure READ code written API probably wrong
Here example astonishment happened recently
I got lost road pulled somewhat frantically I late punched intersection GPS
I clicked Go put hand back wheel got loud warning GPS updated requiring acknowledge
My thought kidding
telling
I need take hand wheel acknowledge
Astonishment surface interface typically UI I suppose could also API behaves unexpected manner
I would say permeates interface well take underlying software support truly interface
By posting answer agree
asked viewed active site design logo Stack Exchange Inc user contribution licensed

The alternatively least applies design standpoint
A typical formulation principle If necessary feature high astonishment factor may necessary redesign feature
In general engineering design context principle taken mean component system behave manner consistent user component likely expect behave user astonished way behaves
A formulation People part system
The design match user experience expectation
The choice least surprising behavior depend expected example
In practical term principle aim exploit knowledge user minimize instance designing interface borrow heavily functionally similar analogous program user likely familiar
User expectation respect may closely related particular
For example command line program expected follow certain convention respect program expected follow certain convention respect
In abstract setting like expectation method name intuitively match behavior another example
This practice also involves application sensible
When two element interface conflict ambiguous behavior least surprise particular try think behavior least surprise someone us program rather behavior natural knowing inner working program
A web site could declare autofocus page loaded search field field
Sites offering often allow pressing see available shortcut
Examples include
The almost always opening help program associated application similarly Linux
The corresponding key combination
Users expect help screen similar help service press key
Software binding key feature likely cause astonishment help appears
known exploit user familiarity regular shortcut key
In programming good example principle common function exists language used convert integer value
The usually optional argument assumed representing
Other base usually supported like specified explicitly radix argument specified base assumed
Notably JavaScript originally adopt behaviour resulted developer confusion software bug

Wikipedia Advertizing Wikipedia The applies design
It alternatively referred
A textbook formulation People part system
The design match user experience expectation mental model
What least surprising may however depend expected audience
end user programmer system administrator
In practical term principle aim exploit user knowledge way minimize learning curve instance designing interface borrowing heavily functionally similar analogous program user likely familiar
User expectation respect may closely related particular computing platform tradition
For example command line program expected follow certain convention respect switch program also expected follow certain convention respect
In abstract setting like API expectation function method name intuitively match behavior another example
This practice also involves application sensible
When two element interface conflict ambiguous behaviour least surprise particular try think behavior least surprise someone us program rather behavior natural knowing inner working program
Peter Seebach This entry Wikipedia leading encyclopedia
It may reviewed professional editor see content Advertising Webmaster Solution Alexandria A window information Sensagent triggered word webpage
Give contextual explanation translation site
Try get SensagentBox With visitor site access reliable information million page provided
Choose design fit site
Business solution Improve site content Add new content site Sensagent XML
Crawl product add Get XML access reach best product
Index image define metadata Get XML access fix meaning metadata
Please describe idea
WordGame The English word game Lettris curious game brick square shape different content
Each square carry letter
To make square disappear save space square assemble English word left right falling square
boggle give minute find many word letter grid letter
You also try grid letter
Letters must adjacent longer word score better
See get grid Hall Fame
English dictionary Main reference Most English definition provided
English thesaurus mainly derived The Integral Dictionary TID
English Encyclopedia licensed Copyrights The wordgames provided Memodata
The web service
The offered sensAgent
Translation Change target language find translation
Tips browse semantic field see two language learn
computed Copyright sensagent Corporation Online Encyclopedia Thesaurus Dictionary definition
All right reserved
My account Advertising Cookies help u deliver service
By using service agree use cooky

I curious reasoning behind reverting example
I know great article needed example pointed page I hoped could least refined cut length made point coherent etc
rather deleted entirely
If severe factual inaccuracy misunderstanding could someone please tell I went wrong suggest way improve understanding topic
Also edit reason included term fmt I ca find meaning
Is kind shorthand
EDIT forgot sign
December UTC Almost every single reference I seen principle call Principle Least Surprise
In particular Ruby internals developer ESR Pragmatic Programmers spring mind example relatively well known example people know talking use POLS variation
So specific reason article Principle Least Astonishment rather Principle Least Surprise
If original formulation us name thus making formally correct term I like know
Perhaps article make mention POLA preferred term Wikipedia opposed POLS despite appears greater frequency use POLS
additional edit Sorry I forgot sign I first wrote
November UTC year Computer Science I always heard called POLA POLS
I believe first exposure came Unix fortune program I say pretty authoritative
For somewhat objective measure Google give twice many hit POLA POLS phrase quoted v respectively POLA clearly seems like better choice master article
All aside biggest point mind supposed statement principle though current article unfortunately drain humor POLA hell lot funnier
July UTC I thought POLA commonly referred Principle Least Authority
Here reference fortune program
Rule Least Surprise In interface design always least surprising thing
aka Principle Least Astonishment esr The Art Unix Programming Removing note article TODO It would really helpful multiple example
I add I know I asking MikeSchinkel October UTC Because clearly belongs rather article
It doesnt make le right though
As far I tell statement false
No one call
The phrase seemed odd I googled got zero link outside wikipedia clone

Tracing page history seems come
The earliest edit page includes phrase although comment indicates probably earlier version
Was attempt someone popularize pet name theory
Is phrase Principle Maximum Boredom wikipedia coinage
Nov UTC I removed great wonderful book heuristic also link whatsoever people see great wonderful Apr UTC I removing paragraph This article well example given made laugh Programmer example actually put question I program macro recording way desired way undesired result macro recorded hmmmm one astonish user least relavant example December UTC The article explain origin phrase idea
A bit Googling come real explanation
Does anyone know real story
October UTC So I one think entirely bogus principle
What surprise one person often perfectly expected another one
In second example I quite surprised I issued shutdown system stayed someone else issued shutdown concurrently later canceled
In situation behaviour surprise one two user
I go far assert every single example true violation principle
situation unambiguously established two different behaviour le surprising simply bug underlying program
Can anybody name situation NOT talking bug
May UTC In POP system use work required change status order issued paid
There clue user interface
I discovered emailing order
Well I damn well astonished
February UTC You ca say one two action likely surprise user
It depends actually user want
Also think consequence programmer chooses alternative
In example recording keystroke macro could well user want quit program halfways recording macro something requires close whatever
They would surprised pressed like used nothing happens
In opinion another way better reason selecting record closedown instead actually closedown alternative would cumbersome user
It would require anyone want record closedown action macro enter editor recorded macro type whatever command cause program close
With alternative option available without additional knowledge
Personally I would always select record closedown
I would never even look option surprise user simply right way
Yes interesting paradox As technical writer thus professional idiot I suggest
The user recording macro press

A dialog box appears You pressed usually exit
What want
option button Add macro
When run macro cause exit
Ignore continue recording
Cancel recording exit
button OK The first option selected default
If user chooses dialog box appears prompt user save macro macro ca contain instruction
If user chooses third option app prompt user save unsaved content normally would exiting
And yes I realize may transgressing scope article concern one two example cite
Perhaps example would better
You arguing principle absolute
That may true
However phrase used express point view even though may subject perspective
In software design phrase common used mean design simple seem obvious uninitiated
May UTC

PsyPersepctive The applies design software design
It alternatively referred
A textbook formulation People part system
The design match user experience expectation mental model
What least surprising may however depend expected audience
end user programmer system administrator
In practical term principle aim exploit user knowledge way minimize learning curve instance designing interface borrowing heavily functionally similar analogous program user likely familiar
User expectation respect may closely related particular computing platform tradition
For example Unix command line program expected follow certain convention respect switch GUI widget Microsoft Windows program also expected follow certain convention respect
In abstract setting like API expectation function method name intuitively match behavior another example
This practice also involves application sensible
When two element interface conflict ambiguous behaviour least surprise particular try think behavior least surprise someone us program rather behavior natural knowing inner working program

Today post lightly edited repost dedicated user Autodesk medium entertainment product
I came list principle help recent C training I gave I thought member community could appreciate principle interesting insight share
The principle good programming closely related principle good design engineering
The following programming principle helped year become better programmer I believe help developer become efficient produce code easier maintain fewer defect
This probably single fundamental tenet programming avoid repetition
Many programming construct exist solely purpose
loop function class
As soon start repeating
long expression series statement concept create new abstraction
Related DRY abstraction principle significant piece functionality program implemented one place source Simplicity avoiding complexity always key goal
Simple code take le time write fewer bug easier modify
You try add functionality need
A good question ask self programming simplest thing could possibly work This help keep u path towards simplicity design
This actually title book Steve Krug web usability also relevant programming
The point code easily read understood minimum effort required
If code requires much thinking observer understand probably stand simplified Software entity class module function etc
open extension closed modification
In word write class people modify write class people extend
Almost code worth writing worth maintaining future either someone else
The future maintain code often remembers much code complete stranger might well always write someone else
A memorable way remember code person end maintaining code violent psychopath know The principle least astonishment usually referenced regard user interface principle applies written code
Code surprise reader little possible
The mean following standard convention code comment name suggest potentially surprising side effect avoided much possible
A component code
class function perform single well defined task
Any section code code block function class etc minimize dependency area code
This achieved using shared variable little possible
coupling often sign computer system good design combined high cohesion support general goal high readability Code similar functionality found within
Hiding implementation detail allows change implementation code component minimally affecting module use component
Code component communicate direct relation
class inherit object contain object passed argument etc
even think optimization unless code working slower want
Only start thinking optimizing aid empirical data
We forget small efficiency say time premature optimization root evil Donald Knuth
Not pithy good principle
Reusing code improves code reliability decrease development time
Different area functionality managed distinct minimally overlapping module code
This subtitle book Kent Beck also considered tenet extreme programming agile methodology general
Many principle based concept expect welcome change
In fact old software engineering principle like minimizing coupling related directly requirement making code easier change
Whether extreme programming practitioner approach writing code make sense
Have opinion
Readers already posted weblog entry
Why
If like notified whenever Christopher Diggins add new entry subscribe

Computer science study theory experimentation engineering form basis design use computer
Computer science discipline span theory practice
It requires thinking abstract term concrete term
The practical side computing Learn select topic computer science algorithm solve common problem computer science measure efficiency solution cryptography Welcome Williams College Computer Science Department
We faculty eleven professor active researcher range area including On page find Springer journal ebooks proceeding area Computer Science serving researcher professional lecturer student
Search Accredited Online Computer Science Degree Degree WPI Computer Science department combine diverse discipline stay forefront society developing technology need
Advance Your Skills Without Interrupting Your Career
Learn More
Purdue Engineering Online Interdisciplinary MSE Page result sec


